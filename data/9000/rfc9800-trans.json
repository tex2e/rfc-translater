{
  "title": {
    "text": "RFC 9800 - Compressed SRv6 Segment List Encoding",
    "ja": "RFC 9800 - 圧縮されたSRV6セグメントリストエンコーディング"
  },
  "number": 9800,
  "created_at": "2025-07-01 23:24:06.990159+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                     W. Cheng, Ed.\nRequest for Comments: 9800                                  China Mobile\nUpdates: 8754                                                C. Filsfils\nCategory: Standards Track                            Cisco Systems, Inc.\nISSN: 2070-1721                                                    Z. Li\n                                                     Huawei Technologies\n                                                             B. Decraene\n                                                                  Orange\n                                                            F. Clad, Ed.\n                                                     Cisco Systems, Inc.\n                                                               June 2025",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Compressed SRv6 Segment List Encoding",
      "section_title": true,
      "ja": "圧縮されたSRV6セグメントリストエンコーディング"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "section_title": true,
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "Segment Routing over IPv6 (SRv6) is the instantiation of Segment Routing (SR) on the IPv6 data plane. This document specifies new flavors for the SRv6 endpoint behaviors defined in RFC 8986, which enable the compression of an SRv6 segment list. Such compression significantly reduces the size of the SRv6 encapsulation needed to steer packets over long segment lists.",
      "ja": "IPv6（SRV6）のセグメントルーティングは、IPv6データプレーンのセグメントルーティング（SR）のインスタンス化です。このドキュメントは、RFC 8986で定義されたSRV6エンドポイント動作の新しいフレーバーを指定し、SRV6セグメントリストの圧縮を可能にします。このような圧縮により、長いセグメントリストにパケットを操縦するために必要なSRV6カプセル化のサイズが大幅に削減されます。"
    },
    {
      "indent": 3,
      "text": "This document updates RFC 8754 by allowing a Segment List entry in the Segment Routing Header (SRH) to be either an IPv6 address, as specified in RFC 8754, or a REPLACE-CSID container in packed format, as specified in this document.",
      "ja": "このドキュメントは、RFC 8754で指定されているように、セグメントルーティングヘッダー（SRH）のセグメントリストエントリ（SRH）のIPv6アドレス、またはこのドキュメントで指定されているように、梱包された形式の置換CSIDコンテナのいずれかを許可することにより、RFC 8754を更新します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "section_title": true,
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準トラックドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。インターネット標準の詳細については、RFC 7841のセクション2で入手できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9800.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https://www.rfc-editor.org/info/rfc9800で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "section_title": true,
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2025 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2025 IETF Trustおよび文書著者として特定された人。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、改訂されたBSDライセンスで説明されている保証なしで提供されるように、改訂されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "section_title": true,
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Terminology\n  2.1.  Requirements Language\n3.  Basic Concepts\n4.  SR Segment Endpoint Flavors\n  4.1.  NEXT-CSID Flavor\n    4.1.1.  End with NEXT-CSID\n    4.1.2.  End.X with NEXT-CSID\n    4.1.3.  End.T with NEXT-CSID\n    4.1.4.  End.B6.Encaps with NEXT-CSID\n    4.1.5.  End.B6.Encaps.Red with NEXT-CSID\n    4.1.6.  End.BM with NEXT-CSID\n    4.1.7.  Combination with PSP, USP, and USD Flavors\n  4.2.  REPLACE-CSID Flavor\n    4.2.1.  End with REPLACE-CSID\n    4.2.2.  End.X with REPLACE-CSID\n    4.2.3.  End.T with REPLACE-CSID\n    4.2.4.  End.B6.Encaps with REPLACE-CSID\n    4.2.5.  End.B6.Encaps.Red with REPLACE-CSID\n    4.2.6.  End.BM with REPLACE-CSID\n    4.2.7.  End.DX and End.DT with REPLACE-CSID\n    4.2.8.  Combination with PSP, USP, and USD Flavors\n5.  CSID Allocation\n  5.1.  Global CSID\n  5.2.  Local CSID\n  5.3.  Recommended Installation of CSIDs in FIB\n6.  SR Source Node\n  6.1.  SID Validation for Compression\n  6.2.  Segment List Compression\n  6.3.  Rules for Segment Lists Containing NEXT-CSID Flavor SIDs\n  6.4.  Rules for Segment Lists Containing REPLACE-CSID Flavor SIDs\n  6.5.  Upper-Layer Checksums\n7.  Inter-Domain Compression\n  7.1.  End.LBS: Locator-Block Swap\n    7.1.1.  End.LBS with NEXT-CSID\n    7.1.2.  End.LBS with REPLACE-CSID\n  7.2.  End.XLBS: L3 Cross-Connect and Locator-Block Swap\n    7.2.1.  End.XLBS with NEXT-CSID\n    7.2.2.  End.XLBS with REPLACE-CSID\n8.  Control Plane\n9.  Operational Considerations\n  9.1.  Flavor, Block, and CSID Length\n  9.2.  GIB/LIB Usage\n  9.3.  Pinging a SID\n  9.4.  ICMP Error Processing\n10. Applicability to Other SRv6 Endpoint Behaviors\n11. Security Considerations\n12. IANA Considerations\n  12.1.  SRv6 Endpoint Behaviors\n13. References\n  13.1.  Normative References\n  13.2.  Informative References\nAppendix A.  Complete Pseudocodes\n  A.1.  End with NEXT-CSID\n  A.2.  End.X with NEXT-CSID\n  A.3.  End.T with NEXT-CSID\n  A.4.  End.B6.Encaps with NEXT-CSID\n  A.5.  End.BM with NEXT-CSID\n  A.6.  End with REPLACE-CSID\n  A.7.  End.X with REPLACE-CSID\n  A.8.  End.T with REPLACE-CSID\n  A.9.  End.B6.Encaps with REPLACE-CSID\n  A.10. End.BM with REPLACE-CSID\nAcknowledgements\nContributors\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Segment Routing (SR) architecture [RFC8402] describes two data plane instantiations of SR: SR over MPLS (SR-MPLS) and SR over IPv6 (SRv6).",
      "ja": "セグメントルーティング（SR）アーキテクチャ[RFC8402]は、MPLS（SR-MPLS）上のSRの2つのデータプレーンインスタンス化とIPv6経由のSRの2つのデータプレーンインスタンス化について説明しています。"
    },
    {
      "indent": 3,
      "text": "SRv6 Network Programming [RFC8986] builds upon the IPv6 Segment Routing Header (SRH) [RFC8754] to define a framework for constructing a network program with topological and service segments.",
      "ja": "SRV6ネットワークプログラミング[RFC8986]は、IPv6セグメントルーティングヘッダー（SRH）[RFC8754]に基づいて、トポロジーおよびサービスセグメントを使用したネットワークプログラムを構築するためのフレームワークを定義します。"
    },
    {
      "indent": 3,
      "text": "Some SRv6 applications, such as strict path traffic engineering, may require long segment lists. Compressing the encoding of these long segment lists in the packet header can significantly reduce the header size. This document specifies new flavors to the SRv6 endpoint behaviors defined in [RFC8986] that enable a compressed encoding of the SRv6 segment list. This document also specifies new SRv6 endpoint behaviors to preserve the compression efficiency in multi-domain environments.",
      "ja": "厳格なパストラフィックエンジニアリングなど、一部のSRV6アプリケーションには、長いセグメントリストが必要になる場合があります。これらの長いセグメントリストのエンコードをパケットヘッダーに圧縮すると、ヘッダーサイズを大幅に削減できます。このドキュメントは、SRV6セグメントリストの圧縮エンコードを可能にする[RFC8986]で定義されたSRV6エンドポイント動作の新しいフレーバーを指定します。このドキュメントは、マルチドメイン環境での圧縮効率を維持するために、新しいSRV6エンドポイント動作も指定しています。"
    },
    {
      "indent": 3,
      "text": "The SRv6 endpoint behaviors defined in this document leverage the SRv6 data plane defined in [RFC8754] and [RFC8986]; the behaviors are compatible with the SRv6 control plane extensions for IS-IS [RFC9352], OSPF [RFC9513], and BGP [RFC9252].",
      "ja": "このドキュメントで定義されているSRV6エンドポイントの動作は、[RFC8754]および[RFC8986]で定義されているSRV6データプレーンを活用しています。動作は、IS [RFC9352]、OSPF [RFC9513]、およびBGP [RFC9252]のSRV6コントロールプレーン拡張機能と互換性があります。"
    },
    {
      "indent": 3,
      "text": "This document updates [RFC8754] by allowing a Segment List entry in the SRH to be either an IPv6 address, as specified in [RFC8754], or a REPLACE-CSID container in packed format, as specified in Section 4.2.",
      "ja": "このドキュメントは、[RFC8754]で指定されているように、SRHのセグメントリストエントリをIPv6アドレス、またはセクション4.2で指定されているように、梱包された形式の置換CSIDコンテナのいずれかを許可することにより、[RFC8754]を更新します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "This document leverages the terms defined in [RFC8402], [RFC8754], and [RFC8986], in particular segment, segment list, Segment Identifier (SID), SID list, SR policy, prefix segment, adjacency segment, SRH, SR domain, SR source node, SR segment endpoint node, transit node, SRv6 endpoint behavior, flavor, SID block, locator, function, and argument. The reader is assumed to be familiar with this terminology.",
      "ja": "このドキュメントは、[RFC8402]、[RFC8754]、および[RFC8986]で定義されている用語を活用します。SIDブロック、ロケーター、機能、および引数。読者は、この用語に精通していると想定されています。"
    },
    {
      "indent": 3,
      "text": "This document introduces the following new terms:",
      "ja": "このドキュメントでは、次の新しい用語を紹介します。"
    },
    {
      "indent": 3,
      "text": "Locator-Block:",
      "ja": "ロケーターブロック："
    },
    {
      "indent": 12,
      "text": "The most significant bits of a SID locator that represent the SRv6 SID block. The Locator-Block is referred to as \"B\" in Section 3.1 of [RFC8986].",
      "ja": "SRV6 SIDブロックを表すSIDロケーターの最も重要なビット。ロケーターブロックは、[RFC8986]のセクション3.1で「B」と呼ばれます。"
    },
    {
      "indent": 3,
      "text": "Locator-Node:",
      "ja": "ロケーターノード："
    },
    {
      "indent": 12,
      "text": "The least significant bits of a SID locator that identify the SR segment endpoint node instantiating the SID. The Locator-Node is referred to as \"N\" in Section 3.1 of [RFC8986].",
      "ja": "SIDをインスタンス化するSRセグメントエンドポイントノードを識別するSIDロケーターの最も有意なビット。ロケーターノードは、[RFC8986]のセクション3.1の「n」と呼ばれます。"
    },
    {
      "indent": 3,
      "text": "Compressed-SID (CSID):",
      "ja": "圧縮-SID（CSID）："
    },
    {
      "indent": 12,
      "text": "A compressed encoding of a SID. The CSID includes the Locator-Node and Function bits of the SID being compressed. If either constituent of the SID is empty (zero length), then the same applies to its CSID encoding.",
      "ja": "SIDの圧縮エンコード。CSIDには、圧縮されているSIDのロケーターノードと機能ビットが含まれます。SIDの構成要素が空（ゼロの長さ）のいずれかの場合、そのCSIDエンコーディングにも同じことが当てはまります。"
    },
    {
      "indent": 3,
      "text": "CSID container:",
      "ja": "CSIDコンテナ："
    },
    {
      "indent": 12,
      "text": "A 128-bit IPv6 address that functions as a container holding a list of one or more CSIDs and the Argument (if any) of the last CSID.",
      "ja": "1つ以上のCSIDのリストを保持しているコンテナとして機能する128ビットIPv6アドレスと、最後のCSIDの引数（もしあれば）。"
    },
    {
      "indent": 3,
      "text": "CSID sequence:",
      "ja": "CSIDシーケンス："
    },
    {
      "indent": 12,
      "text": "A group of one or more consecutive SID list entries encoding the common Locator-Block and at least one CSID container.",
      "ja": "共通のロケーターブロックと少なくとも1つのCSIDコンテナをエンコードする1つ以上の連続したSIDリストエントリのグループ。"
    },
    {
      "indent": 3,
      "text": "Compressed SID list:",
      "ja": "圧縮SIDリスト："
    },
    {
      "indent": 12,
      "text": "A segment list encoding that reduces the packet header length thanks to one or more CSID sequences. A compressed SID list also contains zero, one, or more uncompressed SIDs.",
      "ja": "1つ以上のCSIDシーケンスのおかげで、パケットヘッダーの長さを削減するセグメントリストエンコード。圧縮されたSIDリストには、ゼロ、1つ、またはより非圧縮されていないSIDも含まれています。"
    },
    {
      "indent": 3,
      "text": "Global Identifiers Block (GIB):",
      "ja": "グローバル識別子ブロック（GIB）："
    },
    {
      "indent": 12,
      "text": "The pool of CSID values available for global allocation.",
      "ja": "グローバル割り当てに利用できるCSID値のプール。"
    },
    {
      "indent": 3,
      "text": "Local Identifiers Block (LIB):",
      "ja": "ローカル識別子ブロック（lib）："
    },
    {
      "indent": 12,
      "text": "The pool of CSID values available for local allocation.",
      "ja": "ローカル割り当てに利用可能なCSID値のプール。"
    },
    {
      "indent": 3,
      "text": "In this document, the length of each constituent part of a SID is referred to as follows:",
      "ja": "このドキュメントでは、SIDの各構成部分の長さを次のように参照します。"
    },
    {
      "indent": 6,
      "text": "* LBL is the Locator-Block length of the SID.",
      "ja": "* LBLは、SIDのロケーターブロックの長さです。"
    },
    {
      "indent": 6,
      "text": "* LNL is the Locator-Node length of the SID.",
      "ja": "* LNLは、SIDのロケーターノードの長さです。"
    },
    {
      "indent": 6,
      "text": "* FL is the Function length of the SID.",
      "ja": "* FLはSIDの関数長です。"
    },
    {
      "indent": 6,
      "text": "* AL is the Argument length of the SID.",
      "ja": "* alはSIDの引数長です。"
    },
    {
      "indent": 3,
      "text": "In addition, the Locator-Node and Function length (LNFL) is the sum of the LNL and the FL of the SID. It is also referred to as the \"CSID length\".",
      "ja": "さらに、ロケーターノードと関数長（LNFL）は、SIDのLNLとFLの合計です。また、「CSID長」とも呼ばれます。"
    },
    {
      "indent": 0,
      "text": "2.1. Requirements Language",
      "section_title": true,
      "ja": "2.1. 要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "このドキュメント内のキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、および「OPTIONAL」は、ここに示すようにすべて大文字で表示されている場合にのみ、BCP 14 [RFC2119] [RFC8174] で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Basic Concepts",
      "section_title": true,
      "ja": "3. 基本概念"
    },
    {
      "indent": 3,
      "text": "In an SR domain, all SRv6 SIDs instantiated from the same Locator-Block share the same most significant bits. In addition, when the combined length of the SRv6 SID Locator, Function, and Argument is smaller than 128 bits, the least significant bits of the SID are padded with zeros. The compressed segment list encoding seeks to decrease the packet header length by avoiding the repetition of the same Locator-Block and reducing the use of padding bits.",
      "ja": "SRドメインでは、同じロケーターブロックからインスタンス化されたすべてのSRV6 SIDが同じ最も重要なビットを共有しています。さらに、SRV6 SIDロケーターの合計長さ、機能、および引数が128ビットより小さい場合、SIDの最も重要なビットにはゼロが詰め込まれています。同じロケーターブロックの繰り返しを回避し、パディングビットの使用を減らすことにより、パケットヘッダーの長さを減らすことを目指して、圧縮セグメントリストがエンコードされています。"
    },
    {
      "indent": 3,
      "text": "Building upon, and fully compatible with the mechanisms specified in [RFC8754] and [RFC8986], the compressed segment list encoding leverages a SID list compression logic at the SR source node (see Section 6) in combination with new flavors of the SRv6 endpoint behaviors that process the compressed SID list (see Section 4).",
      "ja": "[RFC8754]および[RFC8986]で指定されたメカニズムと完全に互換性のある構築、および完全に互換性があるため、SR SID SOURCE NODE（セクション6を参照）をレバレッジする圧縮セグメントリストは、SRV6エンドポイント挙動の新しいフレーバーと組み合わせてSRソースノード（セクション6を参照）をレバレッジします（セクション4を参照）。"
    },
    {
      "indent": 3,
      "text": "An SR source node constructs and compresses the SID list depending on the SIDs instantiated on each SR segment endpoint node that the packet is intended to traverse, as well as its own compression capabilities. The resulting compressed SID list is a combination of CSID sequences, for the SIDs that the SR source node was able to compress, and uncompressed SIDs, which could not be compressed. In case the SR source node is able to compress all the SIDs in the SID list, the compressed SID list comprises only CSID sequences (one or more) and no uncompressed SIDs. Conversely, the compressed SID list comprises only uncompressed SIDs when the SR source is unable to compress any of the constituent SIDs.",
      "ja": "SRソースノードは、各SRセグメントエンドポイントノードにインスタンス化されたSIDSに応じてSIDリストを構築および圧縮し、パケットがトラバースを使用することを目的としています。結果の圧縮SIDリストは、SRソースノードが圧縮できたSIDのCSIDシーケンスの組み合わせと、圧縮できなかった非圧縮SIDSの組み合わせです。SRソースノードがSIDリスト内のすべてのSIDを圧縮できる場合、圧縮されたSIDリストはCSIDシーケンス（1つ以上）のみで構成され、非圧縮SIDはありません。逆に、圧縮されたSIDリストは、SRソースが構成要素SIDのいずれかを圧縮できない場合の非圧縮SIDのみを含みます。"
    },
    {
      "indent": 0,
      "text": "4. SR Segment Endpoint Flavors",
      "section_title": true,
      "ja": "4. SRセグメントエンドポイントフレーバー"
    },
    {
      "indent": 3,
      "text": "This section defines two SR segment endpoint flavors: NEXT-CSID and REPLACE-CSID, for the End, End.X, End.T, End.B6.Encaps, End.B6.Encaps.Red, and End.BM behaviors of [RFC8986].",
      "ja": "このセクションでは、2つのSRセグメントエンドポイントフレーバーを定義します。次のCSIDおよび交換CSID、END.X、END.T、END.B6.ENCAPS、END.ENCAPS、およびEND.BMの[RFC8986]の動作を定義します。"
    },
    {
      "indent": 3,
      "text": "This section also defines a REPLACE-CSID flavor for the End.DX6, End.DX4, End.DT6, End.DT4, End.DT46, End.DX2, End.DX2V, End.DT2U, and End.DT2M behaviors of [RFC8986]. A counterpart NEXT-CSID flavor is not defined for these behaviors. Any SID can be the last element of a CSID sequence compressed using the NEXT-CSID flavor (see Section 4.1) and the aforementioned SRv6 endpoint behaviors are always in the last position in a SID list; thus, there is no need for any modification of the behaviors defined in [RFC8986].",
      "ja": "このセクションでは、end.dx6、end.dx4、end.dt6、end.dt4、end.dt46、end.dx2、end.dx2v、end.dt2u、およびend.dt2mの[rfc8986]のend.dt4、end.dt46、end.dx2の置換csidフレーバーも定義します。これらの動作については、対応する次のCSIDフレーバーは定義されていません。すべてのSIDは、次のCSIDフレーバーを使用して圧縮されたCSIDシーケンスの最後の要素であり（セクション4.1を参照）、前述のSRV6エンドポイント動作は常にSIDリストの最後の位置にあります。したがって、[RFC8986]で定義されている動作を変更する必要はありません。"
    },
    {
      "indent": 3,
      "text": "Future documents may extend the applicability of the NEXT-CSID and REPLACE-CSID flavors to other SRv6 endpoint behaviors (see Section 10).",
      "ja": "将来のドキュメントは、次のCSIDおよび置換CSIDフレーバーの適用性を他のSRV6エンドポイントの動作に拡張する場合があります（セクション10を参照）。"
    },
    {
      "indent": 3,
      "text": "The use of these flavors, either individually or in combination, enables the compressed segment list encoding.",
      "ja": "これらのフレーバーを個別にまたは組み合わせて使用すると、圧縮セグメントリストエンコードが可能になります。"
    },
    {
      "indent": 3,
      "text": "The NEXT-CSID flavor and the REPLACE-CSID flavor both leverage the SID Argument to determine the next SID to be processed, but employ different SID list compression schemes. With the NEXT-CSID flavor, each CSID container is a fully formed SRv6 SID with the common Locator-Block for all the CSIDs in the CSID container, a Locator-Node and Function that are those of the first CSID, and an Argument carrying the subsequent CSIDs. With the REPLACE-CSID flavor, only the first element in a CSID sequence is a fully formed SRv6 SID. It has the common Locator-Block for all the CSIDs in the CSID sequence, and a Locator-Node and Function that are those of the first CSID. The remaining elements in the CSID sequence are CSID containers carrying the subsequent CSIDs without the Locator-Block.",
      "ja": "次のCSIDフレーバーと交換用CSIDフレーバーは、SID引数を活用して処理される次のSIDを決定しますが、異なるSIDリスト圧縮スキームを使用します。次のCSIDフレーバーを備えた各CSIDコンテナは、CSIDコンテナ内のすべてのCSIDの一般的なロケーターブロック、最初のCSIDのロケーターノードと関数、および後続のCSIDを運ぶ引数を備えた完全に形成されたSRV6 SIDです。置換CSIDフレーバーを使用すると、CSIDシーケンスの最初の要素のみが完全に形成されたSRV6 SIDです。CSIDシーケンス内のすべてのCSIDの一般的なロケーターブロックと、最初のCSIDのロケーターノードと関数があります。CSIDシーケンスの残りの要素は、ロケーターブロックなしでその後のCSIDを運ぶCSIDコンテナです。"
    },
    {
      "indent": 3,
      "text": "Regardless of which flavor is used, the IPv6 address carried in the Destination Address field of the IPv6 header is a valid SRv6 SID conforming to [RFC9602].",
      "ja": "どのフレーバーが使用されているかに関係なく、IPv6ヘッダーの宛先アドレスフィールドに運ばれるIPv6アドレスは、[RFC9602]に適合する有効なSRV6 SIDです。"
    },
    {
      "indent": 3,
      "text": "In the remainder of this document, the term \"a SID of this document\" refers to any End, End.X, End.T, End.B6.Encaps, End.B6.Encaps.Red, or End.BM SID with the NEXT-CSID or the REPLACE-CSID flavor and with any combination of Penultimate Segment Pop (PSP), Ultimate Segment Pop (USP), and Ultimate Segment Decapsulation (USD) flavor, or any End.DX6, End.DX4, End.DT6, End.DT4, End.DT46, End.DX2, End.DX2V, End.DT2U, or End.DT2M with the REPLACE-CSID flavor. All the SRv6 endpoint behaviors introduced in this document are listed in Table 1.",
      "ja": "このドキュメントの残りの部分では、「このドキュメントのsid」という用語は、任意のend、end.x、end.t、end.b6.encaps、end.b6.encaps、またはend.bm sidを指します。end.dx4、end.dt6、end.dt4、end.dt46、end.dx2、end.dx2v、end.dt2u、またはend.dt2mを置き換えます。このドキュメントで導入されたすべてのSRV6エンドポイントの動作は、表1にリストされています。"
    },
    {
      "indent": 3,
      "text": "In the remainder of this document, the terms \"NEXT-CSID flavor SID\" and \"REPLACE-CSID flavor SID\" refer to any SID of this document with the NEXT-CSID flavor and with the REPLACE-CSID flavor, respectively.",
      "ja": "このドキュメントの残りの部分では、「Next-CSID Flavor Sid」と「Leplay-CSID Flavor Sid」という用語は、このドキュメントのSIDをそれぞれ次のCSIDフレーバーと交換用のフレーバーと呼びます。"
    },
    {
      "indent": 0,
      "text": "4.1. NEXT-CSID Flavor",
      "section_title": true,
      "ja": "4.1. 次のcsidフレーバー"
    },
    {
      "indent": 3,
      "text": "A CSID sequence compressed using the mechanism of the NEXT-CSID flavor comprises one or more CSID containers. Each CSID container is a fully formed 128-bit SID structured as shown in Figure 1. It carries a Locator-Block followed by a series of CSIDs. The Locator-Node and Function of the CSID container are those of the first CSID, and its Argument is the contiguous series of subsequent CSIDs. The second CSID is encoded in the most significant bits of the CSID container Argument. The third CSID is encoded in the bits of the Argument that immediately follow the second CSID, and so on. When all CSIDs have the same length, a CSID container can carry up to K CSIDs, where K is computed as floor((128-LBL)/LNFL) (floor(x) is the greatest integer less than or equal to x [GKP94]). Each CSID container for NEXT-CSID is independent, such that contiguous CSID containers in a CSID sequence can be considered to be separate CSID sequences.",
      "ja": "次のCSIDフレーバーのメカニズムを使用して圧縮されたCSIDシーケンスは、1つ以上のCSIDコンテナを含みます。各CSIDコンテナは、図1に示すように完全に形成された128ビットSID構造です。ロケーターブロックが続いて、一連のCSIDが続きます。CSIDコンテナのロケーターノードと関数は最初のCSIDの機能であり、その引数は、後続のCSIDの一連の連続したシリーズです。2番目のCSIDは、CSIDコンテナ引数の最も重要なビットでエンコードされます。3番目のCSIDは、2番目のCSIDなどに直後に続く引数のビットにエンコードされています。すべてのCSIDの長さが同じ場合、CSID容器はk csidsに運ばれ、kはフロア（（128-lbl）/lnfl）として計算されます（床（x）はx [gkp94]以下の最大整数です。Next-CSID用の各CSIDコンテナは独立しているため、CSIDシーケンス内の連続CSIDコンテナは、別々のCSIDシーケンスと見なされます。"
    },
    {
      "indent": 3,
      "text": "When a CSID sequence compressed using the NEXT-CSID flavor comprises at least two CSIDs, the last CSID in the sequence is not required to have the NEXT-CSID flavor. It can be bound to any SRv6 endpoint behavior, including [RFC8986] behaviors and REPLACE-CSID flavor, as long as the updated Destination Address resulting from the processing of the previous CSID in the sequence is a valid form for that last SID. Line S12 of the first pseudocode in Section 6.2 provides sufficient conditions to ensure this property.",
      "ja": "Next-CSIDフレーバーを使用して圧縮されたCSIDシーケンスが少なくとも2つのCSIDを含む場合、シーケンスの最後のCSIDは次のCSIDフレーバーを持つ必要はありません。[RFC8986]動作や交換CSIDフレーバーなど、SRV6エンドポイントの動作にバインドできます。これは、シーケンスの前のCSIDの処理から生じる更新された宛先アドレスが、その最後のSIDの有効なフォームである限り。セクション6.2の最初の擬似コードのラインS12は、このプロパティを確保するのに十分な条件を提供します。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|     Locator-Block      |Loc-Node|            Argument            |\n|                        |Function|                                |\n+------------------------------------------------------------------+\n <----------------------> <------> <------------------------------>\n           LBL              LNFL                  AL",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": " Figure 1: Structure of a NEXT-CSID Flavor SID (Scaled for a 48-Bit Locator-Block, 16-Bit Combined Locator-Node and Function, and 64-Bit Argument)",
      "ja": "図1：次のCSIDフレーバーSIDの構造（48ビットロケーターブロック、16ビットの組み合わせロケーターノードと機能、および64ビット引数のためにスケーリング）"
    },
    {
      "indent": 3,
      "text": "Figure 2 illustrates a compressed SID list as could be produced by an SR source node steering a packet into an SR policy with a SID list of eight NEXT-CSID flavor SIDs. All SIDs in this example have a 48-bit Locator-Block, 16-bit combined Locator-Node and Function, and 64-bit Argument. The SR source node compresses the SR policy SID list as a compressed SID list of two CSID containers. The first CSID container carries a Locator-Block and the first five CSIDs. The second CSID container carries a Locator-Block and the sixth, seventh, and eighth CSIDs. Since the SR source node does not use the second CSID container at full capacity, it sets the 32 least significant bits to zero. The SR source node sets the IPv6 Destination Address (DA) with the value of the first CSID container and the first element of the SRH Segment List with the value of the second CSID container. Without reduced SRH (see Section 4.1.1 of [RFC8754]), the SR source node also writes the first CSID container as the second element of the SRH Segment List.",
      "ja": "図2は、SRソースノードによって作成されるように圧縮されたSIDリストを示しており、8つのNext-CSIDフレーバーSIDのSIDリストを使用してSRポリシーにパケットをステアリングします。この例のすべてのSIDには、48ビットのロケーターブロック、16ビットの組み合わせロケーターノードと機能、および64ビット引数があります。SRソースノードは、2つのCSIDコンテナの圧縮SIDリストとしてSRポリシーSIDリストを圧縮します。最初のCSIDコンテナには、ロケーターブロックと最初の5つのCSIDが搭載されています。2番目のCSIDコンテナには、ロケーターブロックと6番目、7番目、および8番目のCSIDが含まれています。SRソースノードは、2番目のCSIDコンテナをフル容量で使用しないため、32の最小重要なビットをゼロに設定します。SRソースノードは、最初のCSIDコンテナの値でIPv6宛先アドレス（DA）を設定し、SRHセグメントリストの最初の要素を2番目のCSIDコンテナの値で設定します。SRHの減少（[RFC8754]のセクション4.1.1を参照）がなければ、SRソースノードは、最初のCSIDコンテナをSRHセグメントリストの2番目の要素として書き込みます。"
    },
    {
      "indent": 3,
      "text": "Note that the CSIDs within a given CSID container appear in forward order to leverage the longest-prefix match IP forwarding, while the entries in the SRH Segment List appear in reversed order of their processing, as specified in Section 4.1 of [RFC8754].",
      "ja": "特定のCSIDコンテナ内のCSIDSは、最長のPrefixマッチIP転送を活用するために前方に表示され、SRHセグメントリストのエントリは[RFC8754]のセクション4.1で指定されているように、処理の逆順に表示されることに注意してください。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+         Locator-Block         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                               |           1st CSID            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           2nd CSID            |           3rd CSID            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           4th CSID            |           5th CSID            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      First CSID Container\n\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+         Locator-Block         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                               |           6th CSID            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           7th CSID            |           8th CSID            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                               0                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      Second CSID Container",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Figure 2: Compressed SID List of Eight NEXT-CSID Flavor SIDs with a 48-Bit Locator-Block, 16-Bit Combined Locator-Node and Function, and 64-Bit Argument",
      "ja": "図2：48ビットのロケーターブロック、16ビットの組み合わせロケーターノードと機能、および64ビット引数を備えた8つの次のCSIDフレーバーSIDの圧縮SIDリスト"
    },
    {
      "indent": 3,
      "text": "An implementation MUST support a 32-bit LBL and a 16-bit CSID length (LNFL) for NEXT-CSID flavor SIDs, and it MAY support any additional Locator-Block and CSID length.",
      "ja": "実装は、次のCSIDフレーバーSIDの場合、32ビットLBLと16ビットCSID長（LNFL）をサポートする必要があり、追加のロケーターブロックとCSIDの長さをサポートする場合があります。"
    },
    {
      "indent": 3,
      "text": "The AL for NEXT-CSID flavor SIDs is equal to 128-LBL-LNFL.",
      "ja": "次のCSIDフレーバーSIDSのALは、128-LBL-LNFLに等しくなります。"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a Forwarding Information Base (FIB) entry locally instantiated as a SID with the NEXT-CSID flavor, the SR segment endpoint node applies the procedure specified in the following subsection that corresponds to the SID behavior. If the SID also has the PSP, USP, or USD flavor, the procedure is modified as described in Section 4.1.7.",
      "ja": "次のCSIDフレーバーのSIDとしてローカルにインスタンス化された転送情報ベース（FIB）エントリに一致するIPv6パケットを処理する場合、SRセグメントエンドポイントノードは、SIDの動作に対応する次のサブセクションで指定された手順を適用します。SIDにPSP、USP、またはUSDフレーバーもある場合、セクション4.1.7で説明されているように手順が変更されます。"
    },
    {
      "indent": 3,
      "text": "An SR segment endpoint node instantiating a SID of this document with the NEXT-CSID flavor MUST accept any Argument value for that SID.",
      "ja": "次のCSIDフレーバーでこのドキュメントのSIDをインスタンス化するSRセグメントエンドポイントノードは、そのSIDの引数値を受け入れる必要があります。"
    },
    {
      "indent": 3,
      "text": "At a high level, for any SID with the NEXT-CSID flavor, the SR segment endpoint node determines the next SID of the SID list as follows. If the Argument value of the active SID is non-zero, the SR segment endpoint node constructs the next SID from the active SID by copying the entire SID Argument value to the bits that immediately follow the Locator-Block, thus overwriting the active SID Locator-Node and Function with those of the next CSID, and filling the least significant LNFL bits of the Argument with zeros. Otherwise (if the Argument value is 0), the SR segment endpoint node copies the next 128-bit Segment List entry from the SRH to the Destination Address field of the IPv6 header.",
      "ja": "高レベルでは、次のCSIDフレーバーを備えたSIDの場合、SRセグメントエンドポイントノードは、次のようにSIDリストの次のSIDを決定します。Active SIDの引数値が非ゼロの場合、SRセグメントエンドポイントノードは、SID引数値全体をロケーターブロックの直後にコピーすることにより、アクティブSIDから次のSIDを構築し、アクティブなSIDロケーターノードと次のCSIDのものと上書きし、Zerosの最も重要なLNFLビットを埋めます。それ以外の場合（引数値が0の場合）、SRセグメントエンドポイントノードは、SRHからIPv6ヘッダーの宛先アドレスフィールドへの次の128ビットセグメントリストエントリをコピーします。"
    },
    {
      "indent": 0,
      "text": "4.1.1. End with NEXT-CSID",
      "section_title": true,
      "ja": "4.1.1. 次のcsidで終わります"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End SID with the NEXT-CSID flavor, the procedure described in Section 4.1 of [RFC8986] is executed with the following modifications.",
      "ja": "次のCSIDフレーバーを備えたエンドSIDとしてローカルにインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、[RFC8986]のセクション4.1で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The below pseudocode is inserted between lines S01 and S02 of the SRH processing in Section 4.1 of [RFC8986]. In addition, this pseudocode is executed before processing the first header in the IPv6 extension header chain that is not an SRH, a Hop-by-Hop header, or a Destination Options header. If the IPv6 extension header chain does not include any header matching this criterion, this pseudocode is executed before processing the upper-layer header.",
      "ja": "以下の擬似コードは、[RFC8986]のセクション4.1のSRH処理のS01とS02のラインとS02の間に挿入されます。さらに、この擬似コードは、SRH、ホップバイホップヘッダー、または宛先オプションヘッダーではなく、IPv6拡張ヘッダーチェーンの最初のヘッダーを処理する前に実行されます。IPv6拡張ヘッダーチェーンにこの基準に一致するヘッダーが含まれていない場合、この擬似コードは上層ヘッダーを処理する前に実行されます。"
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.   Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the next destination.\nN09. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Notes:",
      "ja": "注："
    },
    {
      "indent": 6,
      "text": "* DA.Argument identifies the value contained in the bits [(LBL+LNFL)..127] in the Destination Address of the IPv6 header.",
      "ja": "* da.argumentは、IPv6ヘッダーの宛先アドレスでビット[（lbl+lnfl）.. 127]に含まれる値を識別します。"
    },
    {
      "indent": 6,
      "text": "* The value in the Segments Left field of the SRH is not modified when DA.Argument in the received packet has a non-zero value.",
      "ja": "* SRHの左フィールドのセグメントの値は、受信したパケットのda.argumentにゼロ以外の値がある場合、変更されません。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.1.",
      "ja": "完全な擬似コードのレンダリングは、付録A.1に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.1.2. End.X with NEXT-CSID",
      "section_title": true,
      "ja": "4.1.2. 次のcsidでend.x"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.X SID with the NEXT-CSID flavor, the procedure described in Section 4.2 of [RFC8986] is executed with the following modifications.",
      "ja": "次のCSIDフレーバーを備えたEnd.x SIDとしてローカルにインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、[RFC8986]のセクション4.2で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The pseudocode in Section 4.1.1 of this document is modified by replacing line N08 as shown below.",
      "ja": "このドキュメントのセクション4.1.1の擬似コードは、以下に示すように行N08を置き換えることにより変更されます。"
    },
    {
      "indent": 3,
      "text": "N08.   Submit the packet to the IPv6 module for transmission to the\n         new destination via a member of J.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: the variable J is defined in Section 4.2 of [RFC8986].",
      "ja": "注：変数Jは、[RFC8986]のセクション4.2で定義されています。"
    },
    {
      "indent": 3,
      "text": "The resulting pseudocode is inserted between lines S01 and S02 of the SRH processing in Section 4.1 of [RFC8986] after applying the modification described in Section 4.2 of [RFC8986]. In addition, this pseudocode is executed before processing the first header in the IPv6 extension header chain that is not an SRH, a Hop-by-Hop header, or a Destination Options header. If the IPv6 extension header chain does not include any header matching this criterion, this pseudocode is executed before processing the upper-layer header.",
      "ja": "結果の擬似コードは、[RFC8986]のセクション4.2で説明されている修正を適用した後、[RFC8986]のセクション4.1のSRH処理のS01とS02の間に挿入されます。さらに、この擬似コードは、SRH、ホップバイホップヘッダー、または宛先オプションヘッダーではなく、IPv6拡張ヘッダーチェーンの最初のヘッダーを処理する前に実行されます。IPv6拡張ヘッダーチェーンにこの基準に一致するヘッダーが含まれていない場合、この擬似コードは上層ヘッダーを処理する前に実行されます。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.2.",
      "ja": "完全な擬似コードのレンダリングは、付録A.2に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.1.3. End.T with NEXT-CSID",
      "section_title": true,
      "ja": "4.1.3. 次のcsidでend.t"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.T SID with the NEXT-CSID flavor, the procedure described in Section 4.3 of [RFC8986] is executed with the following modifications.",
      "ja": "次のCSIDフレーバーでend.t SIDとしてローカルにインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、[RFC8986]のセクション4.3で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The pseudocode in Section 4.1.1 of this document is modified by replacing line N08 as shown below.",
      "ja": "このドキュメントのセクション4.1.1の擬似コードは、以下に示すように行N08を置き換えることにより変更されます。"
    },
    {
      "indent": 3,
      "text": "N08.1.   Set the packet's associated FIB table to T.\nN08.2.   Submit the packet to the egress IPv6 FIB lookup for\n           transmission to the new destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: the variable T is defined in Section 4.3 of [RFC8986].",
      "ja": "注：変数Tは、[RFC8986]のセクション4.3で定義されています。"
    },
    {
      "indent": 3,
      "text": "The resulting pseudocode is inserted between lines S01 and S02 of the SRH processing in Section 4.1 of [RFC8986] after applying the modification described in Section 4.3 of [RFC8986]. In addition, this pseudocode is executed before processing the first header in the IPv6 extension header chain that is not an SRH, a Hop-by-Hop header, or a Destination Options header. If the IPv6 extension header chain does not include any header matching this criterion, this pseudocode is executed before processing the upper-layer header.",
      "ja": "結果の擬似コードは、[RFC8986]のセクション4.3で説明されている修正を適用した後、[RFC8986]のセクション4.1のSRH処理のS01とS02の間に挿入されます。さらに、この擬似コードは、SRH、ホップバイホップヘッダー、または宛先オプションヘッダーではなく、IPv6拡張ヘッダーチェーンの最初のヘッダーを処理する前に実行されます。IPv6拡張ヘッダーチェーンにこの基準に一致するヘッダーが含まれていない場合、この擬似コードは上層ヘッダーを処理する前に実行されます。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.3.",
      "ja": "完全な擬似コードのレンダリングは、付録A.3に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.1.4. End.B6.Encaps with NEXT-CSID",
      "section_title": true,
      "ja": "4.1.4. end.b6.Encaps with next-csid"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.B6.Encaps SID with the NEXT-CSID flavor, the procedure described in Section 4.13 of [RFC8986] is executed with the following modifications.",
      "ja": "end.b6.sidを次のCSIDフレーバーでエンコップする局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、[RFC8986]のセクション4.13で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The pseudocode in Section 4.1.1 of this document is modified by replacing line N08 as shown below.",
      "ja": "このドキュメントのセクション4.1.1の擬似コードは、以下に示すように行N08を置き換えることにより変更されます。"
    },
    {
      "indent": 3,
      "text": "N08.1.   Push a new IPv6 header with its own SRH containing B.\nN08.2.   Set the outer IPv6 SA to A.\nN08.3.   Set the outer IPv6 DA to the first SID of B.\nN08.4.   Set the outer Payload Length, Traffic Class, Flow Label,\n           Hop Limit, and Next Header fields.\nN08.5.   Submit the packet to the egress IPv6 FIB lookup for\n           transmission to the next destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: the variables A and B, as well as the values of the Payload Length, Traffic Class, Flow Label, Hop Limit, and Next Header are defined in Section 4.13 of [RFC8986].",
      "ja": "注：変数AとB、およびペイロード長、トラフィッククラス、フローラベル、ホップ制限、および次のヘッダーの値は、[RFC8986]のセクション4.13で定義されています。"
    },
    {
      "indent": 3,
      "text": "The resulting pseudocode is inserted between lines S01 and S02 of the SRH processing in Section 4.13 of [RFC8986]. In addition, this pseudocode is executed before processing the first header in the IPv6 extension header chain that is not an SRH, a Hop-by-Hop header, or a Destination Options header. If the IPv6 extension header chain does not include any header matching this criterion, this pseudocode is executed before processing the upper-layer header.",
      "ja": "結果の擬似コードは、[RFC8986]のセクション4.13のSRH処理のS01とS02のラインとS02の間に挿入されます。さらに、この擬似コードは、SRH、ホップバイホップヘッダー、または宛先オプションヘッダーではなく、IPv6拡張ヘッダーチェーンの最初のヘッダーを処理する前に実行されます。IPv6拡張ヘッダーチェーンにこの基準に一致するヘッダーが含まれていない場合、この擬似コードは上層ヘッダーを処理する前に実行されます。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.4.",
      "ja": "完全な擬似コードのレンダリングは、付録A.4に記載されています。"
    },
    {
      "indent": 3,
      "text": "Similar to the base End.B6.Encaps SID defined in Section 4.13 of [RFC8986], the NEXT-CSID flavor variant updates the Destination Address field of the inner IPv6 header to the next SID in the original segment list before encapsulating the packet with the segment list of SR Policy B. At the endpoint of SR Policy B, the encapsulation is removed and the inner packet is forwarded towards the exposed Destination Address, which already contains the next SID in the original segment list.",
      "ja": "B6.ENCAPS SID [RFC8986]のセクション4.13で定義されているSIDをエンクします。次のCSIDフレーバーバリアントは、SRポリシーBのエンドポリスを補給しているSRポリシーBのエンドポリスを補給しているSRポリシーBのエンドポリスを保存するSRポリシーBのエンドポリスのセグメントリストでパケットをカプセル化する前に、次のIPv6ヘッダーの宛先アドレスフィールドを元のセグメントリストの内側のIPv6ヘッダーの宛先アドレスフィールドに更新します。元のセグメントリストの次のSID。"
    },
    {
      "indent": 0,
      "text": "4.1.5. End.B6.Encaps.Red with NEXT-CSID",
      "section_title": true,
      "ja": "4.1.5. end.b6.encaps.red with next-csid"
    },
    {
      "indent": 3,
      "text": "This is an optimization of the End.B6.Encaps with NEXT-CSID behavior.",
      "ja": "これは、end.b6.Encapsの次のCSID動作の最適化です。"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.B6.Encaps.Red SID with the NEXT-CSID flavor, the procedure described in Section 4.1.4 of this document is executed with the modifications in Section 4.14 of [RFC8986].",
      "ja": "end.b6.encaps.red sidを次のcsidフレーバーで局所的にインスタンス化したFIBエントリに一致するIPv6パケットを処理する場合、このドキュメントのセクション4.1.4で説明されている手順は、[RFC8986]のセクション4.14の修正とともに実行されます。"
    },
    {
      "indent": 0,
      "text": "4.1.6. End.BM with NEXT-CSID",
      "section_title": true,
      "ja": "4.1.6. end.bm with next-csid"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.BM SID with the NEXT-CSID flavor, the procedure described in Section 4.15 of [RFC8986] is executed with the following modifications.",
      "ja": "次のCSIDフレーバーでend.BM SIDとしてローカルにインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、[RFC8986]のセクション4.15で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The pseudocode in Section 4.1.1 of this document is modified by replacing line N08 as shown below.",
      "ja": "このドキュメントのセクション4.1.1の擬似コードは、以下に示すように行N08を置き換えることにより変更されます。"
    },
    {
      "indent": 3,
      "text": "N08.1.   Push the MPLS label stack for B.\nN08.2.   Submit the packet to the MPLS engine for transmission.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: the variable B is defined in Section 4.15 of [RFC8986].",
      "ja": "注：変数Bは、[RFC8986]のセクション4.15で定義されています。"
    },
    {
      "indent": 3,
      "text": "The resulting pseudocode is inserted between lines S01 and S02 of the SRH processing in Section 4.15 of [RFC8986]. In addition, this pseudocode is executed before processing the first header in the IPv6 extension header chain that is not an SRH, a Hop-by-Hop header, or a Destination Options header. If the IPv6 extension header chain does not include any header matching this criterion, this pseudocode is executed before processing the upper-layer header.",
      "ja": "結果の擬似コードは、[RFC8986]のセクション4.15のSRH処理のS01とS02のラインとS02の間に挿入されます。さらに、この擬似コードは、SRH、ホップバイホップヘッダー、または宛先オプションヘッダーではなく、IPv6拡張ヘッダーチェーンの最初のヘッダーを処理する前に実行されます。IPv6拡張ヘッダーチェーンにこの基準に一致するヘッダーが含まれていない場合、この擬似コードは上層ヘッダーを処理する前に実行されます。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.5.",
      "ja": "完全な擬似コードのレンダリングは、付録A.5に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.1.7. Combination with PSP, USP, and USD Flavors",
      "section_title": true,
      "ja": "4.1.7. PSP、USP、およびUSDフレーバーとの組み合わせ"
    },
    {
      "indent": 3,
      "text": "PSP:",
      "ja": "PSP:"
    },
    {
      "indent": 12,
      "text": "The PSP flavor defined in Section 4.16.1 of [RFC8986] is unchanged when combined with the NEXT-CSID flavor.",
      "ja": "[RFC8986]のセクション4.16.1で定義されているPSPフレーバーは、次のCSIDフレーバーと組み合わせると変更されません。"
    },
    {
      "indent": 3,
      "text": "USP:",
      "ja": "USP:"
    },
    {
      "indent": 12,
      "text": "The USP flavor defined in Section 4.16.2 of [RFC8986] is unchanged when combined with the NEXT-CSID flavor.",
      "ja": "[RFC8986]のセクション4.16.2で定義されているUSPフレーバーは、次のCSIDフレーバーと組み合わせると変更されません。"
    },
    {
      "indent": 3,
      "text": "USD:",
      "ja": "USD:"
    },
    {
      "indent": 12,
      "text": "The USD flavor defined in Section 4.16.3 of [RFC8986] is unchanged when combined with the NEXT-CSID flavor.",
      "ja": "[RFC8986]のセクション4.16.3で定義されているUSDフレーバーは、次のCSIDフレーバーと組み合わせると変更されません。"
    },
    {
      "indent": 0,
      "text": "4.2. REPLACE-CSID Flavor",
      "section_title": true,
      "ja": "4.2. CSIDフレーバーを交換します"
    },
    {
      "indent": 3,
      "text": "A CSID sequence compressed using the mechanism of the REPLACE-CSID flavor starts with a CSID container in fully formed 128-bit SID format. The Locator-Block of this SID is the common Locator-Block for all the CSIDs in the CSID sequence, its Locator-Node and Function are those of the first CSID, and its Argument carries the index of the current CSID in the current CSID container. The Argument value is initially 0. When more segments are present in the segment list, the CSID sequence continues with one or more CSID containers in packed format carrying the series of subsequent CSIDs. Each container in packed format is a 128-bit Segment List entry split into K \"positions\" of LNFL bits, where K is computed as floor(128/LNFL). If LNFL does not divide into 128 perfectly, a zero pad is added in the least significant bits of the CSID container to fill the bits left over. The second CSID in the CSID sequence is encoded in the least significant bit position of the first CSID container in packed format (position K-1), the third CSID is encoded in position K-2, and so on.",
      "ja": "置換型フレーバーのメカニズムを使用して圧縮されたCSIDシーケンスは、完全に形成された128ビットSID形式のCSIDコンテナから始まります。このSIDのロケーターブロックは、CSIDシーケンスのすべてのCSIDの一般的なロケーターブロックであり、そのロケーターノードと関数は最初のCSIDのものであり、その引数は現在のCSIDコンテナの現在のCSIDのインデックスを伝えます。引数値は最初は0です。セグメントリストにさらにセグメントが存在する場合、CSIDシーケンスは、後続のCSIDのシリーズを運ぶパック形式の1つ以上のCSIDコンテナで続きます。パック形式の各コンテナは、LNFLビットのk「位置」に分割された128ビットセグメントリストエントリで、kはフロア（128/LNFL）として計算されます。LNFLが128に完全に分割されない場合、CSID容器の最も重要なビットにゼロパッドが追加され、残ったビットが埋められます。CSIDシーケンスの2番目のCSIDは、最初のCSIDコンテナの最も有意なビット位置でエンコードされ、パック形式（位置K-1）、3番目のCSIDは位置K-2などにエンコードされます。"
    },
    {
      "indent": 3,
      "text": "The last CSID in the CSID sequence is not required to have the REPLACE-CSID flavor. It can be bound to any SRv6 endpoint behavior, including the behaviors described in [RFC8986] and NEXT-CSID flavor, as long as it meets the conditions defined in Section 6.",
      "ja": "CSIDシーケンスの最後のCSIDは、置換型フレーバーを持つために必要ではありません。セクション6で定義されている条件を満たしている限り、[RFC8986]に記載されている動作や次のCSIDフレーバーを含む、任意のSRV6エンドポイントの動作にバインドできます。"
    },
    {
      "indent": 3,
      "text": "The structure of a SID with the REPLACE-CSID flavor is shown in Figure 3. The same structure is also that of the CSID container for REPLACE-CSID in fully formed 128-bit SID format.",
      "ja": "置換CSIDフレーバーを備えたSIDの構造を図3に示します。同じ構造は、完全に形成された128ビットSID形式の置換CSID用のCSIDコンテナの構造でもあります。"
    },
    {
      "indent": 3,
      "text": "+-------------------------------------------------------------------+\n|     Locator-Block      |  Locator-Node  |        Argument         |\n|                        |   + Function   |                         |\n+-------------------------------------------------------------------+\n <----------------------> <--------------> <----------------------->\n           LBL                  LNFL                  AL",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Figure 3: Structure of a REPLACE-CSID Flavor SID (Scaled for a 48-Bit Locator-Block, 32-Bit Combined Locator-Node and Function, and 48-Bit Argument)",
      "ja": "図3：置換型フレーバーSIDの構造（48ビットロケーターブロック、32ビットの組み合わせロケーターノードと機能、および48ビット引数のためにスケーリング）"
    },
    {
      "indent": 3,
      "text": "The structure of a CSID container for REPLACE-CSID in packed format is shown in Figure 4.",
      "ja": "詰めた形式の置換CSID用のCSIDコンテナの構造を図4に示します。"
    },
    {
      "indent": 3,
      "text": "+-------------------------------------------------------------------+\n|  Fourth CSID   |   Third CSID   |  Second CSID   |   First CSID   |\n|  (position 0)  |  (position 1)  |  (position 2)  |  (position 3)  |\n+-------------------------------------------------------------------+\n <--------------> <--------------> <--------------> <-------------->\n       LNFL             LNFL             LNFL             LNFL",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Figure 4: Structure of a CSID Container for REPLACE-CSID Using a 32-Bit CSID Length (K = 4)",
      "ja": "図4：32ビットのCSID長さを使用した交換用CSIDコンテナの構造（k = 4）"
    },
    {
      "indent": 3,
      "text": "Figure 5 illustrates a compressed SID list as could be produced by an SR source node steering a packet into an SR policy SID list of seven REPLACE-CSID flavor SIDs. All SIDs in this example have a 48-bit Locator-Block, 32-bit combined Locator-Node and Function, and 48-bit Argument. The SR source node compresses the SR policy SID list as a compressed SID list of three CSID containers. The first CSID container is in fully formed 128-bit SID format. It carries a Locator-Block, the first CSID, and the argument value zero. The second and third CSID containers are in packed format. The second CSID container carries the second, third, fourth, and fifth CSIDs. The third CSID container carries the sixth and seventh CSIDs. Since the SR source node does not use the third CSID container at full capacity, it sets the 64 least significant bits to zero. The SR source node sets the IPv6 DA with the value of the first CSID container, sets the first element in the SRH Segment List with the value of the third CSID container, and sets the second element of the SRH Segment List with the value of the second CSID container (the elements in the SRH Segment List appear in reversed order of their processing, as specified in Section 4.1 of [RFC8754]). Without reduced SRH, the SR source node also writes the first CSID container as the third element of the SRH Segment List.",
      "ja": "図5は、SRソースノードがPacketを7つの交換CSIDフレーバーSIDのSRポリシーSIDリストにステアリングすることで作成できる圧縮SIDリストを示しています。この例のすべてのSIDには、48ビットのロケーターブロック、32ビットの組み合わせロケーターノードと機能、および48ビット引数があります。SRソースノードは、SRポリシーSIDリストを3つのCSIDコンテナの圧縮SIDリストとして圧縮します。最初のCSIDコンテナは、完全に形成された128ビットSID形式です。ロケーターブロック、最初のCSID、および引数値がゼロを搭載しています。2番目と3番目のCSIDコンテナは、パックされた形式です。2番目のCSIDコンテナには、2番目、3番目、4番目、および5番目のCSIDが含まれます。3番目のCSIDコンテナには、6番目と7番目のCSIDが含まれます。SRソースノードは、3番目のCSIDコンテナをフル容量で使用しないため、64個の最低ビットをゼロに設定します。SRソースノードは、最初のCSIDコンテナの値を持つIPv6 DAを設定し、3番目のCSIDコンテナの値でSRHセグメントリストの最初の要素を設定し、SRHセグメントリストの2番目の要素を2番目のCSIDコンテナの値で設定します（SRHセグメントリストの要素は[RFC875の順に表示されます]。SRHを減らすことなく、SRソースノードは、SRHセグメントリストの3番目の要素として最初のCSIDコンテナを書き込みます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+         Locator-Block         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                               |           1st CSID            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      1st CSID continued       |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               0               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      First CSID Container\n\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           5th CSID                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           4th CSID                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           3rd CSID                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           2nd CSID                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      Second CSID Container\n\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                               0                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           7th CSID                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           6th CSID                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      Third CSID Container",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Figure 5: Compressed SID List of Seven REPLACE-CSID Flavor SIDs with a 48-Bit Locator-Block, 32-Bit Combined Locator-Node and Function, and 48-Bit Argument",
      "ja": "図5：48ビットのロケーターブロック、32ビットの組み合わせロケーターノードと機能、48ビット引数を備えた7つの交換CSIDフレーバーSIDの圧縮SIDリスト"
    },
    {
      "indent": 3,
      "text": "This document updates [RFC8754] by allowing each entry in the SRH Segment List to be either an IPv6 address or a REPLACE-CSID container in packed format. The SRv6 endpoint behaviors specified herein ensure that this entry is never copied as is to the IPv6 header and that the Destination Address field of the IPv6 header is always a valid SRv6 SID conforming to [RFC9602].",
      "ja": "このドキュメントは、SRHセグメントリストの各エントリをPacked形式のIPv6アドレスまたは置換CSIDコンテナのいずれかにすることにより、[RFC8754]を更新します。本明細書で指定されたSRV6エンドポイントの動作は、このエントリがIPv6ヘッダーにそのままコピーされることはなく、IPv6ヘッダーの宛先アドレスフィールドが常に[RFC9602]に適合する有効なSRV6 SIDであることを保証します。"
    },
    {
      "indent": 3,
      "text": "The REPLACE-CSID flavor SIDs support any LBL, depending on the needs of the operator, as long as it does not exceed 128-LNFL-ceiling(log_2(128/LNFL)) (ceiling(x) is the least integer greater than or equal to x [GKP94]), so that enough bits remain available for the CSID and Argument. An LBL of 48, 56, 64, 72, or 80 bits is recommended for easier reading in operation.",
      "ja": "置換CSIDフレーバーSIDSは、128-LNFLセーリング（LOG_2（128/LNFL））を超えない限り、オペレーターのニーズに応じてLBLをサポートしています。操作中の読み取りを容易にするには、48、56、64、72、または80ビットのLBLが推奨されます。"
    },
    {
      "indent": 3,
      "text": "This document defines the REPLACE-CSID flavor for 16-bit and 32-bit CSID lengths (LNFL). An implementation MUST support a 32-bit CSID length for REPLACE-CSID flavor SIDs.",
      "ja": "このドキュメントでは、16ビットおよび32ビットCSID長（LNFL）の交換CSIDフレーバーを定義します。実装は、置換型フレーバーSIDの32ビットCSID長さをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "The AL for REPLACE-CSID flavor SIDs is equal to 128-LBL-LNFL. The index value is encoded in the least significant X bits of the Argument, where X is computed as ceiling(log_2(128/LNFL)).",
      "ja": "置換CSIDフレーバーSIDSのALは、128-LBL-LNFLに等しくなります。インデックス値は、引数の最も重要なxビットでエンコードされ、xは上限として計算されます（log_2（128/lnfl））。"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as a SID with the REPLACE-CSID flavor, the SR segment endpoint node applies the procedure specified in the following subsection that corresponds to the SID behavior. If the SID also has the PSP, USP, or USD flavor, the procedure is modified as described in Section 4.2.8.",
      "ja": "SIDとして局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを置換CSIDフレーバーで処理する場合、SRセグメントエンドポイントノードは、SIDの動作に対応する次のサブセクションで指定された手順を適用します。SIDにPSP、USP、またはUSDフレーバーもある場合、セクション4.2.8で説明されているように手順が変更されます。"
    },
    {
      "indent": 3,
      "text": "At a high level, at the start of a CSID sequence using the REPLACE-CSID flavor, the first CSID container in fully formed 128-bit SID format is copied to the Destination Address of the IPv6 header. Then, for any SID with the REPLACE-CSID flavor, the SR segment endpoint node determines the next SID of the SID list as follows. When an SRH is present, the SR segment endpoint node decrements the index value in the Argument of the active SID if the index value is not 0 or, if it is 0, decrements the Segments Left value in the SRH and sets the index value in the Argument of the active SID to K-1. The updated index value indicates the position of the next CSID within the CSID container in packed format at the \"Segment List\" index \"Segments Left\" in the SRH. The SR segment endpoint node then constructs the next SID by copying this next CSID to the bits that immediately follow the Locator-Block in the Destination Address field of the IPv6 header, thus overwriting the active SID Locator-Node and Function with those of the next CSID. If no SRH is present, the SR segment endpoint node ignores the index value in the SID Argument (except End.DT2M, see Section 4.2.7) and processes the upper-layer header as per [RFC8986]. The CSID sequence ends with a last CSID in the last CSID container that does not have the REPLACE-CSID flavor, or with the special CSID value 0, or when reaching the end of the segment list, whichever comes first.",
      "ja": "高レベルでは、置換CSIDフレーバーを使用したCSIDシーケンスの開始時に、完全に形成された128ビットSID形式の最初のCSIDコンテナがIPv6ヘッダーの宛先アドレスにコピーされます。次に、置き換えられたCSIDフレーバーを備えたSIDの場合、SRセグメントエンドポイントノードは、次のようにSIDリストの次のSIDを決定します。SRHが存在する場合、SRセグメントのエンドポイントノードは、インデックス値が0でない場合、または0の場合、SRHの残りの値を減少させ、アクティブSIDの引数のインデックス値をK-1に設定する場合、アクティブSIDの引数のインデックス値を減少させます。更新されたインデックス値は、SRHの「セグメントリスト」インデックス \"セグメントの「セグメントリスト」インデックス「セグメント」にあるCSIDコンテナ内の次のCSIDの位置を示します。SRセグメントのエンドポイントノードは、この次のCSIDをIPv6ヘッダーの宛先アドレスフィールドのロケーターブロックに直後にコピーすることにより、次のSIDを構築し、アクティブなSIDロケーターノードと機能を次のCSIDのものと上書きします。SRHが存在しない場合、SRセグメントエンドポイントノードは、SID引数のインデックス値を無視し（end.DT2Mを除く、セクション4.2.7を参照）、[RFC8986]に従って上層ヘッダーを処理します。CSIDシーケンスは、置換CSIDフレーバーを持たない最後のCSIDコンテナの最後のCSID、または特別なCSID値0で終了します。"
    },
    {
      "indent": 0,
      "text": "4.2.1. End with REPLACE-CSID",
      "section_title": true,
      "ja": "4.2.1. 置換csidで終了します"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End SID with the REPLACE-CSID flavor, the SRH processing described in Section 4.1 of [RFC8986] is executed with the following modifications.",
      "ja": "End SIDとして局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを置換CSIDフレーバーで処理する場合、[RFC8986]のセクション4.1で説明されているSRH処理は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "Line S02 of SRH processing in Section 4.1 of [RFC8986] is replaced as follows.",
      "ja": "[RFC8986]のセクション4.1のSRH処理のラインS02は、次のように置き換えられます。"
    },
    {
      "indent": 3,
      "text": "S02.   If (Segments Left == 0 and (DA.Arg.Index == 0 or\n           Segment List[0][DA.Arg.Index-1] == 0)) {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Lines S09 to S15 are replaced by the following pseudocode.",
      "ja": "線S09からS15は、次の擬似コードに置き換えられます。"
    },
    {
      "indent": 3,
      "text": "R01. If (DA.Arg.Index != 0) {\nR02.   If ((Last Entry > max_LE) or (Segments Left > Last Entry)) {\nR03.     Send an ICMP Parameter Problem to the Source Address,\n           Code 0 (Erroneous header field encountered),\n           Pointer set to the Segments Left field,\n           interrupt packet processing and discard the packet.\nR04.   }\nR05.   Decrement DA.Arg.Index by 1.\nR06.   If (Segment List[Segments Left][DA.Arg.Index] == 0) {\nR07.     Decrement Segments Left by 1.\nR08.     Decrement IPv6 Hop Limit by 1.\nR09.     Update IPv6 DA with Segment List[Segments Left]\nR10.     Submit the packet to the egress IPv6 FIB lookup for\n          transmission to the new destination.\nR11.   }\nR12. } Else {\nR13.   If((Last Entry > max_LE) or (Segments Left > Last Entry+1)){\nR14.     Send an ICMP Parameter Problem to the Source Address,\n           Code 0 (Erroneous header field encountered),\n           Pointer set to the Segments Left field,\n           interrupt packet processing and discard the packet.\nR15.   }\nR16.   Decrement Segments Left by 1.\nR17.   Set DA.Arg.Index to (floor(128/LNFL) - 1).\nR18. }\nR19. Decrement IPv6 Hop Limit by 1.\nR20. Write Segment List[Segments Left][DA.Arg.Index] into the bits\n       [LBL..LBL+LNFL-1] of the Destination Address of the IPv6\n       header.\nR21. Submit the packet to the egress IPv6 FIB lookup for\n       transmission to the new destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Notes:",
      "ja": "注："
    },
    {
      "indent": 6,
      "text": "* DA.Arg.Index identifies the value contained in the bits [(128-ceiling(log_2(128/LNFL)))..127] in the Destination Address of the IPv6 header.",
      "ja": "* DA.ARG.INDEXは、IPv6ヘッダーの宛先アドレスで、BITS [（128 CEILING（LOG_2（128/LNFL）））に含まれる値を識別します。"
    },
    {
      "indent": 6,
      "text": "* Segment List[Segments Left][DA.Arg.Index] identifies the value contained in the bits [DA.Arg.Index*LNFL..(DA.Arg.Index+1)*LNFL-1] in the SRH Segment List entry at index Segments Left.",
      "ja": "* セグメントリスト[セグメントの左] [da.arg.index]ビットに含まれる値[da.arg.index*lnfl ..（da.arg.index+1）*lnfl-1]は、左のインデックスセグメントでのSRHセグメントリストエントリに識別します。"
    },
    {
      "indent": 3,
      "text": "The upper-layer header processing described in Section 4.1.1 of [RFC8986] is unchanged.",
      "ja": "[RFC8986]のセクション4.1.1で説明されている上層ヘッダー処理は変更されていません。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.6.",
      "ja": "完全な擬似コードのレンダリングは、付録A.6に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.2.2. End.X with REPLACE-CSID",
      "section_title": true,
      "ja": "4.2.2. end.xをedl.xを置き換えます"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.X SID with the REPLACE-CSID flavor, the procedure described in Section 4.2 of [RFC8986] is executed with the following modifications.",
      "ja": "end.x sidとして局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを置き換えて処理する場合、[RFC8986]のセクション4.2で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The pseudocode in Section 4.2.1 of this document is modified by replacing lines R10 and R21 as shown below.",
      "ja": "このドキュメントのセクション4.2.1の擬似コードは、以下に示すように行R10およびR21を置き換えることにより変更されます。"
    },
    {
      "indent": 3,
      "text": "R10. Submit the packet to the IPv6 module for transmission to the\n       new destination via a member of J.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "R21. Submit the packet to the IPv6 module for transmission to the\n       new destination via a member of J.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: the variable J is defined in Section 4.2 of [RFC8986].",
      "ja": "注：変数Jは、[RFC8986]のセクション4.2で定義されています。"
    },
    {
      "indent": 3,
      "text": "The SRH processing in Section 4.2 of [RFC8986] is replaced with the resulting pseudocode. The upper-layer header processing is unchanged.",
      "ja": "[RFC8986]のセクション4.2のSRH処理は、結果の擬似コードに置き換えられます。上層ヘッダー処理は変更されていません。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.7.",
      "ja": "完全な擬似コードのレンダリングは、付録A.7に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.2.3. End.T with REPLACE-CSID",
      "section_title": true,
      "ja": "4.2.3. end.tはexply-csidを使用しています"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.T SID with the REPLACE-CSID flavor, the procedure described in Section 4.3 of [RFC8986] is executed with the following modifications.",
      "ja": "end.t sidとして局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを置き換えて処理する場合、[RFC8986]のセクション4.3で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The pseudocode in Section 4.2.1 of this document is modified by replacing lines R10 and R21 as shown below.",
      "ja": "このドキュメントのセクション4.2.1の擬似コードは、以下に示すように行R10およびR21を置き換えることにより変更されます。"
    },
    {
      "indent": 3,
      "text": "R10.1. Set the packet's associated FIB table to T.\nR10.2. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the new destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "R21.1. Set the packet's associated FIB table to T.\nR21.2. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the new destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: the variable T is defined in Section 4.3 of [RFC8986].",
      "ja": "注：変数Tは、[RFC8986]のセクション4.3で定義されています。"
    },
    {
      "indent": 3,
      "text": "The SRH processing in Section 4.3 of [RFC8986] is replaced with the resulting pseudocode. The upper-layer header processing is unchanged.",
      "ja": "[RFC8986]のセクション4.3のSRH処理は、結果の擬似コードに置き換えられます。上層ヘッダー処理は変更されていません。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.8.",
      "ja": "完全な擬似コードのレンダリングは、付録A.8に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.2.4. End.B6.Encaps with REPLACE-CSID",
      "section_title": true,
      "ja": "4.2.4. end.B6.Encapsと交換csid"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.B6.Encaps SID with the REPLACE-CSID flavor, the procedure described in Section 4.13 of [RFC8986] is executed with the following modifications.",
      "ja": "end.b6.sidを置き換えてcsidフレーバーで局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、[RFC8986]のセクション4.13で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The pseudocode in Section 4.2.1 of this document is modified by replacing lines R10 and R21 as shown below.",
      "ja": "このドキュメントのセクション4.2.1の擬似コードは、以下に示すように行R10およびR21を置き換えることにより変更されます。"
    },
    {
      "indent": 3,
      "text": "R10.1. Push a new IPv6 header with its own SRH containing B.\nR10.2. Set the outer IPv6 SA to A.\nR10.3. Set the outer IPv6 DA to the first SID of B.\nR10.4. Set the outer Payload Length, Traffic Class, Flow Label,\n         Hop Limit, and Next Header fields.\nR10.5. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the next destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "R21.1. Push a new IPv6 header with its own SRH containing B.\nR21.2. Set the outer IPv6 SA to A.\nR21.3. Set the outer IPv6 DA to the first SID of B.\nR21.4. Set the outer Payload Length, Traffic Class, Flow Label,\n         Hop Limit, and Next Header fields.\nR21.5. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the next destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: the variables A and B, as well as the values of the Payload Length, Traffic Class, Flow Label, Hop Limit, and Next Header are defined in Section 4.13 of [RFC8986].",
      "ja": "注：変数AとB、およびペイロード長、トラフィッククラス、フローラベル、ホップ制限、および次のヘッダーの値は、[RFC8986]のセクション4.13で定義されています。"
    },
    {
      "indent": 3,
      "text": "The SRH processing in Section 4.13 of [RFC8986] is replaced with the resulting pseudocode. The upper-layer header processing is unchanged.",
      "ja": "[RFC8986]のセクション4.13のSRH処理は、結果の偽コードに置き換えられます。上層ヘッダー処理は変更されていません。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.9.",
      "ja": "完全な擬似コードのレンダリングは、付録A.9に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.2.5. End.B6.Encaps.Red with REPLACE-CSID",
      "section_title": true,
      "ja": "4.2.5. end.b6.encaps.red with applect-csid"
    },
    {
      "indent": 3,
      "text": "This is an optimization of the End.B6.Encaps with REPLACE-CSID behavior.",
      "ja": "これは、end.b6.encapsを置き換えるcsidの動作を最適化します。"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.B6.Encaps.Red SID with the REPLACE-CSID flavor, the procedure described in Section 4.2.4 of this document is executed with the modifications in Section 4.14 of [RFC8986].",
      "ja": "end.b6.encaps.red sidを置き換えたcsidフレーバーで局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、このドキュメントのセクション4.2.4で説明されている手順は、[RFC8986]のセクション4.14の修正とともに実行されます。"
    },
    {
      "indent": 0,
      "text": "4.2.6. End.BM with REPLACE-CSID",
      "section_title": true,
      "ja": "4.2.6. end.bmを搭載したcsid"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.BM SID with the REPLACE-CSID flavor, the procedure described in Section 4.15 of [RFC8986] is executed with the following modifications.",
      "ja": "end.BM SIDとして局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを置き換えて処理する場合、[RFC8986]のセクション4.15で説明されている手順は、次の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "The pseudocode in Section 4.2.1 of this document is modified by replacing lines R10 and R21 as shown below.",
      "ja": "このドキュメントのセクション4.2.1の擬似コードは、以下に示すように行R10およびR21を置き換えることにより変更されます。"
    },
    {
      "indent": 3,
      "text": "R10.1. Push the MPLS label stack for B.\nR10.2. Submit the packet to the MPLS engine for transmission.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "R21.1. Push the MPLS label stack for B.\nR21.2. Submit the packet to the MPLS engine for transmission.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: the variable B is defined in Section 4.15 of [RFC8986].",
      "ja": "注：変数Bは、[RFC8986]のセクション4.15で定義されています。"
    },
    {
      "indent": 3,
      "text": "The SRH processing in Section 4.15 of [RFC8986] is replaced with the resulting pseudocode. The upper-layer header processing is unchanged.",
      "ja": "[RFC8986]のセクション4.15のSRH処理は、結果の擬似コードに置き換えられます。上層ヘッダー処理は変更されていません。"
    },
    {
      "indent": 3,
      "text": "A rendering of the complete pseudocode is provided in Appendix A.10.",
      "ja": "完全な擬似コードのレンダリングは、付録A.10に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.2.7. End.DX and End.DT with REPLACE-CSID",
      "section_title": true,
      "ja": "4.2.7. end.dxおよびend.dtを除いて、csid"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.DX6, End.DX4, End.DT6, End.DT4, End.DT46, End.DX2, End.DX2V, or End.DT2U SID with the REPLACE-CSID flavor, the corresponding procedure described in Sections 4.4 through 4.11 of [RFC8986] is executed.",
      "ja": "end.dx6、end.dx4、end.dt6、end.dt4、end.dt46、end.dx2、end.dx2v、またはend.dt2u sidを使用したed.dt2u sidを使用して、dt2u sidを使用して、dt2u sidをend.dt46としてend.dx6、end.dt6、end.dt4、end.dt46として一致させるIPv6パケットを処理する場合、対応する手順では、4.11から4.11を使用した4.11の4.11の4.11の順に記載されています。"
    },
    {
      "indent": 3,
      "text": "These SIDs differ from those defined in [RFC8986] by the presence of an Argument as part of the SID structure. The Argument value is ignored by the SR segment endpoint node.",
      "ja": "これらのSIDは、SID構造の一部として議論が存在することによって[RFC8986]で定義されているものとは異なります。引数値は、SRセグメントエンドポイントノードによって無視されます。"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.DT2M SID with the REPLACE-CSID flavor, the procedure described in Section 4.12 of [RFC8986] is executed with the following modification.",
      "ja": "end.dt2m SIDとしてローカルにインスタンス化されたFIBエントリに一致するIPv6パケットを置換CSIDフレーバーで処理する場合、[RFC8986]のセクション4.12で説明されている手順は、以下の変更で実行されます。"
    },
    {
      "indent": 3,
      "text": "For any End.DT2M SID with the REPLACE-CSID flavor, the value of Arg.FE2 is 16 bits long. The SR segment endpoint node obtains the value Arg.FE2 from the 16 most significant bits of DA.Argument if DA.Arg.Index is zero or from the 16 least significant bits of the next position in the current CSID container (Segment List[Segments Left][DA.Arg.Index-1]) otherwise (DA.Arg.Index is non-zero).",
      "ja": "任意のend.dt2m sidの場合、csidフレーバーを置き換えると、arg.fe2の値は長さ16ビットです。SRセグメントエンドポイントノードは、DA.ARG.INDEXがゼロまたは現在のCSIDコンテナの次の位置の16個の少なくとも有意なビットの場合、DA.Argumentの16個の最も重要なビットから値arg.fe2を取得します（セグメントリスト[セグメント] [セグメント] [da.arg.index-1]）"
    },
    {
      "indent": 0,
      "text": "4.2.8. Combination with PSP, USP, and USD Flavors",
      "section_title": true,
      "ja": "4.2.8. PSP、USP、およびUSDフレーバーとの組み合わせ"
    },
    {
      "indent": 3,
      "text": "PSP: When combined with the REPLACE-CSID flavor, the additional PSP flavor instructions defined in Section 4.16.1.2 of [RFC8986] are inserted after lines R09 and R20 of the pseudocode in Section 4.2.1, and the first line of the inserted instructions after R20 is modified as follows.",
      "ja": "PSP：置換CSIDフレーバーと組み合わせると、[RFC8986]のセクション4.16.1.2で定義された追加のPSPフレーバー命令は、セクション4.2.1の擬似コードのラインR09およびR20の後に挿入され、R20が次のように変更された後に挿入された命令の最初の行は挿入されます。"
    },
    {
      "indent": 3,
      "text": "R20.1.   If (Segments Left == 0 and (DA.Arg.Index == 0 or\n             Segment List[0][DA.Arg.Index-1] == 0)) {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: Segment List[Segments Left][DA.Arg.Index-1] identifies the value contained in the bits [(DA.Arg.Index-1)*LNFL..DA.Arg.Index*LNFL-1] in the SRH Segment List entry at index Segments Left.",
      "ja": "注：セグメントリスト[セグメントの左] [da.arg.index-1]は、左のインデックスセグメントでのSRHセグメントリストエントリのビット[（da.arg.index-1）*lnfl..da.arg.index*lnfl-1]にbitsに含まれる値を識別します。"
    },
    {
      "indent": 3,
      "text": "USP:",
      "ja": "USP:"
    },
    {
      "indent": 12,
      "text": "When combined with the REPLACE-CSID flavor, the line S03 of the pseudocode in Section 4.2.1 are substituted by the USP flavor instructions S03.1 to S03.4 defined in Section 4.16.2 of [RFC8986]. Note that S03 is shown in the complete pseudocode in Appendix A.6.",
      "ja": "置換CSIDフレーバーと組み合わせると、セクション4.2.1の擬似コードのラインS03は、[RFC8986]のセクション4.16.2で定義されているUSPフレーバー命令S03.1からS03.4に置き換えられます。S03は、付録A.6の完全な擬似コードに示されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "USD:",
      "ja": "USD:"
    },
    {
      "indent": 12,
      "text": "The USD flavor defined in Section 4.16.3 of [RFC8986] is unchanged when combined with the REPLACE-CSID flavor.",
      "ja": "[RFC8986]のセクション4.16.3で定義されているUSDフレーバーは、置換CSIDフレーバーと組み合わせると変更されません。"
    },
    {
      "indent": 0,
      "text": "5. CSID Allocation",
      "section_title": true,
      "ja": "5. CSID割り当て"
    },
    {
      "indent": 3,
      "text": "The CSID value of 0 is reserved. It is used to indicate the end of a CSID container.",
      "ja": "0のCSID値は予約されています。CSID容器の端を示すために使用されます。"
    },
    {
      "indent": 3,
      "text": "In order to efficiently manage the CSID numbering space, a deployment may divide it into two non-overlapping sub-spaces: a GIB and a LIB.",
      "ja": "CSID番号のスペースを効率的に管理するために、展開はそれをGIBとLIBの2つの非重複サブスペースに分割する場合があります。"
    },
    {
      "indent": 3,
      "text": "The CSID values that are allocated from the GIB have a global semantic within the Locator-Block, while those that are allocated from the LIB have a local semantic on an SR segment endpoint node and within the scope of the Locator-Block.",
      "ja": "GIBから割り当てられたCSID値は、ロケーターブロック内にグローバルなセマンティックを持ち、LIBから割り当てられた値は、SRセグメントエンドポイントノードとロケーターブロックの範囲内でローカルセマンティックを持っています。"
    },
    {
      "indent": 3,
      "text": "The concept of LIB is applicable to SRv6 and specifically to its NEXT-CSID and REPLACE-CSID flavors. The shorter the CSID, the more benefit the LIB brings.",
      "ja": "LIBの概念は、SRV6に、特に次のCSIDおよび交換CSIDフレーバーに適用できます。CSIDが短いほど、LIBがもたらすメリットが高くなります。"
    },
    {
      "indent": 3,
      "text": "The opportunity to use these sub-spaces, their size, and their CSID allocation policy depends on the CSID length relative to the size of the network (e.g., number of nodes, links, service routes). Some guidelines for a typical deployment scenario are provided in the below subsections.",
      "ja": "これらのサブスペース、サイズ、およびCSID割り当てポリシーを使用する機会は、ネットワークのサイズ（ノード、リンク、サービスルートの数など）に比べてCSID長に依存します。典型的な展開シナリオのいくつかのガイドラインは、以下のサブセクションに記載されています。"
    },
    {
      "indent": 0,
      "text": "5.1. Global CSID",
      "section_title": true,
      "ja": "5.1. グローバルCSID"
    },
    {
      "indent": 3,
      "text": "A global CSID is a CSID allocated from the GIB.",
      "ja": "グローバルCSIDは、GIBから割り当てられたCSIDです。"
    },
    {
      "indent": 3,
      "text": "A global CSID identifies a segment defined at the Locator-Block level. The tuple (Locator-Block, CSID) identifies the same segment across all nodes of the SR domain. A typical example is a prefix segment bound to the End behavior.",
      "ja": "グローバルCSIDは、ロケーターブロックレベルで定義されたセグメントを識別します。Tuple（Locator-Block、CSID）は、SRドメインのすべてのノードで同じセグメントを識別します。典型的な例は、最終動作に結合した接頭辞セグメントです。"
    },
    {
      "indent": 3,
      "text": "A node can have multiple global CSIDs under the same Locator-Block (e.g., one per IGP flexible algorithm ([RFC9350])). Multiple nodes may share the same global CSID (e.g., anycast [RFC4786]).",
      "ja": "ノードは、同じロケーターブロックの下に複数のグローバルCSIDを持つことができます（たとえば、IGP Flexible Algorithm（[RFC9350]））。複数のノードは、同じグローバルCSIDを共有する場合があります（例：Anycast [RFC4786]）。"
    },
    {
      "indent": 0,
      "text": "5.2. Local CSID",
      "section_title": true,
      "ja": "5.2. ローカルCSID"
    },
    {
      "indent": 3,
      "text": "A local CSID is a CSID allocated from the LIB.",
      "ja": "ローカルCSIDは、LIBから割り当てられたCSIDです。"
    },
    {
      "indent": 3,
      "text": "A local CSID identifies a segment defined at the node level and within the scope of a particular Locator-Block. The tuple (Locator-Block, CSID) identifies a different segment on each node of the SR domain. A typical example is a non-routed Adjacency segment bound to the End.X behavior.",
      "ja": "ローカルCSIDは、特定のロケーターブロックの範囲内で、ノードレベルで定義されたセグメントを識別します。Tuple（Locator-Block、CSID）は、SRドメインの各ノードで異なるセグメントを識別します。典型的な例は、end.xの動作に縛られた非ルーティングされていない隣接セグメントです。"
    },
    {
      "indent": 3,
      "text": "Let N1 and N2 be two different physical nodes of the SR domain and I a local CSID value: N1 may allocate value I to SID S1 and N2 may allocate the same value I to SID S2.",
      "ja": "N1とN2をSRドメインの2つの異なる物理ノードとし、IはローカルCSID値になります。N1は、SID S1とN2に値Iを割り当てることができ、N2は同じ値IをSID S2に割り当てることができます。"
    },
    {
      "indent": 0,
      "text": "5.3. Recommended Installation of CSIDs in FIB",
      "section_title": true,
      "ja": "5.3. FIBでのCSIDの推奨インストール"
    },
    {
      "indent": 3,
      "text": "Section 4.3 of [RFC8754] defines how an SR segment endpoint node identifies a locally instantiated SRv6 SID. To ensure that any valid argument value is accepted, an SR segment endpoint node instantiating a NEXT-CSID or REPLACE-CSID flavor SID should install a corresponding FIB entry that matches only the Locator and Function parts of the SID (i.e., with a prefix length of LBL + LNL + FL).",
      "ja": "[RFC8754]のセクション4.3は、SRセグメントのエンドポイントノードがローカルにインスタンス化されたSRV6 SIDをどのように識別するかを定義しています。有効な引数値が受け入れられるようにするために、次のCSIDまたは置換CSIDフレーバーSIDをインスタンス化するSRセグメントエンドポイントノードは、SIDのロケーターと関数パーツのみに一致する対応するFIBエントリをインストールする必要があります（つまり、LBL + LNL + FLのプレフィックス長）。"
    },
    {
      "indent": 3,
      "text": "In addition, an SR segment endpoint node instantiating NEXT-CSID flavor SIDs from both the GIB and LIB may install combined \"Global + Local\" FIB entries to match a sequence of global and local CSIDs in a single longest-prefix match (LPM) lookup.",
      "ja": "さらに、GIBとLIBの両方からの次のCSIDフレーバーSIDをインスタンス化するSRセグメントエンドポイントノードは、「グローバル +ローカル」FIBエントリを組み合わせて、単一の長いPrefixマッチ（LPM）ルックアップのグローバルCSIDとローカルCSIDのシーケンスを一致させることができます。"
    },
    {
      "indent": 3,
      "text": "For example, let us consider an SR segment endpoint node 10 instantiating the following two NEXT-CSID flavor SIDs according to the CSID length, LBL, and GIB/LIB recommendations in this section.",
      "ja": "たとえば、このセクションのCSID長、LBL、およびGIB/LIBの推奨に応じて、次の2つの次のCSIDフレーバーSIDをインスタンス化するSRセグメントエンドポイントノード10を考えてみましょう。"
    },
    {
      "indent": 6,
      "text": "* The SID 2001:db8:b1:10:: bound to the End behavior with the NEXT-CSID flavor is instantiated from a GIB with:",
      "ja": "* SID 2001：DB8：B1：10 ::次のCSIDフレーバーで最終動作に結合されます。"
    },
    {
      "indent": 12,
      "text": "- LBL = 48 (Locator-Block value 0x20010db800b1),",
      "ja": "- LBL = 48（ロケーターブロック値0x20010DB800B1）、"
    },
    {
      "indent": 12,
      "text": "- LNL = 16 (Locator-Node value 0x0010),",
      "ja": "- lnl = 16（ロケーターノード値0x0010）、"
    },
    {
      "indent": 12,
      "text": "- FL = 0, and",
      "ja": "- fl = 0、および"
    },
    {
      "indent": 12,
      "text": "- AL = 64.",
      "ja": "- Al = 64。"
    },
    {
      "indent": 6,
      "text": "* The SID 2001:db8:b1:f123:: bound to the End.X behavior for its local IGP adjacency 123 with the NEXT-CSID flavor is instantiated from a LIB with:",
      "ja": "* SID 2001：DB8：B1：F123 ::次のCSIDフレーバーを備えたローカルIGP隣接順123のEnd.xの動作は次のようにインスタンス化されます。"
    },
    {
      "indent": 12,
      "text": "- LBL = 48 (Locator-Block value 0x20010db800b1),",
      "ja": "- LBL = 48（ロケーターブロック値0x20010DB800B1）、"
    },
    {
      "indent": 12,
      "text": "- LNL = 0,",
      "ja": "- lnl = 0、"
    },
    {
      "indent": 12,
      "text": "- FL = 16 (Function value 0xf123), and",
      "ja": "- fl = 16（関数値0xf123）、および"
    },
    {
      "indent": 12,
      "text": "- AL = 64.",
      "ja": "- Al = 64。"
    },
    {
      "indent": 3,
      "text": "For SID 2001:db8:b1:10::, Node 10 would install the FIB entry 2001:db8:b1:10::/64 bound to the End SID with the NEXT-CSID flavor.",
      "ja": "SID 2001：DB8：B1：10 ::、ノード10はFIBエントリ2001：DB8：B1：10 ::/64を次のCSIDフレーバーでエンドSIDにバインドします。"
    },
    {
      "indent": 3,
      "text": "For SID 2001:db8:b1:f123::, Node 10 would install the FIB entry 2001:db8:b1:f123::/64 bound to the End.X SID for adjacency 123 with the NEXT-CSID flavor.",
      "ja": "SID 2001：DB8：B1：F123 ::、Node 10はFIBエントリ2001：DB8：B1：F123 ::/64をインストールします。"
    },
    {
      "indent": 3,
      "text": "In addition, Node 10 may also install the combined FIB entry 2001:db8:b1:10:f123::/80 bound to the End.X SID for adjacency 123 with the NEXT-CSID flavor.",
      "ja": "さらに、Node 10は、次のCSIDフレーバーを備えた隣接123のために、End.x SIDにバインドされているdb8：db8：b1：10：f123 ::/80を組み合わせたFIBエントリ2001：db8：b1：10：f123 ::/80もインストールする場合があります。"
    },
    {
      "indent": 3,
      "text": "As another example, let us consider an SR segment endpoint node 20 instantiating the following two REPLACE-CSID flavor SIDs according to the CSID length, LBL, and GIB/LIB recommendations in this section.",
      "ja": "別の例として、このセクションのCSID長、LBL、およびGIB/LIBの推奨に応じて、次の2つの交換CSIDフレーバーSIDをインスタンス化するSRセグメントエンドポイントノード20を考えてみましょう。"
    },
    {
      "indent": 6,
      "text": "* 2001:db8:b2:20:1:: from a GIB with LBL = 48, LNL = 16, FL = 16, AL = 48, and bound to the End behavior with the REPLACE-CSID flavor.",
      "ja": "* 2001：db8：b2：20：1 :: lbl = 48、lnl = 16、fl = 16、al = 48のギブから、および置換CSIDフレーバーで最終挙動に結合します。"
    },
    {
      "indent": 6,
      "text": "* 2001:db8:b2:20:123:: from a GIB with LBL = 48, LNL = 16, FL = 16, AL = 48, and bound to the End.X behavior for its local IGP adjacency 123 with the REPLACE-CSID flavor.",
      "ja": "* 2001：db8：b2：20：20：123 :: lbl = 48、lnl = 16、fl = 16、al = 48、およびend.xの動作に結合して、csidフレーバーを置き換えます。"
    },
    {
      "indent": 3,
      "text": "For SID 2001:db8:b2:20:1::, Node 20 would install the FIB entry 2001:db8:b2:20:1::/80 bound to the End SID with the REPLACE-CSID flavor.",
      "ja": "SID 2001：DB8：B2：20：1 ::、ノード20はFIBエントリ2001：DB8：B2：20：1 ::/80を、交換CSIDフレーバーでエンドSIDにバインドします。"
    },
    {
      "indent": 3,
      "text": "For SID 2001:db8:b2:20:123::, Node 20 would install the FIB entry 2001:db8:b2:20:123::/80 bound to the End.X SID for adjacency 123 with the REPLACE-CSID flavor.",
      "ja": "SID 2001：DB8：B2：20：123 ::、ノード20はFIBエントリ2001：DB8：B2：20：123 ::/80をインストールします。"
    },
    {
      "indent": 0,
      "text": "6. SR Source Node",
      "section_title": true,
      "ja": "6. SRソースノード"
    },
    {
      "indent": 3,
      "text": "An SR source node may learn from a control plane protocol (see Section 8) or local configuration the SIDs that it can use in a segment list, along with their respective SRv6 endpoint behavior, structure, and any other relevant attribute (e.g., the set of L3 adjacencies associated with an End.X SID).",
      "ja": "SRソースノードは、コントロールプレーンプロトコル（セクション8を参照）またはローカル構成から学習する場合があります。これは、セグメントリストで使用できるSIDと、それぞれのSRV6エンドポイントの動作、構造、およびその他の関連属性（例えば、end.x SIDに関連するL3隣接のセット）。"
    },
    {
      "indent": 0,
      "text": "6.1. SID Validation for Compression",
      "section_title": true,
      "ja": "6.1. 圧縮のSID検証"
    },
    {
      "indent": 3,
      "text": "As part of the compression process or as a preliminary step, the SR source node MUST validate the SID structure of each SID of this document in the segment list. The SR source node does so regardless of whether the segment list is explicitly configured, locally computed, or advertised by a controller (e.g., via BGP [BGP-SR-Policy] or PCEP [RFC9603]).",
      "ja": "圧縮プロセスの一部または予備ステップとして、SRソースノードは、セグメントリストのこのドキュメントの各SIDのSID構造を検証する必要があります。SRソースノードは、セグメントリストがコントローラーによって明示的に構成、ローカル計算、または宣伝されているかどうかに関係なく（例：BGP [BGP-SR-Policy]またはPCEP [RFC9603]）。"
    },
    {
      "indent": 3,
      "text": "A SID structure is valid for compression if it meets all the following conditions:",
      "ja": "SID構造は、次のすべての条件を満たしている場合、圧縮に有効です。"
    },
    {
      "indent": 6,
      "text": "* The LBL is not 0.",
      "ja": "* LBLは0ではありません。"
    },
    {
      "indent": 6,
      "text": "* The LNFL is not 0.",
      "ja": "* LNFLは0ではありません。"
    },
    {
      "indent": 6,
      "text": "* The AL is equal to 128-LBL-LNL-FL.",
      "ja": "* ALは128-LBL-LNL-FLに等しくなります。"
    },
    {
      "indent": 3,
      "text": "When compressing a SID list, the SR source node MUST treat an invalid SID structure as unknown. A SID with an unknown SID structure is not compressible.",
      "ja": "SIDリストを圧縮する場合、SRソースノードは無効なSID構造を不明として扱う必要があります。未知のSID構造を持つSIDは圧縮できません。"
    },
    {
      "indent": 3,
      "text": "Section 8 discusses how the SIDs of this document and their structure can be advertised to the SR source node through various control plane protocols. The SID structure may also be learned through configuration or other management protocols. The details of such mechanisms are outside the scope of this document.",
      "ja": "セクション8では、このドキュメントのSIDとその構造を、さまざまなコントロールプレーンプロトコルを介してSRソースノードに宣伝する方法について説明します。SID構造は、構成またはその他の管理プロトコルを通じて学習することもできます。このようなメカニズムの詳細は、このドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "6.2. Segment List Compression",
      "section_title": true,
      "ja": "6.2. セグメントリスト圧縮"
    },
    {
      "indent": 3,
      "text": "An SR source node MAY compress a SID list when it includes NEXT-CSID and/or REPLACE-CSID flavor SIDs to reduce the packet header length.",
      "ja": "SRソースノードは、Packet Headerの長さを減らすために、次のCSIDおよび/または交換CSIDフレーバーSIDを含む場合、SIDリストを圧縮する場合があります。"
    },
    {
      "indent": 3,
      "text": "It is out of the scope of this document to describe the mechanism through which an uncompressed SID list is derived, since such a mechanism may include a wide range of considerations independent of compression (e.g., minimizing a specific metric, excluding certain links, or providing a loop-free fast-reroute path). As general guidance for implementation or future specification, such a mechanism should aim to select the combination of SIDs that would result in the shortest compressed SID list. For example, by selecting a CSID flavor SID over an equivalent non-CSID flavor SID or by consistently selecting SIDs of the same CSID flavor within each routing domain.",
      "ja": "このようなメカニズムには、圧縮とは無関係に幅広い考慮事項が含まれる可能性があるため、圧縮されていないSIDリストが導出されるメカニズムを説明するのは、このドキュメントの範囲外です（たとえば、特定のリンクを除く特定のメトリックを最小限に抑えたり、ループフリーの高速パスを提供したりする）。実装または将来の仕様に関する一般的なガイダンスとして、このようなメカニズムは、最短の圧縮SIDリストになるSIDの組み合わせを選択することを目的とする必要があります。たとえば、同等の非CSIDフレーバーSIDでCSIDフレーバーSIDを選択するか、各ルーティングドメイン内で同じCSIDフレーバーのSIDを一貫して選択することにより。"
    },
    {
      "indent": 3,
      "text": "The SID list that the SR source node pushes onto the packet MUST comply with the rules in Sections 6.3 and 6.4 and express the same list of segments as the original SID list. If these rules are not followed, the packet may get dropped or misrouted.",
      "ja": "SRソースノードがパケットにプッシュするSIDリストは、セクション6.3および6.4のルールに準拠し、元のSIDリストと同じセグメントリストを表現する必要があります。これらのルールが順守されない場合、パケットが削除または誤って削除される場合があります。"
    },
    {
      "indent": 3,
      "text": "If an SR source node chooses to compress the SID list, one method is described below for illustrative purposes. Any other method producing a compressed SID list of equal or shorter length than the uncompressed SID list MAY be used.",
      "ja": "SRソースノードがSIDリストを圧縮することを選択した場合、説明の目的のために1つの方法を以下に説明します。非圧縮SIDリストよりも等または短い長さの圧縮SIDリストを作成する他の方法を使用することができます。"
    },
    {
      "indent": 3,
      "text": "This method walks the uncompressed SID list and compresses each series of consecutive NEXT-CSID flavor SIDs and each series of consecutive REPLACE-CSID flavor SIDs.",
      "ja": "この方法では、非圧縮SIDリストを操作し、連続した次のCSIDフレーバーSIDと連続した交換CSIDフレーバーSIDの各シリーズを圧縮します。"
    },
    {
      "indent": 6,
      "text": "* When the compression method encounters a series of one or more consecutive compressible NEXT-CSID flavor SIDs, it compresses the series as follows. A SID with the NEXT-CSID flavor is compressible if its structure is known to the SR source node and its Argument value is 0.",
      "ja": "* 圧縮方法が一連の1つ以上の連続した圧縮可能なNext-CSIDフレーバーSidsに遭遇すると、次のようにシリーズを圧縮します。次のCSIDフレーバーを備えたSIDは、その構造がSRソースノードに知られており、その引数値が0である場合、圧縮可能です。"
    },
    {
      "indent": 3,
      "text": "S01. Initialize a NEXT-CSID container equal to the first SID in\n       the series and initialize the remaining capacity of the\n       CSID container to the AL of that SID\nS02. For each subsequent SID in the series {\nS03.   If the current SID Locator-Block matches that of the CSID\n         container and the current SID LNFL is lower than or equal\n         to the remaining capacity of the NEXT-CSID container {\nS04.     Copy the current SID Locator-Node and Function to the\n           most significant remaining Argument bits of the\n           NEXT-CSID container and decrement the remaining\n           capacity by LNFL\nS05.   } Else {\nS06.     Push the NEXT-CSID container onto the compressed SID list\nS07.     Initialize a new NEXT-CSID container equal to the current\n           SID in the series and initialize the remaining capacity\n           of the NEXT-CSID container to the AL of that SID\nS08.   } // End If\nS09. } // End For\nS10. If at least one SID remains in the uncompressed SID list\n       (following the series of compressible NEXT-CSID flavor\n       SIDs) {\nS11.   Set S to the next SID in the uncompressed SID list\nS12.   If S is advertised with a SID structure, and the\n         Locator-Block of S matches that of the NEXT-CSID\n         container, and the sum of the Locator-Node, Function, and\n         Argument length of S is lower than or equal to the\n         remaining capacity of the CSID container {\nS13.     Copy the Locator-Node, Function, and Argument of S to the\n           most significant remaining Argument bits of the CSID\n           container\nS14.   } // End If\nS15. } // End If\nS16. Push the NEXT-CSID container onto the compressed SID list",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "* When the compression method encounters a series of REPLACE-CSID flavor SIDs of the same CSID length in the uncompressed SID list, it compresses the series as per the following high-level pseudocode. A compression checking function ComCheck(F, S) is defined to check if two SIDs F and S share the same SID structure and Locator-Block value, and if S has either no Argument or an Argument with value 0. If the check passes, then ComCheck(F,S) returns true.",
      "ja": "* 圧縮方法が、非圧縮SIDリストで同じCSID長の一連の置換CSIDフレーバーSIDに遭遇すると、次の高レベルの擬似コードに従ってシリーズを圧縮します。圧縮チェック関数comcheck（f、s）は、2つのSIDS FとSが同じSID構造とロケーターブロック値を共有するかどうかを確認するために定義されます。Sが値0の引数または引数のいずれかを持っていないかどうかを確認します。"
    },
    {
      "indent": 3,
      "text": "S01. Initialize a REPLACE-CSID container in full SID format equal\n       to the first SID in the series\nS02. Push the REPLACE-CSID container onto the compressed SID list\nS03. Initialize a new REPLACE-CSID container in packed format if\n       there are more than one SIDs and initialize the remaining\n       capacity of the REPLACE-CSID container to 128 bits\nS04. For each subsequent SID in the uncompressed SID list {\nS05.   Set S to the current SID in the uncompressed SID list\nS06.   If ComCheck(First SID, S) {\nS07.     If the LNFL of S is lower than or equal to\n           the remaining capacity of the REPLACE-CSID container {\nS08.       Copy the Locator-Node and Function of S to the least\n             significant remaining bits of the REPLACE-CSID\n             container and decrement the remaining capacity by\n             LNFL  // Note\nS09.     } Else {\nS10.       Push the REPLACE-CSID container onto the compressed SID\n             list\nS11.       Initialize a new REPLACE-CSID container in packed\n             format with all bits set to 0\nS12.       Copy the Locator-Node and Function of S to the least\n             significant remaining bits of the REPLACE-CSID\n             container and decrement the remaining capacity by\n             LNFL  // Note\nS13.     }\nS14.     If S is not a REPLACE-CSID flavor SID, then break\nS15.   } Else {\nS16.     Break\nS17.   } // End If\nS18. } // End For\nS19. Push the REPLACE-CSID container (if it is not empty) onto the\n       compressed SID list",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Note: When the last CSID is an End.DT2M SID with the REPLACE-CSID flavor, if there are 0 or at least two CSID positions left in the current REPLACE-CSID container, the CSID is encoded as described above and the value of the Arg.FE2 argument is placed in the 16 least significant bits of the next CSID position. Otherwise (if there is only one CSID position left in the current REPLACE-CSID container), the current REPLACE-CSID container is pushed onto the SID list (the value of the CSID position 0 remains zero) and the End.DT2M SID with the REPLACE-CSID flavor is encoded in full SID format with the value of the Arg.FE2 argument in the 16 most significant bits of the SID Argument.",
      "ja": "注：最後のCSIDが交換型フレーバーを備えたend.DT2M SIDである場合、現在の置換CSIDコンテナに残された0または少なくとも2つのCSID位置がある場合、CSIDは上記のようにエンコードされ、Arg.fe2引数の値は次のCSID位置の16個の少なくとも有意なビットに配置されます。それ以外の場合は（現在の置換CSIDコンテナに1つのCSID位置しか残っていない場合）、電流の交換CSIDコンテナがSIDリストに押し込まれ（CSID位置0の値はゼロのままです）、dt2m SIDは、SIDの16の基準の値で完全なSID形式でエンコードされます。"
    },
    {
      "indent": 3,
      "text": "In all remaining cases (i.e., when the compression method encounters a SID in the uncompressed SID list that is not handled by any of the previous subroutines), it pushes this SID as is onto the compressed SID list.",
      "ja": "残りのすべての場合（つまり、圧縮方法が以前のサブルーチンのいずれでも処理されない非圧縮SIDリストでSIDに遭遇すると、このSIDを圧縮SIDリストにプッシュします。"
    },
    {
      "indent": 3,
      "text": "Regardless of how a compressed SID list is produced, the SR source node writes it in the IPv6 packet as described in Sections 4.1 and 4.1.1 of [RFC8754]. The text is reproduced below for reference.",
      "ja": "圧縮されたSIDリストの作成方法に関係なく、SRソースノードは、[RFC8754]のセクション4.1および4.1.1で説明されているように、IPv6パケットに書き込みます。テキストは、参照のために以下に再現されています。"
    },
    {
      "indent": 0,
      "text": "A source node steers a packet into an SR Policy. If the SR Policy results in a Segment List containing a single segment, and there is no need to add information to the SRH flag or add TLV; the DA is set to the single Segment List entry, and the SRH MAY be omitted.",
      "ja": "ソースノードは、パケットをSRポリシーに導きます。SRポリシーが単一のセグメントを含むセグメントリストを作成し、SRHフラグに情報を追加したり、TLVを追加する必要がない場合。DAは単一のセグメントリストエントリに設定されており、SRHは省略できます。"
    },
    {
      "indent": 0,
      "text": "When needed, the SRH is created as follows:",
      "ja": "必要に応じて、SRHは次のように作成されます。"
    },
    {
      "indent": 0,
      "text": "The Next Header and Hdr Ext Len fields are set as specified in [RFC8200].",
      "ja": "次のヘッダーとHDR ext Lenフィールドは、[RFC8200]で指定されているとおりに設定されています。"
    },
    {
      "indent": 0,
      "text": "The Routing Type field is set to 4.",
      "ja": "ルーティングタイプフィールドは4に設定されています。"
    },
    {
      "indent": 0,
      "text": "The DA of the packet is set with the value of the first segment.",
      "ja": "パケットのDAは、最初のセグメントの値で設定されます。"
    },
    {
      "indent": 0,
      "text": "The first element of the SRH Segment List is the ultimate segment. The second element is the penultimate segment, and so on.",
      "ja": "SRHセグメントリストの最初の要素は、究極のセグメントです。2番目の要素は、最後から2番目のセグメントなどです。"
    },
    {
      "indent": 0,
      "text": "The Segments Left field is set to n-1, where n is the number of elements in the SR Policy.",
      "ja": "左フィールドはn-1に設定されています。n-nはSRポリシーの要素の数です。"
    },
    {
      "indent": 0,
      "text": "The Last Entry field is set to n-1, where n is the number of elements in the SR Policy.",
      "ja": "最後のエントリフィールドはn-1に設定されており、nはSRポリシーの要素の数です。"
    },
    {
      "indent": 0,
      "text": "TLVs (including HMAC) may be set according to their specification.",
      "ja": "TLV（HMACを含む）は、その仕様に従って設定できます。"
    },
    {
      "indent": 0,
      "text": "The packet is forwarded toward the packet's Destination Address (the first segment).",
      "ja": "パケットは、パケットの宛先アドレス（最初のセグメント）に向かって転送されます。"
    },
    {
      "indent": 0,
      "text": "When a source does not require the entire SID list to be preserved in the SRH, a reduced SRH may be used.",
      "ja": "ソースがSRHにSIDリスト全体を保存する必要がない場合、SRHの削減を使用できます。"
    },
    {
      "indent": 0,
      "text": "A reduced SRH does not contain the first segment of the related SR Policy (the first segment is the one already in the DA of the IPv6 header), and the Last Entry field is set to n-2, where n is the number of elements in the SR Policy.",
      "ja": "SRHの削減には、関連するSRポリシーの最初のセグメント（最初のセグメントはIPv6ヘッダーのDAに既にあるセグメント）が含まれておらず、最後のエントリフィールドはN-2に設定されています。ここで、NはSRポリシーの要素の数です。"
    },
    {
      "indent": 0,
      "text": "6.3. Rules for Segment Lists Containing NEXT-CSID Flavor SIDs",
      "section_title": true,
      "ja": "6.3. 次のCSIDフレーバーSIDを含むセグメントリストのルール"
    },
    {
      "indent": 8,
      "text": "1. If a Destination Options header would follow an SRH with a segment list of more than one segment compressed as a single NEXT-CSID container, the SR source node MUST NOT omit the SRH.",
      "ja": "1. 宛先オプションヘッダーが、単一のNext-CSIDコンテナとして圧縮された複数のセグメントのセグメントリストを使用してSRHに従う場合、SRソースノードはSRHを省略してはなりません。"
    },
    {
      "indent": 8,
      "text": "2. When the last Segment List entry (index 0) in the SRH is a NEXT-CSID container representing more than one segment and the segment S preceding the first segment of this NEXT-CSID container in the segment list has the PSP flavor, then the PSP operation is performed at the SR segment endpoint node of S. If the PSP behavior should instead be performed at the penultimate segment along the path, then the SR source node MUST NOT compress the ultimate SID of the SID list into a NEXT-CSID container.",
      "ja": "2. SRHの最後のセグメントリストエントリ（インデックス0）が複数のセグメントを表す次のCSIDコンテナであり、セグメントリストのこの次のCSIDコンテナの最初のセグメントの前にあるセグメントSがPSPフレーバーを持っている場合、PSP操作はSのSRセグメントエンドポイントノードで実行されます。SIDリストの次のCSIDコンテナへ。"
    },
    {
      "indent": 8,
      "text": "3. If a Destination Options header would follow an SRH with a last Segment List entry being a NEXT-CSID container representing more than one segment, the SR source node MUST ensure that the PSP operation is not performed before the penultimate SR segment endpoint node along the path.",
      "ja": "3. 宛先オプションヘッダーがSRHに続いて、最後のセグメントリストエントリが複数のセグメントを表す次のCSIDコンテナである場合、SRソースノードは、パスに沿って最後から2番目のSRセグメントエンドポイントノードの前にPSP操作が実行されないようにする必要があります。"
    },
    {
      "indent": 8,
      "text": "4. When the Argument of a NEXT-CSID container is not used to full capacity, the remaining least significant bits of that Argument MUST be set to 0.",
      "ja": "4. 次のCSIDコンテナの引数がフル容量に使用されない場合、その引数の残りの最も重要なビットを0に設定する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.4. Rules for Segment Lists Containing REPLACE-CSID Flavor SIDs",
      "section_title": true,
      "ja": "6.4. 置換CSIDフレーバーSIDを含むセグメントリストのルール"
    },
    {
      "indent": 8,
      "text": "1. All SIDs compressed in a REPLACE-CSID sequence MUST share the same Locator-Block and the same compression scheme.",
      "ja": "1. 置換CSIDシーケンスで圧縮されたすべてのSIDは、同じロケーターブロックと同じ圧縮スキームを共有する必要があります。"
    },
    {
      "indent": 8,
      "text": "2. All SIDs except the last one in a CSID sequence for REPLACE-CSID MUST have the REPLACE-CSID flavor. If the last REPLACE-CSID container is fully filled (i.e., the last CSID is at position 0 in the REPLACE-CSID container) and the last SID in the CSID sequence is not the last segment in the segment list, the last SID in the CSID sequence MUST NOT have the REPLACE-CSID flavor.",
      "ja": "2. 置換CSIDのCSIDシーケンスの最後のSIDを除くすべてのSIDには、置換CSIDフレーバーが必要です。最後の交換CSIDコンテナが完全に満たされている場合（つまり、最後のCSIDが置換CSIDコンテナの位置0にあります）、CSIDシーケンスの最後のSIDはセグメントリストの最後のセグメントではない場合、CSIDシーケンスの最後のSIDには置換CSIDフレーバーが必要です。"
    },
    {
      "indent": 8,
      "text": "3. When a REPLACE-CSID flavor CSID is present as the last SID in a container that is not the last Segment List entry (index 0) in the SRH, the next element in the SID list MUST be a REPLACE-CSID container in packed format carrying at least one CSID.",
      "ja": "3. srhの最後のセグメントリストエントリ（インデックス0）ではないコンテナ内の最後のSIDとして置き換えられた味のフレーバーCSIDが存在する場合、SIDリストの次の要素は、少なくとも1つのCSIDを搭載したパック形式の置換CSIDコンテナでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The SR source node determines the compression scheme of REPLACE-CSID flavor SIDs as follows.",
      "ja": "SRソースノードは、次のように交換CSIDフレーバーSIDの圧縮スキームを決定します。"
    },
    {
      "indent": 3,
      "text": "When receiving a SID advertisement for a REPLACE-CSID flavor SID with LNL = 16, FL = 0, AL = 128-LBL-LNFL, and all zeros as the value of the Argument, the SR source node marks both the SID and its locator as using 16-bit compression. All other SIDs allocated from this locator with LNL = 16, FL = 16, AL = 128-LBL-LNFL, and all zeros as the value of the Argument are also marked as using 16-bit compression. When receiving a SID advertisement for a REPLACE-CSID flavor SID with LNFL = 32, AL = 128-LBL-LNFL, and all zeros as the value of the Argument, the SR source node marks both the SID and its locator as using 32-bit compression.",
      "ja": "LNL = 16、FL = 0、AL = 128-LNFL、およびすべてのゼロで置換CSIDフレーバーSIDのSID広告を受け取ると、SRソースノードはSIDとそのロケーターの両方を16ビット圧縮を使用しているとマークします。このロケーターからLNL = 16、FL = 16、AL = 128-LBL-LNFLで割り当てられた他のすべてのSIDは、引数の値としてのすべてのゼロも16ビット圧縮を使用してマークされています。LNFL = 32、AL = 128-LNFL、およびすべてのゼロを備えた交換CSIDフレーバーSIDのSID広告を受け取ると、引数の値としてすべてのゼロを受信すると、SRソースノードはSIDとそのロケーターの両方を32ビット圧縮を使用してマークします。"
    },
    {
      "indent": 0,
      "text": "6.5. Upper-Layer Checksums",
      "section_title": true,
      "ja": "6.5. 上層層チェックサム"
    },
    {
      "indent": 3,
      "text": "The Destination Address used in the IPv6 pseudo-header (Section 8.1 of [RFC8200]) is that of the ultimate destination.",
      "ja": "IPv6 pseudo-header（[RFC8200]のセクション8.1）で使用される宛先アドレスは、究極の目的地のアドレスです。"
    },
    {
      "indent": 3,
      "text": "At the SR source node, that address will be the Destination Address as it is expected to be received by the ultimate destination. When the last element in the compressed SID list is a CSID container, this address can be obtained from the last element in the uncompressed SID list or by repeatedly applying the segment behavior as described in Section 9.4. This applies regardless of whether an SRH is present in the IPv6 packet or is omitted.",
      "ja": "SRソースノードでは、そのアドレスは最終目的地が受信すると予想されるため、宛先アドレスになります。圧縮されたSIDリストの最後の要素がCSIDコンテナである場合、このアドレスは、非圧縮SIDリストの最後の要素から、またはセクション9.4で説明されているようにセグメントの動作を繰り返し適用することにより取得できます。これは、SRHがIPv6パケットに存在するか省略されているかに関係なく適用されます。"
    },
    {
      "indent": 3,
      "text": "At the ultimate destination(s), that address will be in the Destination Address field of the IPv6 header.",
      "ja": "究極の目的地では、そのアドレスはIPv6ヘッダーの宛先アドレスフィールドにあります。"
    },
    {
      "indent": 0,
      "text": "7. Inter-Domain Compression",
      "section_title": true,
      "ja": "7. ドメイン間圧縮"
    },
    {
      "indent": 3,
      "text": "Some SRv6 traffic may need to cross multiple routing domains, such as different Autonomous Systems (ASes) or different routing areas within an SR domain. Different routing domains may use different addressing schema and Locator-Blocks.",
      "ja": "一部のSRV6トラフィックは、異なる自律システム（ASE）やSRドメイン内の異なるルーティング領域など、複数のルーティングドメインを横断する必要がある場合があります。異なるルーティングドメインは、異なるアドレス指定スキーマとロケーターブロックを使用する場合があります。"
    },
    {
      "indent": 3,
      "text": "A property of a CSID sequence is that all CSIDs in the sequence share the same Locator-Block. Therefore, a segment list that spans multiple routing domains using different Locator-Blocks may need a separate CSID sequence for each domain.",
      "ja": "CSIDシーケンスの特性は、シーケンス内のすべてのCSIDが同じロケーターブロックを共有することです。したがって、異なるロケーターブロックを使用して複数のルーティングドメインにまたがるセグメントリストには、各ドメインに個別のCSIDシーケンスが必要になる場合があります。"
    },
    {
      "indent": 3,
      "text": "This section defines a solution to improve the efficiency of CSID compression in multi-domain environments by enabling a CSID sequence to combine CSIDs having different Locator-Blocks.",
      "ja": "このセクションでは、CSIDシーケンスが異なるロケーターブロックを持つCSIDを組み合わせることにより、マルチドメイン環境でのCSID圧縮の効率を改善するソリューションを定義します。"
    },
    {
      "indent": 3,
      "text": "The solution leverages two new SRv6 endpoint behaviors, \"Endpoint with SRv6 Locator-Block Swap\" (\"End.LBS\" for short) and \"Endpoint with L3 cross-connect and SRv6 Locator-Block Swap\" (\"End.XLBS\" for short), that enable modifying the Locator-Block for the next CSID in the CSID sequence at the routing domain boundary.",
      "ja": "ソリューションは、2つの新しいSRV6エンドポイント動作、「srv6ロケーターブロックスワップを備えたエンドポイント」（略して「end.lbs」）、および「l3クロスコネクトとsrv6ロケーターブロックスワップを備えたエンドポイント」（略して \"end.xlbs\"）を活用します。"
    },
    {
      "indent": 0,
      "text": "7.1. End.LBS: Locator-Block Swap",
      "section_title": true,
      "ja": "7.1. end.lbs：ロケーターブロックスワップ"
    },
    {
      "indent": 3,
      "text": "The End.LBS behavior is a variant of the End behavior that modifies the Locator-Block of the active CSID sequence. This document defines the End.LBS behavior with the NEXT-CSID flavor and the End.LBS behavior with the REPLACE-CSID flavor.",
      "ja": "End.LBSの動作は、アクティブなCSIDシーケンスのロケーターブロックを変更する最終動作のバリアントです。このドキュメントでは、次のcsidフレーバーとend.lbsの動作を伴うend.lbsの動作を、置換型フレーバーで定義します。"
    },
    {
      "indent": 3,
      "text": "An End.LBS SID is used to transition to a new Locator-Block when the routing domain boundary is on the SR segment endpoint node.",
      "ja": "end.LBS SIDは、ルーティングドメインの境界がSRセグメントエンドポイントノードにある場合、新しいロケーターブロックに移行するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Each instance of an End.LBS SID is associated with a target Locator-Block B2/m, where B2 is an IPv6 address prefix and m is the associated prefix length. The original and target Locator-Blocks can have different prefix lengths as long as the new Destination Address formed by combining the target Locator-Block with the Locator-Node, Function, and Argument as described in the pseudocode of Sections 7.1.1 and 7.1.2 is a valid IPv6 address. The target Locator-Block is a local property of the End.LBS SID on the SR segment endpoint node.",
      "ja": "end.LBS SIDの各インスタンスは、ターゲットロケーターブロックB2/mに関連付けられています。ここで、B2はIPv6アドレスプレフィックスであり、Mは関連プレフィックスの長さです。元のロケーターブロックとターゲットのロケーターブロックは、セクション7.1.1および7.1.2の擬似コードで説明されているように、ターゲットロケーターブロックとロケーターノード、関数、および引数を組み合わせて形成される新しい宛先アドレスが、有効なIPv6アドレスである限り、異なるプレフィックスの長さを持つことができます。ターゲットロケーターブロックは、SRセグメントエンドポイントノードのEnd.LBS SIDのローカルプロパティです。"
    },
    {
      "indent": 12,
      "text": "Note: a local SID property is an attribute associated with the SID when it is instantiated on the SR segment endpoint node. When the SR segment endpoint node identifies the Destination Address of a received packet as a locally instantiated SID, it also retrieves any local property associated with this SID. Other examples of local SID properties include the set of L3 adjacencies of an End.X SID (Section 4.2 of [RFC8986]) and the lookup table of an End.DT6 SID (Section 4.6 of [RFC8986]).",
      "ja": "注：ローカルSIDプロパティは、SRセグメントエンドポイントノードにインスタンス化された場合、SIDに関連付けられた属性です。SRセグメントのエンドポイントノードが、受信したパケットの宛先アドレスをローカルにインスタンス化されたSIDとして識別すると、このSIDに関連するローカルプロパティも取得します。ローカルSIDプロパティの他の例には、end.x SID（[RFC8986]のセクション4.2）のL3隣接のセットと、end.dt6 SIDのルックアップテーブル（[RFC8986]のセクション4.6）が含まれます。"
    },
    {
      "indent": 3,
      "text": "The means by which an SR source node learns the target Locator-Block associated with an End.LBS SID are outside the scope of this document. As examples, it could be learned via configuration or signaled by a controller.",
      "ja": "SRソースノードがEND.LBS SIDに関連付けられたターゲットロケーターブロックを学習する手段は、このドキュメントの範囲外です。たとえば、構成を介して学習したり、コントローラーで信号を送信したりすることができます。"
    },
    {
      "indent": 0,
      "text": "7.1.1. End.LBS with NEXT-CSID",
      "section_title": true,
      "ja": "7.1.1. next-csidのend.lbs"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.LBS SID with the NEXT-CSID flavor and associated with the target Locator-Block B2/m, the SR segment endpoint node applies the procedure specified in Section 4.1.1 with the lines N05 to N06 replaced as follows.",
      "ja": "次のCSIDフレーバーを備え、ターゲットロケーターブロックB2/Mに関連付けられているLBS SIDとして局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、SRセグメントエンドポイントノードは、セクション4.1.1で指定された手順を、次のようにN05からN06に置き換えます。"
    },
    {
      "indent": 3,
      "text": "N05.1. Initialize an IPv6 address A equal to B2.\nN05.2. Copy DA.Argument into the bits [m..(m+AL-1)] of A.\nN06.   Copy A to the Destination Address of the IPv6 header.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.1.2. End.LBS with REPLACE-CSID",
      "section_title": true,
      "ja": "7.1.2. end.lbsを置き換えます"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.LBS SID with the REPLACE-CSID flavor and associated with the target Locator-Block B2/m, the SR segment endpoint node applies the procedure specified in Section 4.2.1 with the line R20 replaced as follows.",
      "ja": "end.LBS SIDを置き換え、ターゲットロケーターブロックB2/mに関連付けたLBS SIDとしてローカルにインスタンス化されたFIBエントリに一致するIPv6パケットを処理する場合、SRセグメントエンドポイントノードは、セクション4.2.1で指定されたラインR20で指定された手順を、次のように置き換えます。"
    },
    {
      "indent": 3,
      "text": "R20.1. Initialize an IPv6 address A equal to B2.\nR20.2. Write Segment List[Segments Left][DA.Arg.Index] into the bits\n         [m..m+LNFL-1] of A.\nR20.3. Write DA.Arg.Index into the bits\n         [(128-ceiling(log_2(128/LNFL)))..127] of A.\nR20.4. Copy A to the Destination Address of the IPv6 header.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.2. End.XLBS: L3 Cross-Connect and Locator-Block Swap",
      "section_title": true,
      "ja": "7.2. end.xlbs：L3クロスコネクトとロケーターブロックスワップ"
    },
    {
      "indent": 3,
      "text": "The End.XLBS behavior is a variant of the End.X behavior that modifies the Locator-Block of the active CSID sequence. This document defines the End.XLBS behavior with the NEXT-CSID flavor and the End.XLBS behavior with the REPLACE-CSID flavor.",
      "ja": "end.xlbsの動作は、アクティブなCSIDシーケンスのロケーターブロックを変更するEnd.x動作のバリアントです。このドキュメントでは、次のCSIDフレーバーでend.xlbsの動作を定義し、end.xlbsの動作を置き換えます。"
    },
    {
      "indent": 3,
      "text": "An End.XLBS SID is used to transition to a new Locator-Block when the routing domain boundary is on a link adjacent to the SR segment endpoint node.",
      "ja": "end.xlbs SIDは、ルーティングドメインの境界がSRセグメントエンドポイントノードに隣接するリンク上にある場合、新しいロケーターブロックに移行するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Each instance of an End.XLBS SID is associated with a target Locator-Block B2/m and a set, J, of one or more L3 adjacencies. The original and target Locator-Blocks can have different prefix lengths as long as the new Destination Address formed by combining the target Locator-Block with the Locator-Node, Function, and Argument as described in the pseudocode of Sections 7.2.1 and 7.2.2 is a valid IPv6 address. The target Locator-Block and set of adjacencies are local properties of the End.XLBS SID on the SR segment endpoint node.",
      "ja": "end.xlbs sidの各インスタンスは、ターゲットロケーターブロックB2/mおよび1つ以上のL3隣接のセットjに関連付けられています。元のロケーターブロックとターゲットのロケーターブロックは、セクション7.2.1および7.2.2の擬似コードで説明されているように、ターゲットロケーターブロックとロケーターノード、関数、および引数を組み合わせて形成される新しい宛先アドレスが、有効なIPv6アドレスである限り、異なるプレフィックスの長さを持つことができます。ターゲットロケーターブロックと隣接セットは、SRセグメントエンドポイントノードのEnd.xlbs SIDのローカルプロパティです。"
    },
    {
      "indent": 3,
      "text": "The means by which an SR source node learns the target Locator-Block associated with an End.XLBS SID are outside the scope of this document. As examples, it could be learned via configuration or signaled by a controller.",
      "ja": "SRソースノードがend.xlbs SIDに関連付けられたターゲットロケーターブロックを学習する手段は、このドキュメントの範囲外です。たとえば、構成を介して学習したり、コントローラーで信号を送信したりすることができます。"
    },
    {
      "indent": 0,
      "text": "7.2.1. End.XLBS with NEXT-CSID",
      "section_title": true,
      "ja": "7.2.1. next-csidのend.xlbs"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.XLBS SID with the NEXT-CSID flavor and associated with the target Locator-Block B2/m, the SR segment endpoint node applies the procedure specified in Section 4.1.2 with the lines N05 to N06 (of the pseudocode in Section 4.1.1) replaced as follows.",
      "ja": "end.xlbs SIDとしてローカルにインスタンス化されたFIBエントリに一致するIPv6パケットを次のCSIDフレーバーとターゲットロケーターブロックB2/mに関連付けた場合、SRセグメントエンドポイントノードは、セクション4.1.2で指定された手順をN05からN06に適用します（次のセクション4.1.1のセクション4.1.1）。"
    },
    {
      "indent": 3,
      "text": "N05.1. Initialize an IPv6 address A equal to B2.\nN05.2. Copy DA.Argument into the bits [m..(m+AL-1)] of A.\nN06.   Copy A to the Destination Address of the IPv6 header.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.2.2. End.XLBS with REPLACE-CSID",
      "section_title": true,
      "ja": "7.2.2. end.xlbsを置き換えます"
    },
    {
      "indent": 3,
      "text": "When processing an IPv6 packet that matches a FIB entry locally instantiated as an End.XLBS SID with the REPLACE-CSID flavor and associated with the target Locator-Block B2/m, the SR segment endpoint node applies the procedure specified in Section 4.2.2 with the line R20 (of the pseudocode in Section 4.2.1) replaced as follows.",
      "ja": "end.xlbs SIDとして局所的にインスタンス化されたFIBエントリに一致するIPv6パケットを置き換え、ターゲットロケーターブロックB2/mに関連付けたIPv6パケットを処理する場合、SRセグメントエンドポイントノードは、セクション4.2.2で指定された手順をラインR20に適用します（セクション4.2.1の麻痺者）。"
    },
    {
      "indent": 3,
      "text": "R20.1. Initialize an IPv6 address A equal to B2.\nR20.2. Write Segment List[Segments Left][DA.Arg.Index] into the bits\n         [m..m+LNFL-1] of A.\nR20.3. Write DA.Arg.Index into the bits\n         [(128-ceiling(log_2(128/LNFL)))..127] of A.\nR20.4. Copy A to the Destination Address of the IPv6 header.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "8. Control Plane",
      "section_title": true,
      "ja": "8. コントロールプレーン"
    },
    {
      "indent": 3,
      "text": "Section 8 of [RFC8986] provides an overview of the control plane protocols used for signaling of the SRv6 endpoint behaviors introduced by that document, including the base SRv6 endpoint behaviors that are extended in the present document.",
      "ja": "[RFC8986]のセクション8では、本文書に拡張されたベースSRV6エンドポイント動作を含む、そのドキュメントによって導入されたSRV6エンドポイント動作のシグナル伝達に使用される制御プレーンプロトコルの概要を説明します。"
    },
    {
      "indent": 3,
      "text": "The CSID-flavored behaviors introduced by this document are advertised in the same manner as their base SRv6 endpoint behaviors using the SRv6 extensions for various routing protocols, such as:",
      "ja": "このドキュメントによって導入されたCSID風味の動作は、次のようなさまざまなルーティングプロトコルのSRV6拡張機能を使用して、ベースSRV6エンドポイント動作と同じ方法で宣伝されています。"
    },
    {
      "indent": 6,
      "text": "* IS-IS [RFC9352]",
      "ja": "* is-is [rfc9352]"
    },
    {
      "indent": 6,
      "text": "* OSPFv3 [RFC9513]",
      "ja": "* OSPFV3 [RFC9513]"
    },
    {
      "indent": 6,
      "text": "* BGP [RFC9252], [RFC9514], [BGP-SR-Policy]",
      "ja": "* BGP [RFC9252]、[RFC9514]、[BGP-SR-Policy]"
    },
    {
      "indent": 6,
      "text": "* BGP-LS [BGP-LS-SR-Policy]",
      "ja": "* bgp-ls [bgp-ls-sr-policy]"
    },
    {
      "indent": 6,
      "text": "* PCEP [RFC9603]",
      "ja": "* PCEP [RFC9603]"
    },
    {
      "indent": 3,
      "text": "The SR segment endpoint node MUST set the SID Argument bits to 0 when advertising a locally instantiated SID of this document in the routing protocol (e.g., IS-IS [RFC9352], OSPF [RFC9513], or BGP-LS [RFC9514]).",
      "ja": "SRセグメントエンドポイントノードは、ルーティングプロトコル（例：IS [RFC9352]、OSPF [RFC9513]、またはBGP-LS [RFC9514]）でこのドキュメントの局所的にインスタンス化されたSIDを宣伝するときに、SID引数ビットを0に設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Signaling the SRv6 SID Structure is REQUIRED for all the SIDs introduced in this document. It is used by an SR source node to compress a SID list as described in Section 6. The node initiating the SID advertisement MUST set the length values in the SRv6 SID Structure to match the format of the SID on the SR segment endpoint node. For example, for a SID of this document instantiated from a /48 SRv6 SID block and a /64 Locator, and having a 16-bit Function, the SRv6 SID Structure advertisement carries the following values.",
      "ja": "このドキュメントで導入されたすべてのSIDには、SRV6 SID構造のシグナリングが必要です。SRソースノードによって使用されてセクション6で説明されているようにSIDリストを圧縮します。SID広告を開始するノードは、SRセグメントエンドポイントノードのSIDの形式と一致するようにSRV6 SID構造の長さ値を設定する必要があります。たとえば、A /48 SRV6 SIDブロックとA /64ロケーターからインスタンス化されたこのドキュメントのSIDの場合、16ビット機能を備えているため、SRV6 SID構造広告には次の値があります。"
    },
    {
      "indent": 6,
      "text": "* LBL: 48",
      "ja": "* LBL：48"
    },
    {
      "indent": 6,
      "text": "* LNL: 16",
      "ja": "* LNL：16"
    },
    {
      "indent": 6,
      "text": "* FL: 16",
      "ja": "* FL：16"
    },
    {
      "indent": 6,
      "text": "* AL: 48 (= 128-48-16-16)",
      "ja": "* AL：48（= 128-48-16-16）"
    },
    {
      "indent": 3,
      "text": "A local CSID may be advertised in the control plane individually and/ or in combination with a global CSID instantiated on the same SR segment endpoint node, with the End behavior, and the same Locator-Block and flavor as the local CSID. A combined global and local CSID is advertised as follows:",
      "ja": "ローカルCSIDは、コントロールプレーンで個別に、および/または同じSRセグメントエンドポイントノードにインスタンス化されたグローバルなCSIDと組み合わせて宣伝され、最終挙動、およびローカルCSIDと同じロケーターブロックとフレーバーがあります。グローバルCSIDとローカルCSIDを組み合わせたものは、次のように宣伝されています。"
    },
    {
      "indent": 6,
      "text": "* The SID Locator-Block is that shared by the global and local CSIDs",
      "ja": "* SIDロケーターブロックは、グローバルおよびローカルのCSIDが共有するものです"
    },
    {
      "indent": 6,
      "text": "* The SID Locator-Node is that of the global CSID",
      "ja": "* SIDロケーターノードはグローバルCSIDのものです"
    },
    {
      "indent": 6,
      "text": "* The SID Function is that of the local CSID",
      "ja": "* SID関数はローカルCSIDの関数です"
    },
    {
      "indent": 6,
      "text": "* The SID AL is equal to 128-LBL-LNL-FL and the SID Argument value is 0",
      "ja": "* SID ALは128-LBL-LNL-FLに等しく、SID引数値は0です"
    },
    {
      "indent": 6,
      "text": "* All other attributes of the SID (e.g., SRv6 endpoint behavior or algorithm) are those of the local CSID",
      "ja": "* SIDの他のすべての属性（例：SRV6エンドポイントの動作またはアルゴリズム）は、ローカルCSIDの属性です。"
    },
    {
      "indent": 3,
      "text": "The combined advertisement of local CSIDs with a global CSID is needed in particular for control plane protocols mandating that the SID is a subnet of a locator advertised in the same protocol (e.g., Section 8 of [RFC9352] and Section 9 of [RFC9513] for advertising Adjacency SIDs in IS-IS and OSPFv3, respectively).",
      "ja": "グローバルCSIDを使用したローカルCSIDの組み合わせた広告は、特にSIDが同じプロトコルで宣伝されているロケーターのサブネットであることを義務付けているコントロールプレーンプロトコルに必要です（例：[RFC9352]のセクション8および[RFC9513]のセクション9は、IS-ISおよびIS-ISおよびISOSPFV3の広告を広告します。"
    },
    {
      "indent": 3,
      "text": "For a segment list computed by a controller and signaled to an SR source node (e.g., via BGP [BGP-SR-Policy] or PCEP [RFC9603]), the controller provides the ordered segment list comprising the uncompressed SIDs, with their respective behavior and structure, to the SR source node. The SR source node may then compress the SID list as described in Section 6.",
      "ja": "コントローラーによって計算され、SRソースノード（例：BGP [BGP-SR-Policy]またはPCEP [RFC9603]を介して）に信号を送られたセグメントリストの場合、コントローラーは、SRソースノードにそれぞれの動作と構造を持つ非圧縮SIDSを含む順序付けられたセグメントリストを提供します。SRソースノードは、セクション6で説明されているように、SIDリストを圧縮できます。"
    },
    {
      "indent": 3,
      "text": "When a node receives an advertisement of a SID of this document that it does not support, it handles the advertisement as described in the corresponding control plane specification (e.g., Sections 7.2, 8.1, and 8.2 of [RFC9352], Sections 8, 9.1, and 9.2 of [RFC9513], and Section 3.1 of [RFC9252]).",
      "ja": "ノードがサポートしていないこのドキュメントのSIDの広告を受け取ると、対応するコントロールプレーンの仕様で説明されているように広告を処理します（例：[RFC9352]のセクション7.2、8.1、および8.2、[RFC9513]のセクション8、9.1、および9.2の[RFC9252]のセクション3.1）。"
    },
    {
      "indent": 0,
      "text": "9. Operational Considerations",
      "section_title": true,
      "ja": "9. 運用上の考慮事項"
    },
    {
      "indent": 0,
      "text": "9.1. Flavor, Block, and CSID Length",
      "section_title": true,
      "ja": "9.1. 風味、ブロック、およびCSIDの長さ"
    },
    {
      "indent": 3,
      "text": "SRv6 is intended for use in a variety of networks that require different prefix lengths and SID numbering spaces. Each of the two flavors introduced in this document comes with its own recommendations for Locator-Block and CSID length, as specified in Sections 4.1 and 4.2. These flavors are best suited for different environments, depending on the requirements of the network. For instance, larger CSID lengths may be more suitable for networks requiring ample SID numbering space, while smaller CSID lengths are better for compression efficiency. The two compression flavors allow the compressed segment list encoding to adapt to a range of requirements, with support for multiple compression levels. Network operators can choose the flavor that best suits their use case, deployment design, and network scale.",
      "ja": "SRV6は、異なるプレフィックスの長さとSID番号のスペースを必要とするさまざまなネットワークで使用することを目的としています。このドキュメントで導入された2つのフレーバーのそれぞれには、セクション4.1および4.2で指定されているように、ロケーターブロックとCSIDの長さに関する独自の推奨事項があります。これらのフレーバーは、ネットワークの要件に応じて、さまざまな環境に最適です。たとえば、CSIDの長さが大きいほど、十分なSID番号のスペースを必要とするネットワークにより適している可能性がありますが、CSIDの長さは圧縮効率に適しています。2つの圧縮フレーバーを使用すると、圧縮レベルをサポートして、さまざまな要件に適応するようにエンコードする圧縮セグメントリストをエンコードすることができます。ネットワークオペレーターは、ユースケース、展開設計、ネットワークスケールに最適なフレーバーを選択できます。"
    },
    {
      "indent": 3,
      "text": "Both CSID flavors can coexist in the same SR domain, on the same SR segment endpoint node, and even in the same segment list. However, operators should generally avoid instantiating SIDs of different CSID flavors within the same routing domain or Locator-Block since these SIDs have different length and allocation recommendations (see Sections 4.1, 4.2, and 9.2). In a multi-domain deployment, different flavors may be used in different routing domains of the SR domain.",
      "ja": "両方のCSIDフレーバーは、同じSRドメイン、同じSRセグメントエンドポイントノード、および同じセグメントリストでさえ共存できます。ただし、オペレーターは一般に、同じルーティングドメインまたはロケーターブロック内の異なるCSIDフレーバーのSIDをインスタンス化することを避ける必要があります。これらのSIDには異なる長さと割り当ての推奨があるためです（セクション4.1、4.2、および9.2を参照）。マルチドメインの展開では、SRドメインの異なるルーティングドメインで異なるフレーバーを使用できます。"
    },
    {
      "indent": 3,
      "text": "A deployment should use consistent LBLs and CSID lengths for all SIDs within a routing domain. Heterogeneous lengths, while possible, may impact the compression efficiency.",
      "ja": "展開は、ルーティングドメイン内のすべてのSIDに一貫したLBLとCSID長さを使用する必要があります。不均一な長さは、可能ですが、圧縮効率に影響を与える可能性があります。"
    },
    {
      "indent": 3,
      "text": "The compressed segment list encoding works with various Locator-Block allocations. For example, each routing domain within the SR domain can be allocated a /48 Locator-Block from a global IPv6 block available to the operator or from a prefix allocated to SRv6 SIDs as discussed in Section 5 of [RFC9602].",
      "ja": "圧縮セグメントリストエンコーディングは、さまざまなロケーターブロック割り当てで機能します。たとえば、SRドメイン内の各ルーティングドメインは、オペレーターが利用できるグローバルIPv6ブロックまたは[RFC9602]セクション5で説明したようにSRV6 SIDに割り当てられたプレフィックスからA /48ロケーターブロックを割り当てることができます。"
    },
    {
      "indent": 0,
      "text": "9.2. GIB/LIB Usage",
      "section_title": true,
      "ja": "9.2. GIB/LIBの使用"
    },
    {
      "indent": 3,
      "text": "GIB and LIB usage is a local implementation and/or configuration decision; however, some guidelines for determining usage for specific SRv6 endpoint behaviors and recommendations are provided.",
      "ja": "GIBおよびLIBの使用は、ローカルの実装および/または構成決定です。ただし、特定のSRV6エンドポイントの動作と推奨事項の使用法を決定するためのいくつかのガイドラインが提供されます。"
    },
    {
      "indent": 3,
      "text": "The GIB number space is shared among all SR segment endpoint nodes using SRv6 locators under a Locator-Block space. The more SIDs assigned from this space, per node, the faster it is exhausted. Therefore, its use is prioritized for global segments, such as SIDs that identify a node.",
      "ja": "GIB番号スペースは、ロケーターブロックスペースの下のSRV6ロケーターを使用して、すべてのSRセグメントエンドポイントノード間で共有されます。ノードごとにこのスペースから割り当てられたSIDが多いほど、使い果たされます。したがって、その使用は、ノードを識別するSIDなどのグローバルセグメントに対して優先順位を付けられています。"
    },
    {
      "indent": 3,
      "text": "The LIB number space is unique per node. Each node can fully utilize the entire LIB number space without consideration for assignments at other nodes. Therefore, its use is prioritized for local segments, such as SIDs that identify services (of which there may be many) at nodes, cross-connects, or adjacencies.",
      "ja": "LIB番号スペースは、ノードごとに一意です。各ノードは、他のノードでの割り当てを考慮せずに、LIB番号スペース全体を完全に利用できます。したがって、その使用は、ノード、クロス接続、または隣接でサービス（その多くがあるかもしれない）を特定するSIDなどのローカルセグメントに対して優先順位を付けられています。"
    },
    {
      "indent": 3,
      "text": "While a longer CSID length permits more flexibility in which SRv6 endpoint behaviors may be assigned from the GIB, it also reduces the compression efficiency.",
      "ja": "CSIDの長さが長くなると、SRV6エンドポイントの動作がGIBから割り当てられる柔軟性が高くなりますが、圧縮効率も低下します。"
    },
    {
      "indent": 3,
      "text": "Given the previous Locator-Block and CSID length recommendations, the following GIB/LIB usage is recommended:",
      "ja": "以前のロケーターブロックとCSIDの長さの推奨事項を考えると、次のGIB/LIBの使用が推奨されます。"
    },
    {
      "indent": 6,
      "text": "* NEXT-CSID:",
      "ja": "* Next-CSID："
    },
    {
      "indent": 12,
      "text": "- GIB: End",
      "ja": "- ギブ：終わり"
    },
    {
      "indent": 12,
      "text": "- LIB: End.X, End.T, End.DT4/6/46/2U/2M, End.DX4/6/2/2V (including large-scale pseudowire), End.B6.Encaps, End.B6.Encaps.Red, End.BM, End.LBS, and End.XLBS",
      "ja": "- lib：end.x、end.t、end.dt4/6/46/2u/2m、end.dx4/6/2/2v（大規模な擬似術を含む）、end.b6.encaps、end.b6.encaps.red、end.bm、end.lbs、end.xlbs"
    },
    {
      "indent": 6,
      "text": "* REPLACE-CSID:",
      "ja": "* 交換csid："
    },
    {
      "indent": 12,
      "text": "- GIB: End, End.X, End.T, End.DT4/6/46/2U/2M, End.DX4/6/2/2V, End.B6.Encaps, End.B6.Encaps.Red, End.BM, End.LBS, and End.XLBS",
      "ja": "- gib：end、end.x、end.t、end.dt4/6/46/2u/2m、end.dx4/6/2/2v、end.b6.encaps、end.b6.encaps.red、end.bm、end.lbs、and.xlbs"
    },
    {
      "indent": 12,
      "text": "- LIB: End.DX2/2V for large-scale pseudowire",
      "ja": "- lib：大規模な擬似ワイヤー用のend.dx2/2v"
    },
    {
      "indent": 3,
      "text": "Any other allocation is possible but may lead to a suboptimal use of the CSID numbering space.",
      "ja": "他の割り当ては可能ですが、CSID番号のスペースが最適ではない使用につながる可能性があります。"
    },
    {
      "indent": 0,
      "text": "9.3. Pinging a SID",
      "section_title": true,
      "ja": "9.3. sidの声"
    },
    {
      "indent": 3,
      "text": "An SR source node may ping an SRv6 SID by sending an ICMPv6 echo request packet destined to the SRv6 SID. The SR source node may ping the target SID with a SID list comprising only that target SID or with a longer one that comprises two or more SIDs. In that case, the target SID is the last element in the SID list. This operation is illustrated in Appendix A.1.2 of [RFC9259].",
      "ja": "SRソースノードは、SRV6 SIDに運命づけられたICMPV6エコー要求パケットを送信することにより、SRV6 SIDをpingする場合があります。SRソースノードは、そのターゲットSIDのみを含むSIDリスト、または2つ以上のSIDを含むより長いSIDでターゲットSIDをpingする場合があります。その場合、ターゲットSIDはSIDリストの最後の要素です。この操作は、[RFC9259]の付録A.1.2に示されています。"
    },
    {
      "indent": 3,
      "text": "When pinging a SID of this document, the SR source node MUST construct the IPv6 packet as described in Section 6, including computing the ICMPv6 checksum as described in Section 6.5.",
      "ja": "このドキュメントのSIDをpingする場合、SRソースノードは、セクション6で説明されているようにIPv6パケットを構築する必要があります。"
    },
    {
      "indent": 3,
      "text": "In particular, when pinging a SID of this document with a SID list comprising only the target SID, the SR source node places the SID with Argument value 0 in the Destination Address of the ICMPv6 echo request and computes the ICMPv6 checksum using this SID as the Destination Address in the IPv6 pseudo-header. The Argument value 0 allows the SID SR segment endpoint node (Section 4) to identify itself as the ultimate destination of the packet and process the ICMPv6 payload. Therefore, any existing IPv6 ping implementation can originate ICMP echo requests to a NEXT-CSID or REPLACE-CSID flavor SID with a SID list comprising only the target SID, provided that the user ensures that the SID Argument is 0.",
      "ja": "特に、ターゲットSIDのみを含むSIDリストでこのドキュメントのSIDをpingする場合、SRソースノードは、ICMPV6エコー要求の宛先アドレスにSIDを引数値0で配置し、ICMPV6チェックサムをICMPV6チェックサムを計算します。引数値0を使用すると、SID SRセグメントエンドポイントノード（セクション4）がパケットの究極の宛先であると識別し、ICMPv6ペイロードを処理できます。したがって、既存のIPv6 Ping実装は、ユーザーがSID引数が0であることを保証する場合、ターゲットSIDのみを含むSIDリストを持つ次のCSIDまたは交換CSIDフレーバーSIDへのICMPエコー要求を発信する可能性があります。"
    },
    {
      "indent": 0,
      "text": "9.4. ICMP Error Processing",
      "section_title": true,
      "ja": "9.4. ICMPエラー処理"
    },
    {
      "indent": 3,
      "text": "When an IPv6 node encounters an error while processing a packet, it may report that error by sending an IPv6 error message to the packet source with an enclosed copy of the invoking packet. For the source of an invoking packet to process the ICMP error message, the ultimate Destination Address of the IPv6 header may be required.",
      "ja": "IPv6ノードがパケットの処理中にエラーを遭遇すると、呼び出しパケットの囲まれたコピーを使用してIPv6エラーメッセージをパケットソースに送信することにより、そのエラーを報告する場合があります。ICMPエラーメッセージを処理するための呼び出しパケットのソースの場合、IPv6ヘッダーの最終的な宛先アドレスが必要になる場合があります。"
    },
    {
      "indent": 3,
      "text": "Section 5.4 of [RFC8754] defines the logic that an SR source node follows to determine the ultimate destination of an invoking packet containing an SRH.",
      "ja": "[RFC8754]のセクション5.4は、SRソースノードが続くというロジックを定義して、SRHを含むパケットを呼び出す最終目的地を決定します。"
    },
    {
      "indent": 3,
      "text": "For an SR source node that supports the compressed segment list encoding defined in this document, the logic to determine the ultimate destination is generalized as follows.",
      "ja": "このドキュメントで定義されているエンコードをエンコードする圧縮セグメントリストをサポートするSRソースノードの場合、最終的な目的地を決定するロジックは次のように一般化されています。"
    },
    {
      "indent": 6,
      "text": "* If the Destination Address of the invoking IPv6 packet matches a known SRv6 SID, modify the invoking IPv6 packet by applying the SRv6 endpoint behavior associated with the matched SRv6 SID;",
      "ja": "* IPv6パケットの呼び出しの宛先アドレスが既知のSRV6 SIDと一致する場合、一致したSRV6 SIDに関連付けられたSRV6エンドポイントの動作を適用して、IPv6パケットを呼び出すことを変更します。"
    },
    {
      "indent": 6,
      "text": "* Repeat until the application of the SRv6 endpoint behavior would result in the processing of the upper-layer header.",
      "ja": "* SRV6エンドポイントの動作を適用すると、上層ヘッダーが処理されるまで繰り返します。"
    },
    {
      "indent": 3,
      "text": "The Destination Address of the resulting IPv6 packet may be used as the ultimate destination of the invoking IPv6 packet.",
      "ja": "結果のIPv6パケットの宛先アドレスは、IPv6パケットを呼び出す最終的な目的地として使用できます。"
    },
    {
      "indent": 3,
      "text": "Since the SR source node that needs to determine the ultimate destination is the same node that originally built the SID list in the invoking packet, it can perform this operation for all the SIDs in the packet.",
      "ja": "究極の宛先を決定する必要があるSRソースノードは、呼び出しパケットにSIDリストを元々構築したのと同じノードであるため、パケット内のすべてのSIDに対してこの操作を実行できます。"
    },
    {
      "indent": 0,
      "text": "10. Applicability to Other SRv6 Endpoint Behaviors",
      "section_title": true,
      "ja": "10. 他のSRV6エンドポイント動作への適用性"
    },
    {
      "indent": 3,
      "text": "Future documents may extend the applicability of the NEXT-CSID and REPLACE-CSID flavors to other SRv6 endpoint behaviors.",
      "ja": "将来のドキュメントは、次のCSIDおよび置換CSIDフレーバーの適用性を他のSRV6エンドポイントの動作に拡張する場合があります。"
    },
    {
      "indent": 3,
      "text": "For an SRv6 endpoint behavior that can be used before the last position of a segment list, a CSID flavor is defined by reproducing the same logic as described in Sections 4.1 and 4.2 to determine the next SID in the SID list.",
      "ja": "セグメントリストの最後の位置の前に使用できるSRV6エンドポイントの動作の場合、CSIDフレーバーは、SIDリストの次のSIDを決定するためにセクション4.1および4.2で説明されているのと同じロジックを再現することによって定義されます。"
    },
    {
      "indent": 0,
      "text": "11. Security Considerations",
      "section_title": true,
      "ja": "11. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Section 8 of [RFC8402] discusses the security considerations for Segment Routing.",
      "ja": "[RFC8402]のセクション8では、セグメントルーティングのセキュリティ上の考慮事項について説明します。"
    },
    {
      "indent": 3,
      "text": "Section 5 of [RFC8754] describes the intra-SR-domain deployment model and how to secure it. Section 7 of [RFC8754] describes the threats applicable to SRv6 and how to mitigate them.",
      "ja": "[RFC8754]のセクション5では、SR-SRドメインの展開モデルとそれを保護する方法について説明します。[RFC8754]のセクション7では、SRV6に適用可能な脅威とそれらを緩和する方法について説明します。"
    },
    {
      "indent": 3,
      "text": "Section 9 of [RFC8986] discusses the security considerations applicable to the SRv6 network programming framework, as well as the SR source node and SR segment endpoint node behaviors that it defines.",
      "ja": "[RFC8986]のセクション9では、SRV6ネットワークプログラミングフレームワークに適用されるセキュリティに関する考慮事項、および定義するSRソースノードおよびSRセグメントエンドポイントノード動作について説明します。"
    },
    {
      "indent": 3,
      "text": "This document introduces two new flavors, NEXT-CSID and REPLACE-CSID, for some of the SRv6 endpoint behaviors defined in [RFC8986] and a method by which an SR source node may leverage the SIDs of these flavors to produce a compressed segment list encoding.",
      "ja": "このドキュメントでは、[RFC8986]で定義されているSRV6エンドポイント動作のいくつかと、SRソースノードがこれらのフレーバーのSIDを活用して圧縮セグメントリストエンコーディングを生成する方法について、2つの新しいフレーバー、Next-CSIDとLepple-CSIDを紹介します。"
    },
    {
      "indent": 3,
      "text": "This document also introduces two new SRv6 endpoint behaviors, End.LBS and End.XLBS, to preserve the efficiency of CSID compression in multi-domain environments.",
      "ja": "このドキュメントでは、マルチドメイン環境でのCSID圧縮の効率を維持するために、2つの新しいSRV6エンドポイントの動作、End.LBSとEnd.xlbsも導入されています。"
    },
    {
      "indent": 3,
      "text": "An SR source node constructs an IPv6 packet with a compressed segment list encoding as defined in Sections 3.1 and 4.1 of [RFC8754] and Section 5 of [RFC8986]. The paths that an SR source node may enforce using a compressed segment list encoding are the same, from a topology and service perspective, as those that an SR source node could enforce using the SIDs of [RFC8986].",
      "ja": "SRソースノードは、[RFC8754]のセクション3.1および4.1および[RFC8986]のセクション5で定義されているようにエンコードする圧縮セグメントリストを備えたIPv6パケットを構築します。SRソースノードが圧縮セグメントリストエンコードを使用して実施する可能性のあるパスは、SRソースノードが[RFC8986]のSIDを使用して強制できるように、トポロジとサービスの観点から同じです。"
    },
    {
      "indent": 3,
      "text": "An SR segment endpoint node processes an IPv6 packet matching a locally instantiated SID as defined in [RFC8986], with the pseudocode modifications in Section 4 of this document. These modifications change how the SR segment endpoint node determines the next SID in the packet but not the semantic of either the active or the next SID. For example, an adjacency segment instantiated with the End.X behavior remains an adjacency segment regardless of whether it uses the base End.X behavior defined in Section 4.2 of [RFC8986] or a CSID flavor of that behavior. This document does not introduce any new SID semantic.",
      "ja": "SRセグメントのエンドポイントノードは、[RFC8986]で定義されているローカルにインスタンス化されたSIDを一致させるIPv6パケットを処理し、このドキュメントのセクション4の擬似コード変更を行います。これらの変更により、SRセグメントエンドポイントノードがパケット内の次のSIDを決定する方法を変更しますが、アクティブまたは次のSIDのセマンティックではありません。たとえば、end.xの動作がインスタンス化された隣接セグメントは、[RFC8986]のセクション4.2で定義されているベースEND.Xの動作を使用するか、その動作のCSIDフレーバーを使用するかに関係なく、隣接セグメントのままです。このドキュメントでは、新しいSIDセマンティックは導入されていません。"
    },
    {
      "indent": 3,
      "text": "Any other transit node processes the packet as described in Section 4.2 of [RFC8754].",
      "ja": "他のトランジットノードは、[RFC8754]のセクション4.2で説明されているようにパケットを処理します。"
    },
    {
      "indent": 3,
      "text": "This document defines a new method of encoding the SIDs inside a SID list at the SR source node (Section 6) and decoding them at the SR segment endpoint node (see Sections 4 and 7), but it does not change how the SID list itself is encoded in the IPv6 packet nor the semantic of any segment that it comprises. Therefore, this document is subject to the same security considerations that are discussed in [RFC8402], [RFC8754], and [RFC8986].",
      "ja": "このドキュメントでは、SRソースノードのSIDリスト内のSIDをエンコードする新しい方法（セクション6）を定義し、SRセグメントエンドポイントノードでそれらをデコードする（セクション4および7を参照）。したがって、このドキュメントは、[RFC8402]、[RFC8754]、および[RFC8986]で説明されているのと同じセキュリティ上の考慮事項の対象となります。"
    },
    {
      "indent": 0,
      "text": "12. IANA Considerations",
      "section_title": true,
      "ja": "12. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "12.1. SRv6 Endpoint Behaviors",
      "section_title": true,
      "ja": "12.1. SRV6エンドポイントの動作"
    },
    {
      "indent": 3,
      "text": "IANA has updated the reference of the following registrations from the \"SRv6 Endpoint Behaviors\" registry under the \"Segment Routing\" registry group (<https://www.iana.org/assignments/segment-routing/>) to point to this document and transfer change control to the IETF.",
      "ja": "IANAは、「セグメントルーティング」レジストリグループ（<https://www.iana.org/assignments/segment-routing/>）に基づく「SRV6エンドポイント動作」レジストリからの次の登録の参照を更新し、このドキュメントを指してIETFに変更制御を転送します。"
    },
    {
      "indent": 6,
      "text": "+=======+=========================================+===========+\n| Value | Description                             | Reference |\n+=======+=========================================+===========+\n| 43    | End with NEXT-CSID                      | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 44    | End with NEXT-CSID & PSP                | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 45    | End with NEXT-CSID & USP                | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 46    | End with NEXT-CSID, PSP & USP           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 47    | End with NEXT-CSID & USD                | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 48    | End with NEXT-CSID, PSP & USD           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 49    | End with NEXT-CSID, USP & USD           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 50    | End with NEXT-CSID, PSP, USP & USD      | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 52    | End.X with NEXT-CSID                    | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 53    | End.X with NEXT-CSID & PSP              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 54    | End.X with NEXT-CSID & USP              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 55    | End.X with NEXT-CSID, PSP & USP         | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 56    | End.X with NEXT-CSID & USD              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 57    | End.X with NEXT-CSID, PSP & USD         | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 58    | End.X with NEXT-CSID, USP & USD         | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 59    | End.X with NEXT-CSID, PSP, USP & USD    | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 85    | End.T with NEXT-CSID                    | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 86    | End.T with NEXT-CSID & PSP              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 87    | End.T with NEXT-CSID & USP              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 88    | End.T with NEXT-CSID, PSP & USP         | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 89    | End.T with NEXT-CSID & USD              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 90    | End.T with NEXT-CSID, PSP & USD         | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 91    | End.T with NEXT-CSID, USP & USD         | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 92    | End.T with NEXT-CSID, PSP, USP & USD    | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 93    | End.B6.Encaps with NEXT-CSID            | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 94    | End.B6.Encaps.Red with NEXT-CSID        | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 95    | End.BM with NEXT-CSID                   | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 96    | End.LBS with NEXT-CSID                  | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 97    | End.XLBS with NEXT-CSID                 | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 101   | End with REPLACE-CSID                   | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 102   | End with REPLACE-CSID & PSP             | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 103   | End with REPLACE-CSID & USP             | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 104   | End with REPLACE-CSID, PSP & USP        | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 105   | End.X with REPLACE-CSID                 | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 106   | End.X with REPLACE-CSID & PSP           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 107   | End.X with REPLACE-CSID & USP           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 108   | End.X with REPLACE-CSID, PSP & USP      | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 109   | End.T with REPLACE-CSID                 | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 110   | End.T with REPLACE-CSID & PSP           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 111   | End.T with REPLACE-CSID & USP           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 112   | End.T with REPLACE-CSID, PSP & USP      | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 114   | End.B6.Encaps with REPLACE-CSID         | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 115   | End.BM with REPLACE-CSID                | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 116   | End.DX6 with REPLACE-CSID               | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 117   | End.DX4 with REPLACE-CSID               | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 118   | End.DT6 with REPLACE-CSID               | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 119   | End.DT4 with REPLACE-CSID               | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 120   | End.DT46 with REPLACE-CSID              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 121   | End.DX2 with REPLACE-CSID               | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 122   | End.DX2V with REPLACE-CSID              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 123   | End.DT2U with REPLACE-CSID              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 124   | End.DT2M with REPLACE-CSID              | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 127   | End.B6.Encaps.Red with REPLACE-CSID     | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 128   | End with REPLACE-CSID & USD             | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 129   | End with REPLACE-CSID, PSP & USD        | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 130   | End with REPLACE-CSID, USP & USD        | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 131   | End with REPLACE-CSID, PSP, USP & USD   | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 132   | End.X with REPLACE-CSID & USD           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 133   | End.X with REPLACE-CSID, PSP & USD      | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 134   | End.X with REPLACE-CSID, USP & USD      | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 135   | End.X with REPLACE-CSID, PSP, USP & USD | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 136   | End.T with REPLACE-CSID & USD           | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 137   | End.T with REPLACE-CSID, PSP & USD      | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 138   | End.T with REPLACE-CSID, USP & USD      | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 139   | End.T with REPLACE-CSID, PSP, USP & USD | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 140   | End.LBS with REPLACE-CSID               | RFC 9800  |\n+-------+-----------------------------------------+-----------+\n| 141   | End.XLBS with REPLACE-CSID              | RFC 9800  |\n+-------+-----------------------------------------+-----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Table 1: SRv6 Endpoint Behaviors Registration List",
      "ja": "表1：SRV6エンドポイント動作登録リスト"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13. 参考文献"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "ja": "13.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n           Requirement Levels\", BCP 14, RFC 2119,\n           DOI 10.17487/RFC2119, March 1997,\n           <https://www.rfc-editor.org/info/rfc2119>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n           2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n           May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8200]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n           (IPv6) Specification\", STD 86, RFC 8200,\n           DOI 10.17487/RFC8200, July 2017,\n           <https://www.rfc-editor.org/info/rfc8200>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8402]  Filsfils, C., Ed., Previdi, S., Ed., Ginsberg, L.,\n           Decraene, B., Litkowski, S., and R. Shakir, \"Segment\n           Routing Architecture\", RFC 8402, DOI 10.17487/RFC8402,\n           July 2018, <https://www.rfc-editor.org/info/rfc8402>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8754]  Filsfils, C., Ed., Dukes, D., Ed., Previdi, S., Leddy, J.,\n           Matsushima, S., and D. Voyer, \"IPv6 Segment Routing Header\n           (SRH)\", RFC 8754, DOI 10.17487/RFC8754, March 2020,\n           <https://www.rfc-editor.org/info/rfc8754>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8986]  Filsfils, C., Ed., Camarillo, P., Ed., Leddy, J., Voyer,\n           D., Matsushima, S., and Z. Li, \"Segment Routing over IPv6\n           (SRv6) Network Programming\", RFC 8986,\n           DOI 10.17487/RFC8986, February 2021,\n           <https://www.rfc-editor.org/info/rfc8986>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "ja": "13.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[BGP-LS-SR-Policy]\n           Previdi, S., Talaulikar, K., Ed., Dong, J., Gredler, H.,\n           and J. Tantsura, \"Advertisement of Segment Routing\n           Policies using BGP Link-State\", Work in Progress,\n           Internet-Draft, draft-ietf-idr-bgp-ls-sr-policy-17, 6\n           March 2025, <https://datatracker.ietf.org/doc/html/draft-\n           ietf-idr-bgp-ls-sr-policy-17>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[BGP-SR-Policy]\n           Previdi, S., Filsfils, C., Talaulikar, K., Ed., Mattes,\n           P., and D. Jain, \"Advertising Segment Routing Policies in\n           BGP\", Work in Progress, Internet-Draft, draft-ietf-idr-sr-\n           policy-safi-13, 6 February 2025,\n           <https://datatracker.ietf.org/doc/html/draft-ietf-idr-sr-\n           policy-safi-13>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[GKP94]    Graham, R., Knuth, D., and O. Patashnik, \"Concrete\n           Mathematics: A Foundation for Computer Science\",\n           ISBN 9780201558029, 1994.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC4786]  Abley, J. and K. Lindqvist, \"Operation of Anycast\n           Services\", BCP 126, RFC 4786, DOI 10.17487/RFC4786,\n           December 2006, <https://www.rfc-editor.org/info/rfc4786>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9252]  Dawra, G., Ed., Talaulikar, K., Ed., Raszuk, R., Decraene,\n           B., Zhuang, S., and J. Rabadan, \"BGP Overlay Services\n           Based on Segment Routing over IPv6 (SRv6)\", RFC 9252,\n           DOI 10.17487/RFC9252, July 2022,\n           <https://www.rfc-editor.org/info/rfc9252>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9259]  Ali, Z., Filsfils, C., Matsushima, S., Voyer, D., and M.\n           Chen, \"Operations, Administration, and Maintenance (OAM)\n           in Segment Routing over IPv6 (SRv6)\", RFC 9259,\n           DOI 10.17487/RFC9259, June 2022,\n           <https://www.rfc-editor.org/info/rfc9259>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9350]  Psenak, P., Ed., Hegde, S., Filsfils, C., Talaulikar, K.,\n           and A. Gulko, \"IGP Flexible Algorithm\", RFC 9350,\n           DOI 10.17487/RFC9350, February 2023,\n           <https://www.rfc-editor.org/info/rfc9350>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9352]  Psenak, P., Ed., Filsfils, C., Bashandy, A., Decraene, B.,\n           and Z. Hu, \"IS-IS Extensions to Support Segment Routing\n           over the IPv6 Data Plane\", RFC 9352, DOI 10.17487/RFC9352,\n           February 2023, <https://www.rfc-editor.org/info/rfc9352>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9513]  Li, Z., Hu, Z., Talaulikar, K., Ed., and P. Psenak,\n           \"OSPFv3 Extensions for Segment Routing over IPv6 (SRv6)\",\n           RFC 9513, DOI 10.17487/RFC9513, December 2023,\n           <https://www.rfc-editor.org/info/rfc9513>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9514]  Dawra, G., Filsfils, C., Talaulikar, K., Ed., Chen, M.,\n           Bernier, D., and B. Decraene, \"Border Gateway Protocol -\n           Link State (BGP-LS) Extensions for Segment Routing over\n           IPv6 (SRv6)\", RFC 9514, DOI 10.17487/RFC9514, December\n           2023, <https://www.rfc-editor.org/info/rfc9514>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9602]  Krishnan, S., \"Segment Routing over IPv6 (SRv6) Segment\n           Identifiers in the IPv6 Addressing Architecture\",\n           RFC 9602, DOI 10.17487/RFC9602, October 2024,\n           <https://www.rfc-editor.org/info/rfc9602>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9603]  Li, C., Ed., Kaladharan, P., Sivabalan, S., Koldychev, M.,\n           and Y. Zhu, \"Path Computation Element Communication\n           Protocol (PCEP) Extensions for IPv6 Segment Routing\",\n           RFC 9603, DOI 10.17487/RFC9603, July 2024,\n           <https://www.rfc-editor.org/info/rfc9603>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix A. Complete Pseudocodes",
      "section_title": true,
      "ja": "付録A. 完全な偽コード"
    },
    {
      "indent": 3,
      "text": "The content of this section is purely informative rendering of the pseudocodes of [RFC8986] with the modifications in this document. This rendering may not be used as a reference.",
      "ja": "このセクションの内容は、[RFC8986]の擬似コードを純粋に有益なレンダリングと、このドキュメントの変更としています。このレンダリングは、参照として使用できません。"
    },
    {
      "indent": 0,
      "text": "A.1. End with NEXT-CSID",
      "section_title": true,
      "ja": "A.1. 次のcsidで終わります"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End SID with the NEXT-CSID flavor:",
      "ja": "次のCSIDフレーバーを備えたエンドSIDとしてローカルにインスタンス化されたFIBエントリに一致するパケットのSRHを処理するとき："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address\n           with Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing, and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.   Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the next destination.\nN09. }\nS02. If (Segments Left == 0) {\nS03.   Stop processing the SRH and proceed to process the next\n         header in the packet, whose type is identified by\n         the Next Header field in the routing header.\nS04. }\nS05. If (IPv6 Hop Limit <= 1) {\nS06.   Send an ICMP Time Exceeded message to the Source Address\n         with Code 0 (Hop limit exceeded in transit),\n         interrupt packet processing, and discard the packet.\nS07. }\nS08. max_LE = (Hdr Ext Len / 2) - 1\nS09. If ((Last Entry > max_LE) or (Segments Left > Last Entry+1)) {\nS10.   Send an ICMP Parameter Problem to the Source Address\n         with Code 0 (Erroneous header field encountered)\n         and Pointer set to the Segments Left field,\n         interrupt packet processing, and discard the packet.\nS11. }\nS12. Decrement IPv6 Hop Limit by 1.\nS13. Decrement Segments Left by 1.\nS14. Update IPv6 DA with Segment List[Segments Left].\nS15. Submit the packet to the egress IPv6 FIB lookup for\n       transmission to the new destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Before processing the upper-layer header or any IPv6 extension header other than Hop-by-Hop or Destination Options of a packet matching a FIB entry locally instantiated as an End SID with the NEXT-CSID flavor:",
      "ja": "上層層ヘッダーまたはIPv6エクステンションヘッダーを処理する前に、次のCSIDフレーバーを備えたエンドSIDとしてローカルにインスタンス化されたFIBエントリを一致させるパケットのホップバイホップまたは宛先オプション以外の任意"
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.   Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the next destination.\nN09. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End SID with the NEXT-CSID flavor:",
      "ja": "次のCSIDフレーバーを備えたエンドSIDとしてローカルにインスタンス化されたFIBエントリに一致するパケットの上層ヘッダーを処理するとき："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n         with Code 4 (SR Upper-layer Header Error)\n         and Pointer set to the offset of the upper-layer header,\n         interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2. End.X with NEXT-CSID",
      "section_title": true,
      "ja": "A.2. 次のcsidでend.x"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End.X SID with the NEXT-CSID flavor:",
      "ja": "次のCSIDフレーバーを備えたend.x sidとしてローカルにインスタンス化されたFIBエントリに一致するパケットのSRHを処理するとき："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address\n           with Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing, and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.   Submit the packet to the IPv6 module for transmission to the\n         new destination via a member of J.\nN09. }\nS02. If (Segments Left == 0) {\nS03.   Stop processing the SRH and proceed to process the next\n         header in the packet, whose type is identified by\n         the Next Header field in the routing header.\nS04. }\nS05. If (IPv6 Hop Limit <= 1) {\nS06.   Send an ICMP Time Exceeded message to the Source Address\n         with Code 0 (Hop limit exceeded in transit),\n         interrupt packet processing, and discard the packet.\nS07. }\nS08. max_LE = (Hdr Ext Len / 2) - 1\nS09. If ((Last Entry > max_LE) or (Segments Left > Last Entry+1)) {\nS10.   Send an ICMP Parameter Problem to the Source Address\n         with Code 0 (Erroneous header field encountered)\n         and Pointer set to the Segments Left field,\n         interrupt packet processing, and discard the packet.\nS11. }\nS12. Decrement IPv6 Hop Limit by 1.\nS13. Decrement Segments Left by 1.\nS14. Update IPv6 DA with Segment List[Segments Left].\nS15. Submit the packet to the IPv6 module for transmission\n       to the new destination via a member of J.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Before processing the upper-layer header or any IPv6 extension header other than Hop-by-Hop or Destination Options of a packet matching a FIB entry locally instantiated as an End.X SID with the NEXT-CSID flavor:",
      "ja": "上層層ヘッダーまたはIPv6エクステンションヘッダーを処理する前に、次のcsidフレーバーを備えたend.x sidとしてローカルにインスタンス化されたfibエントリを一致させるパケットのホップバイホップまたは宛先オプション以外の任意のIPv6拡張ヘッダー："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.   Submit the packet to the IPv6 module for transmission to the\n         new destination via a member of J.\nN09. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End.X SID with the NEXT-CSID flavor:",
      "ja": "次のcsidフレーバーを備えたend.x sidとしてローカルにインスタンス化されたFIBエントリに一致するパケットの上層ヘッダーを処理する場合："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n         with Code 4 (SR Upper-layer Header Error)\n         and Pointer set to the offset of the upper-layer header,\n         interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3. End.T with NEXT-CSID",
      "section_title": true,
      "ja": "A.3. 次のcsidでend.t"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End.T SID with the NEXT-CSID flavor:",
      "ja": "次のcsidフレーバーを備えたsid.t sidとしてローカルにインスタンス化されたFIBエントリを一致させるパケットのSRHを処理する場合："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address\n           with Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing, and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.1. Set the packet's associated FIB table to T.\nN08.2. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the new destination.\nN09. }\nS02. If (Segments Left == 0) {\nS03.   Stop processing the SRH and proceed to process the next\n         header in the packet, whose type is identified by\n         the Next Header field in the routing header.\nS04. }\nS05. If (IPv6 Hop Limit <= 1) {\nS06.   Send an ICMP Time Exceeded message to the Source Address\n         with Code 0 (Hop limit exceeded in transit),\n         interrupt packet processing, and discard the packet.\nS07. }\nS08. max_LE = (Hdr Ext Len / 2) - 1\nS09. If ((Last Entry > max_LE) or (Segments Left > Last Entry+1)) {\nS10.   Send an ICMP Parameter Problem to the Source Address\n         with Code 0 (Erroneous header field encountered)\n         and Pointer set to the Segments Left field,\n         interrupt packet processing, and discard the packet.\nS11. }\nS12. Decrement IPv6 Hop Limit by 1.\nS13. Decrement Segments Left by 1.\nS14. Update IPv6 DA with Segment List[Segments Left].\nS15.1. Set the packet's associated FIB table to T.\nS15.2. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the new destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Before processing the upper-layer header or any IPv6 extension header other than Hop-by-Hop or Destination Options of a packet matching a FIB entry locally instantiated as an End.T SID with the NEXT-CSID flavor:",
      "ja": "上層層ヘッダーまたはIPv6拡張ヘッダーを処理する前に、次のcsidフレーバーを備えたsid.t sidとしてローカルにインスタンス化されたFIBエントリを一致させるパケットのホップバイホップまたは宛先オプション以外の任意のIPv6拡張ヘッダーを処理する前に："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.1. Set the packet's associated FIB table to T.\nN08.2. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the new destination.\nN09. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End.T SID with the NEXT-CSID flavor:",
      "ja": "次のcsidフレーバーを備えたsid.t sidとしてローカルにインスタンス化されたFIBエントリを一致させるパケットの上層ヘッダーを処理する場合："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n         with Code 4 (SR Upper-layer Header Error)\n         and Pointer set to the offset of the upper-layer header,\n         interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4. End.B6.Encaps with NEXT-CSID",
      "section_title": true,
      "ja": "A.4. end.b6.Encaps with next-csid"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End.B6.Encaps SID with the NEXT-CSID flavor:",
      "ja": "end.b6.Encaps Sidを次のCSIDフレーバーでエンクしたFIBエントリを一致させるパケットのSRHを処理するとき："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.1. Push a new IPv6 header with its own SRH containing B.\nN08.2. Set the outer IPv6 SA to A.\nN08.3. Set the outer IPv6 DA to the first SID of B.\nN08.4. Set the outer Payload Length, Traffic Class, Flow Label,\n         Hop Limit, and Next Header fields.\nN08.5. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the next destination.\nN09. }\nS02. If (Segments Left == 0) {\nS03.   Stop processing the SRH and proceed to process the next\n         header in the packet, whose type is identified by\n         the Next Header field in the routing header.\nS04. }\nS05. If (IPv6 Hop Limit <= 1) {\nS06.   Send an ICMP Time Exceeded message to the Source Address\n         with Code 0 (Hop limit exceeded in transit),\n         interrupt packet processing, and discard the packet.\nS07. }\nS08. max_LE = (Hdr Ext Len / 2) - 1\nS09. If ((Last Entry > max_LE) or (Segments Left > Last Entry+1)) {\nS10.   Send an ICMP Parameter Problem to the Source Address\n         with Code 0 (Erroneous header field encountered)\n         and Pointer set to the Segments Left field,\n         interrupt packet processing, and discard the packet.\nS11. }\nS12. Decrement IPv6 Hop Limit by 1.\nS13. Decrement Segments Left by 1.\nS14. Update IPv6 DA with Segment List[Segments Left].\nS15. Push a new IPv6 header with its own SRH containing B.\nS16. Set the outer IPv6 SA to A.\nS17. Set the outer IPv6 DA to the first SID of B.\nS18. Set the outer Payload Length, Traffic Class, Flow Label,\n       Hop Limit, and Next Header fields.\nS19. Submit the packet to the egress IPv6 FIB lookup for\n       transmission to the new destination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Before processing the upper-layer header or any IPv6 extension header other than Hop-by-Hop or Destination Options of a packet matching a FIB entry locally instantiated as an End.B6.Encaps SID with the NEXT-CSID flavor:",
      "ja": "上層層ヘッダーまたはIPv6エクステンションヘッダーを処理する前に、end.b6.encaps sidをエンドとしてローカルにインスタンス化したFIBエントリを一致させるパケットのホップバイホップまたは宛先オプション以外のIPv6拡張ヘッダーを処理する前に："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.1. Push a new IPv6 header with its own SRH containing B.\nN08.2. Set the outer IPv6 SA to A.\nN08.3. Set the outer IPv6 DA to the first SID of B.\nN08.4. Set the outer Payload Length, Traffic Class, Flow Label,\n         Hop Limit, and Next Header fields.\nN08.5. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the next destination.\nN09. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End.B6.Encaps SID with the NEXT-CSID flavor:",
      "ja": "end.b6.Encaps SIDを次のCSIDフレーバーでエンクしたFIBエントリを一致させるパケットの上層ヘッダーを処理する場合："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n         with Code 4 (SR Upper-layer Header Error)\n         and Pointer set to the offset of the upper-layer header,\n         interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5. End.BM with NEXT-CSID",
      "section_title": true,
      "ja": "A.5. end.bm with next-csid"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End.BM SID with the NEXT-CSID flavor:",
      "ja": "次のCSIDフレーバーでend.BM SIDとしてローカルにインスタンス化されたFIBエントリに一致するパケットのSRHを処理するとき："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.1. Push the MPLS label stack for B.\nN08.2. Submit the packet to the MPLS engine for transmission.\nN09. }\nS02. If (Segments Left == 0) {\nS03.   Stop processing the SRH and proceed to process the next\n         header in the packet, whose type is identified by\n         the Next Header field in the routing header.\nS04. }\nS05. If (IPv6 Hop Limit <= 1) {\nS06.   Send an ICMP Time Exceeded message to the Source Address\n         with Code 0 (Hop limit exceeded in transit),\n         interrupt packet processing, and discard the packet.\nS07. }\nS08. max_LE = (Hdr Ext Len / 2) - 1\nS09. If ((Last Entry > max_LE) or (Segments Left > Last Entry+1)) {\nS10.   Send an ICMP Parameter Problem to the Source Address\n         with Code 0 (Erroneous header field encountered)\n         and Pointer set to the Segments Left field,\n         interrupt packet processing, and discard the packet.\nS11. }\nS12. Decrement IPv6 Hop Limit by 1.\nS13. Decrement Segments Left by 1.\nS14. Update IPv6 DA with Segment List[Segments Left].\nS15. Push the MPLS label stack for B.\nS16. Submit the packet to the MPLS engine for transmission.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Before processing the upper-layer header or any IPv6 extension header other than Hop-by-Hop or Destination Options of a packet matching a FIB entry locally instantiated as an End.BM SID with the NEXT-CSID flavor:",
      "ja": "上層層ヘッダーまたはIPv6エクステンションヘッダーを処理する前に、end.bm sidとしてローカルにインスタンス化されたfibエントリを一致させるパケットのホップバイホップまたは宛先オプション以外の任意のIPv6拡張ヘッダーを処理する前に："
    },
    {
      "indent": 3,
      "text": "N01. If (DA.Argument != 0) {\nN02.   If (IPv6 Hop Limit <= 1) {\nN03.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nN04.   }\nN05.   Copy DA.Argument into the bits [LBL..(LBL+AL-1)] of the\n         Destination Address.\nN06.   Set the bits [(LBL+AL)..127] of the Destination Address to\n         zero.\nN07.   Decrement IPv6 Hop Limit by 1.\nN08.1. Push the MPLS label stack for B.\nN08.2. Submit the packet to the MPLS engine for transmission.\nN09. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End.BM SID with the NEXT-CSID flavor:",
      "ja": "次のCSIDフレーバーでend.BM SIDとしてローカルにインスタンス化されたFIBエントリを一致させるパケットの上層ヘッダーを処理するとき："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n         with Code 4 (SR Upper-layer Header Error)\n         and Pointer set to the offset of the upper-layer header,\n         interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6. End with REPLACE-CSID",
      "section_title": true,
      "ja": "A.6. 置換csidで終了します"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End SID with the REPLACE-CSID flavor:",
      "ja": "PackSIDフレーバーを備えたEnd SIDとしてローカルにインスタンス化されたFIBエントリに一致するパケットのSRHを処理するとき："
    },
    {
      "indent": 3,
      "text": "S01. When an SRH is processed {\nS02.   If (Segments Left == 0 and (DA.Arg.Index == 0 or\n           Segment List[0][DA.Arg.Index-1] == 0)) {\nS03.     Stop processing the SRH and proceed to process the next\n           header in the packet, whose type is identified by\n           the Next Header field in the routing header.\nS04.   }\nS05.   If (IPv6 Hop Limit <= 1) {\nS06.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nS07.   }\nS08.   max_LE = (Hdr Ext Len / 2) - 1\nR01.   If (DA.Arg.Index != 0) {\nR02.     If ((Last Entry > max_LE) or (Segments Left > Last Entry)) {\nR03.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR04.     }\nR05.     Decrement DA.Arg.Index by 1.\nR06.     If (Segment List[Segments Left][DA.Arg.Index] == 0) {\nR07.       Decrement Segments Left by 1.\nR08.       Decrement IPv6 Hop Limit by 1.\nR09.       Update IPv6 DA with Segment List[Segments Left]\nR10.       Submit the packet to the egress IPv6 FIB lookup for\n            transmission to the new destination.\nR11.     }\nR12.   } Else {\nR13.     If((Last Entry > max_LE) or (Segments Left > Last Entry+1)){\nR14.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR15.     }\nR16.     Decrement Segments Left by 1.\nR17.     Set DA.Arg.Index to (128/LNFL - 1).\nR18.   }\nR19.   Decrement IPv6 Hop Limit by 1.\nR20.   Write Segment List[Segments Left][DA.Arg.Index] into the bits\n         [LBL..LBL+LNFL-1] of the Destination Address of the IPv6\n         header.\nR21.   Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the new destination.\nS16. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End SID with the REPLACE-CSID flavor:",
      "ja": "PACKETの上部層ヘッダーを処理する場合、end sidとして局所的にインスタンス化されたfibエントリに一致するパケットのヘッダーを置き換えます。"
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n          with Code 4 (SR Upper-layer Header Error)\n          and Pointer set to the offset of the upper-layer header,\n          interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7. End.X with REPLACE-CSID",
      "section_title": true,
      "ja": "A.7. end.xをedl.xを置き換えます"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End.X SID with the REPLACE-CSID flavor:",
      "ja": "end.x sidとして局所的にインスタンス化されたFIBエントリに一致するパケットのSRHを処理するとき："
    },
    {
      "indent": 3,
      "text": "S01. When an SRH is processed {\nS02.   If (Segments Left == 0 and (DA.Arg.Index == 0 or\n           Segment List[0][DA.Arg.Index-1] == 0)) {\nS03.     Stop processing the SRH and proceed to process the next\n           header in the packet, whose type is identified by\n           the Next Header field in the routing header.\nS04.   }\nS05.   If (IPv6 Hop Limit <= 1) {\nS06.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nS07.   }\nS08.   max_LE = (Hdr Ext Len / 2) - 1\nR01.   If (DA.Arg.Index != 0) {\nR02.     If ((Last Entry > max_LE) or (Segments Left > Last Entry)) {\nR03.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR04.     }\nR05.     Decrement DA.Arg.Index by 1.\nR06.     If (Segment List[Segments Left][DA.Arg.Index] == 0) {\nR07.       Decrement Segments Left by 1.\nR08.       Decrement IPv6 Hop Limit by 1.\nR09.       Update IPv6 DA with Segment List[Segments Left]\nR10.       Submit the packet to the IPv6 module for transmission to\n             the new destination via a member of J.\nR11.     }\nR12.   } Else {\nR13.     If((Last Entry > max_LE) or (Segments Left > Last Entry+1)){\nR14.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR15.     }\nR16.     Decrement Segments Left by 1.\nR17.     Set DA.Arg.Index to (128/LNFL - 1).\nR18.   }\nR19.   Decrement IPv6 Hop Limit by 1.\nR20.   Write Segment List[Segments Left][DA.Arg.Index] into the bits\n         [LBL..LBL+LNFL-1] of the Destination Address of the IPv6\n         header.\nR21.   Submit the packet to the IPv6 module for transmission to the\n         new destination via a member of J.\nS16. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End.X SID with the REPLACE-CSID flavor:",
      "ja": "end.x sidとして局所的にインスタンス化されたfibエントリに一致するパケットの上層ヘッダーを処理する場合："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n          with Code 4 (SR Upper-layer Header Error)\n          and Pointer set to the offset of the upper-layer header,\n          interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.8. End.T with REPLACE-CSID",
      "section_title": true,
      "ja": "A.8. end.tはexply-csidを使用しています"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End.T SID with the REPLACE-CSID flavor:",
      "ja": "end.t sidとして局所的にインスタンス化されたfibエントリに一致するパケットのsrhを処理する場合："
    },
    {
      "indent": 3,
      "text": "S01. When an SRH is processed {\nS02.   If (Segments Left == 0 and (DA.Arg.Index == 0 or\n           Segment List[0][DA.Arg.Index-1] == 0)) {\nS03.     Stop processing the SRH and proceed to process the next\n           header in the packet, whose type is identified by\n           the Next Header field in the routing header.\nS04.   }\nS05.   If (IPv6 Hop Limit <= 1) {\nS06.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nS07.   }\nS08.   max_LE = (Hdr Ext Len / 2) - 1\nR01.   If (DA.Arg.Index != 0) {\nR02.     If ((Last Entry > max_LE) or (Segments Left > Last Entry)) {\nR03.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR04.     }\nR05.     Decrement DA.Arg.Index by 1.\nR06.     If (Segment List[Segments Left][DA.Arg.Index] == 0) {\nR07.       Decrement Segments Left by 1.\nR08.       Decrement IPv6 Hop Limit by 1.\nR09.       Update IPv6 DA with Segment List[Segments Left]\nR10.1.     Set the packet's associated FIB table to T.\nR10.2.     Submit the packet to the egress IPv6 FIB lookup for\n             transmission to the new destination.\nR11.     }\nR12.   } Else {\nR13.     If((Last Entry > max_LE) or (Segments Left > Last Entry+1)){\nR14.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR15.     }\nR16.     Decrement Segments Left by 1.\nR17.     Set DA.Arg.Index to (128/LNFL - 1).\nR18.   }\nR19.   Decrement IPv6 Hop Limit by 1.\nR20.   Write Segment List[Segments Left][DA.Arg.Index] into the bits\n         [LBL..LBL+LNFL-1] of the Destination Address of the IPv6\n         header.\nR21.1. Set the packet's associated FIB table to T.\nR21.2. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the new destination.\nS16. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End.T SID with the REPLACE-CSID flavor:",
      "ja": "PacksIDフレーバーを備えたsid.t sidとしてローカルにインスタンス化されたFIBエントリを一致させるパケットの上層ヘッダーを処理する場合："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n          with Code 4 (SR Upper-layer Header Error)\n          and Pointer set to the offset of the upper-layer header,\n          interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.9. End.B6.Encaps with REPLACE-CSID",
      "section_title": true,
      "ja": "A.9. end.B6.Encapsと交換csid"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End.B6.Encaps SID with the REPLACE-CSID flavor:",
      "ja": "end.b6.sidを交換するflavorでsidをエンケープするfibエントリを一致させるパケットのSRHを処理するとき："
    },
    {
      "indent": 3,
      "text": "S01. When an SRH is processed {\nS02.   If (Segments Left == 0 and (DA.Arg.Index == 0 or\n           Segment List[0][DA.Arg.Index-1] == 0)) {\nS03.     Stop processing the SRH and proceed to process the next\n           header in the packet, whose type is identified by\n           the Next Header field in the routing header.\nS04.   }\nS05.   If (IPv6 Hop Limit <= 1) {\nS06.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nS07.   }\nS08.   max_LE = (Hdr Ext Len / 2) - 1\nR01.   If (DA.Arg.Index != 0) {\nR02.     If ((Last Entry > max_LE) or (Segments Left > Last Entry)) {\nR03.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR04.     }\nR05.     Decrement DA.Arg.Index by 1.\nR06.     If (Segment List[Segments Left][DA.Arg.Index] == 0) {\nR07.       Decrement Segments Left by 1.\nR08.       Decrement IPv6 Hop Limit by 1.\nR09.       Update IPv6 DA with Segment List[Segments Left]\nR10.1.     Push a new IPv6 header with its own SRH containing B.\nR10.2.     Set the outer IPv6 SA to A.\nR10.3.     Set the outer IPv6 DA to the first SID of B.\nR10.4.     Set the outer Payload Length, Traffic Class, Flow Label,\n             Hop Limit, and Next Header fields.\nR10.5.     Submit the packet to the egress IPv6 FIB lookup for\n             transmission to the next destination.\nR11.     }\nR12.   } Else {\nR13.     If((Last Entry > max_LE) or (Segments Left > Last Entry+1)){\nR14.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR15.     }\nR16.     Decrement Segments Left by 1.\nR17.     Set DA.Arg.Index to (128/LNFL - 1).\nR18.   }\nR19.   Decrement IPv6 Hop Limit by 1.\nR20.   Write Segment List[Segments Left][DA.Arg.Index] into the bits\n         [LBL..LBL+LNFL-1] of the Destination Address of the IPv6\n         header.\nR21.1. Push a new IPv6 header with its own SRH containing B.\nR21.2. Set the outer IPv6 SA to A.\nR21.3. Set the outer IPv6 DA to the first SID of B.\nR21.4. Set the outer Payload Length, Traffic Class, Flow Label,\n         Hop Limit, and Next Header fields.\nR21.5. Submit the packet to the egress IPv6 FIB lookup for\n         transmission to the next destination.\nS16. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End.B6.Encaps SID with the REPLACE-CSID flavor:",
      "ja": "PACKETの上層ヘッダーを処理するとき、end.b6.sidを交換する味でsidをエンクしたfibエントリを一致させるパケットのヘッダーを処理する場合："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n          with Code 4 (SR Upper-layer Header Error)\n          and Pointer set to the offset of the upper-layer header,\n          interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.10. End.BM with REPLACE-CSID",
      "section_title": true,
      "ja": "A.10. end.bmを搭載したcsid"
    },
    {
      "indent": 3,
      "text": "When processing the SRH of a packet matching a FIB entry locally instantiated as an End.BM SID with the REPLACE-CSID flavor:",
      "ja": "end.bm sidとして局所的にインスタンス化されたFIBエントリに一致するパケットのSRHを処理するとき："
    },
    {
      "indent": 3,
      "text": "S01. When an SRH is processed {\nS02.   If (Segments Left == 0 and (DA.Arg.Index == 0 or\n           Segment List[0][DA.Arg.Index-1] == 0)) {\nS03.     Stop processing the SRH and proceed to process the next\n           header in the packet, whose type is identified by\n           the Next Header field in the routing header.\nS04.   }\nS05.   If (IPv6 Hop Limit <= 1) {\nS06.     Send an ICMP Time Exceeded message to the Source Address,\n           Code 0 (Hop limit exceeded in transit),\n           interrupt packet processing and discard the packet.\nS07.   }\nS08.   max_LE = (Hdr Ext Len / 2) - 1\nR01.   If (DA.Arg.Index != 0) {\nR02.     If ((Last Entry > max_LE) or (Segments Left > Last Entry)) {\nR03.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR04.     }\nR05.     Decrement DA.Arg.Index by 1.\nR06.     If (Segment List[Segments Left][DA.Arg.Index] == 0) {\nR07.       Decrement Segments Left by 1.\nR08.       Decrement IPv6 Hop Limit by 1.\nR09.       Update IPv6 DA with Segment List[Segments Left]\nR10.1.     Push the MPLS label stack for B.\nR10.2.     Submit the packet to the MPLS engine for transmission.\nR11.     }\nR12.   } Else {\nR13.     If((Last Entry > max_LE) or (Segments Left > Last Entry+1)){\nR14.       Send an ICMP Parameter Problem to the Source Address,\n             Code 0 (Erroneous header field encountered),\n             Pointer set to the Segments Left field,\n             interrupt packet processing and discard the packet.\nR15.     }\nR16.     Decrement Segments Left by 1.\nR17.     Set DA.Arg.Index to (128/LNFL - 1).\nR18.   }\nR19.   Decrement IPv6 Hop Limit by 1.\nR20.   Write Segment List[Segments Left][DA.Arg.Index] into the bits\n         [LBL..LBL+LNFL-1] of the Destination Address of the IPv6\n         header.\nR21.1. Push the MPLS label stack for B.\nR21.2. Submit the packet to the MPLS engine for transmission.\nS16. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When processing the upper-layer header of a packet matching a FIB entry locally instantiated as an End.BM SID with the REPLACE-CSID flavor:",
      "ja": "end.bm sidとして局所的にインスタンス化されたFIBエントリに一致するパケットの上層ヘッダーを処理するとき："
    },
    {
      "indent": 3,
      "text": "S01. If (upper-layer header type is allowed by local configuration) {\nS02.   Proceed to process the upper-layer header\nS03. } Else {\nS04.   Send an ICMP Parameter Problem to the Source Address\n          with Code 4 (SR Upper-layer Header Error)\n          and Pointer set to the offset of the upper-layer header,\n          interrupt packet processing, and discard the packet.\nS05. }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "section_title": true,
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Kamran Raza, Xing Jiang, YuanChao Su, Han Li, Yisong Liu, Martin Vigoureux, Joel Halpern, and Tal Mizrahi for their insightful feedback and suggestions.",
      "ja": "著者は、Kamran Raza、Xing Jiang、Yuanchao Su、Han Li、Yisong Liu、Martin Vigoureux、Joel Halpern、Tal Mizrahiの洞察に満ちたフィードバックと提案に感謝したいと思います。"
    },
    {
      "indent": 3,
      "text": "The authors would also like to thank Andrew Alston, Linda Dunbar, Adrian Farrel, Boris Hassanov, Alvaro Retana, and Gunter Van de Velde for their thorough review of this document.",
      "ja": "著者はまた、この文書の徹底的なレビューをしてくれたアンドリュー・アルストン、リンダ・ダンバー、エイドリアン・ファレル、ボリス・ハッサノフ、アルバロ・レターナ、ガンター・ヴァン・デ・ヴェルデに感謝します。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "section_title": true,
      "ja": "貢献者"
    },
    {
      "indent": 3,
      "text": "Liu Aihua\nZTE Corporation\nChina\nEmail: liu.aihua@zte.com.cn",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Dennis Cai\nAlibaba\nUnited States of America\nEmail: d.cai@alibaba-inc.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Darren Dukes\nCisco Systems, Inc.\nCanada\nEmail: ddukes@cisco.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "James N Guichard\nFuturewei Technologies Ltd.\nUnited States of America\nEmail: james.n.guichard@futurewei.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Cheng Li\nHuawei Technologies\nChina\nEmail: c.l@huawei.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Robert Raszuk\nNTT Network Innovations\nUnited States of America\nEmail: robert@raszuk.net",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Ketan Talaulikar\nCisco Systems, Inc.\nIndia\nEmail: ketant.ietf@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Daniel Voyer\nBell Canada\nCanada\nEmail: daniel.voyer@bell.ca",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Shay Zadok\nBroadcom\nIsrael\nEmail: shay.zadok@broadcom.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "section_title": true,
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Weiqiang Cheng (editor)\nChina Mobile\nChina\nEmail: chengweiqiang@chinamobile.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Clarence Filsfils\nCisco Systems, Inc.\nBelgium\nEmail: cf@cisco.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Zhenbin Li\nHuawei Technologies\nChina\nEmail: lizhenbin@huawei.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Bruno Decraene\nOrange\nFrance\nEmail: bruno.decraene@orange.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Francois Clad (editor)\nCisco Systems, Inc.\nFrance\nEmail: fclad.ietf@gmail.com",
      "raw": true,
      "ja": ""
    }
  ]
}