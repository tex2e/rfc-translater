{
  "title": {
    "text": "RFC 9858 - Additional Parameter Sets for HSS/LMS Hash-Based Signatures",
    "ja": "RFC 9858 - HSS/LMS ハッシュベース署名の追加パラメーター セット"
  },
  "number": 9858,
  "created_at": "2025-10-15 23:24:14.029721+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Research Task Force (IRTF)                           S. Fluhrer\nRequest for Comments: 9858                                 Cisco Systems\nCategory: Informational                                          Q. Dang\nISSN: 2070-1721                                                     NIST\n                                                            October 2025",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Additional Parameter Sets for HSS/LMS Hash-Based Signatures",
      "section_title": true,
      "ja": "HSS/LMS ハッシュベース署名の追加パラメーター セット"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "section_title": true,
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document extends HSS/LMS (RFC 8554) by defining parameter sets that use alternative hash functions. These include hash functions that result in signatures with significantly smaller sizes than the signatures that use the RFC 8554 parameter sets and should have sufficient security.",
      "ja": "このドキュメントは、代替ハッシュ関数を使用するパラメータ セットを定義することにより、HSS/LMS (RFC 8554) を拡張します。これらには、RFC 8554 パラメーター セットを使用する署名よりも大幅に小さいサイズの署名が生成され、十分なセキュリティが必要なハッシュ関数が含まれます。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Research Task Force (IRTF). The IRTF publishes the results of Internet-related research and development activities. These results might not be suitable for deployment. This RFC represents the consensus of the Crypto Forum Research Group of the Internet Research Task Force (IRTF). Documents approved for publication by the IRSG are not candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は Internet Research Task Force (IRTF) の成果物です。IRTF は、インターネット関連の研究開発活動の結果を公開しています。これらの結果は、展開には適していない可能性があります。この RFC は、インターネット研究タスクフォース (IRTF) の暗号フォーラム研究グループの合意を表しています。IRSG によって公開が承認された文書は、どのレベルのインターネット標準の候補でもありません。RFC 7841 のセクション 2 を参照してください。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "section_title": true,
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "この文書は Internet Standards Track 仕様ではありません。情報提供を目的として公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Research Task Force (IRTF). The IRTF publishes the results of Internet-related research and development activities. These results might not be suitable for deployment. This RFC represents the consensus of the Crypto Forum Research Group of the Internet Research Task Force (IRTF). Documents approved for publication by the IRSG are not candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は Internet Research Task Force (IRTF) の成果物です。IRTF は、インターネット関連の研究開発活動の結果を公開しています。これらの結果は、展開には適していない可能性があります。この RFC は、インターネット研究タスクフォース (IRTF) の暗号フォーラム研究グループの合意を表しています。IRSG によって公開が承認された文書は、どのレベルのインターネット標準の候補でもありません。RFC 7841 のセクション 2 を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9858.",
      "ja": "この文書の現在のステータス、正誤表、およびそれに対するフィードバックの提供方法に関する情報は、https://www.rfc-editor.org/info/rfc9858 で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "section_title": true,
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2025 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright (c) 2025 IETF Trust および文書の著者として特定された人物。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "この文書は、BCP 78 およびこの文書の発行日に有効な IETF 文書に関する IETF トラストの法的規定 (https://trustee.ietf.org/license-info) の対象となります。これらの文書には、この文書に関するお客様の権利と制限が記載されているため、注意深くお読みください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "section_title": true,
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Additional Hash Function Definitions\n  2.1.  192-Bit Hash Function Based on SHA-256\n  2.2.  256-Bit Hash Function Based on SHAKE256\n  2.3.  192-Bit Hash Function Based on SHAKE256\n3.  Additional LM-OTS Parameter Sets\n4.  Additional LMS Parameter Sets\n5.  Usage for These Additional Hash Functions within HSS\n6.  Parameter Set Selection\n7.  Comparisons of 192-Bit and 256-Bit Parameter Sets\n8.  Security Considerations\n  8.1.  Note on the Version of SHAKE\n9.  IANA Considerations\n10. References\n  10.1.  Normative References\n  10.2.  Informative References\nAppendix A.  Test Cases\n  A.1.  Test Case 1 - SHA-256/192\n  A.2.  Test Vector for SHAKE256/192\n  A.3.  Test Vector for SHA-256/256\n  A.4.  Test Vector for SHA-256/192, W=4\nAcknowledgements\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Stateful hash-based signatures have small private and public keys, are efficient to compute, and are believed to have excellent security. One disadvantage is that the signatures they produce tend to be somewhat large (possibly 1-4 kilobytes). This document defines a set of parameter sets for the HSS/LMS stateful hash-based signature method [RFC8554] that reduce the size of the signature significantly or rely on a hash function other than SHA-256 (to increase cryptodiversity).",
      "ja": "ステートフル ハッシュ ベースの署名には小さな秘密キーと公開キーがあり、計算が効率的で、セキュリティが優れていると考えられています。欠点の 1 つは、生成される署名がやや大きくなる傾向があることです (おそらく 1 ～ 4 キロバイト)。この文書は、署名のサイズを大幅に削減するか、(暗号多様性を高めるために) SHA-256 以外のハッシュ関数に依存する、HSS/LMS ステートフル ハッシュベースの署名方法 [RFC8554] の一連のパラメーター セットを定義します。"
    },
    {
      "indent": 3,
      "text": "This document represents the consensus of the Crypto Forum Research Group (CFRG) in the IRTF. It is not an IETF product and is not a standard.",
      "ja": "この文書は、IRTF の暗号フォーラム研究グループ (CFRG) の総意を表しています。これは IETF 製品ではなく、標準でもありません。"
    },
    {
      "indent": 3,
      "text": "According to official definitions and common usage, a Leighton-Micali Signature (LMS) is a stateful hash-based signature scheme that is based on a single-level Merkle tree. The Hierarchical Signature System (HSS) is a way of binding several LMS signatures together in a hierarchical manner to increase the number of signatures available. Strictly speaking, all the signatures discussed in this document are HSS signatures (even if the HSS signature consists of a single LMS signature). However, it is common to refer to these signatures as \"LMS signatures\". This document uses the term \"HSS/LMS\" to cover both the pedantic and the common meanings.",
      "ja": "公式の定義と一般的な使用法によれば、Leighton-Micali Signature (LMS) は、単一レベルのマークル ツリーに基づくステートフル ハッシュ ベースの署名スキームです。階層署名システム (HSS) は、複数の LMS 署名を階層的にバインドして、利用可能な署名の数を増やす方法です。厳密に言えば、このドキュメントで説明するすべての署名は HSS 署名です (HSS 署名が単一の LMS 署名で構成されている場合でも)。ただし、これらの署名を「LMS 署名」と呼ぶのが一般的です。このドキュメントでは、衒学的な意味と一般的な意味の両方をカバーするために「HSS/LMS」という用語を使用します。"
    },
    {
      "indent": 3,
      "text": "This document is intended to be compatible with the NIST document [NIST_SP_800-208].",
      "ja": "この文書は、NIST 文書 [NIST_SP_800-208] と互換性を持つことを目的としています。"
    },
    {
      "indent": 0,
      "text": "2. Additional Hash Function Definitions",
      "section_title": true,
      "ja": "2. 追加のハッシュ関数定義"
    },
    {
      "indent": 3,
      "text": "This section defines three hash functions that are used with the parameter sets defined in Sections 3 and 4. These hash functions are used where SHA-256 is used in the original parameter sets from [RFC8554]. The hash function used is specified by the parameter set that is selected.",
      "ja": "このセクションでは、セクション 3 と 4 で定義されたパラメータ セットで使用される 3 つのハッシュ関数を定義します。これらのハッシュ関数は、[RFC8554] の元のパラメータ セットで SHA-256 が使用される場合に使用されます。使用されるハッシュ関数は、選択されたパラメータ セットによって指定されます。"
    },
    {
      "indent": 0,
      "text": "2.1. 192-Bit Hash Function Based on SHA-256",
      "section_title": true,
      "ja": "2.1. SHA-256 に基づく 192 ビット ハッシュ関数"
    },
    {
      "indent": 3,
      "text": "This document defines a SHA-2-based hash function with a 192-bit output. As such, we define SHA-256/192 as a truncated version of SHA-256 [FIPS180]. That is, it is the result of performing a SHA-256 operation to a message and then omitting the final 64 bits of the output. This procedure for truncating the hash output to 192 bits is described in Section 7 of [FIPS180].",
      "ja": "このドキュメントでは、192 ビット出力の SHA-2 ベースのハッシュ関数を定義します。そのため、SHA-256/192 を SHA-256 [FIPS180] の短縮バージョンとして定義します。つまり、メッセージに対して SHA-256 操作を実行し、出力の最後の 64 ビットを省略した結果です。ハッシュ出力を 192 ビットに切り詰めるこの手順は、[FIPS180] のセクション 7 で説明されています。"
    },
    {
      "indent": 3,
      "text": "The following test vector illustrates this:",
      "ja": "次のテスト ベクトルはこれを示しています。"
    },
    {
      "indent": 5,
      "text": "SHA-256(\"abc\")     = ba7816bf 8f01cfea 414140de 5dae2223\n                     b00361a3 96177a9c b410ff61 f20015ad\nSHA-256/192(\"abc\") = ba7816bf 8f01cfea 414140de 5dae2223\n                     b00361a3 96177a9c",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "We use the same initial hash value (initialization vector) as the untruncated SHA-256, rather than defining a distinct one, so that we can use a standard SHA-256 hash implementation without modification. In addition, the fact that anyone gets partial knowledge of the SHA-256 hash of a message by examining the SHA-256/192 hash of the same message is not a concern for this application. Each message that is hashed is randomized. Any message being signed includes the C randomizer (a value that is selected by the signer and is included in the hash), which varies per message. Therefore, signing the same message by SHA-256 and by SHA-256/192 will not result in the same value being hashed, and so the latter hash value is not a prefix of the former one. In addition, all hashes include the I identifier, which is included as a part of the signature process in [RFC8554]. This I identifier is selected randomly for each private key (and hence two keys will have different I values with high probability), and so two intermediate hashes computed as a part of signing with two HSS private keys (one with a SHA-256 parameter set and one with a SHA-256/192 parameter set) will also be distinct with high probability.",
      "ja": "標準の SHA-256 ハッシュ実装を変更せずに使用できるように、別個のハッシュ値を定義するのではなく、切り捨てられていない SHA-256 と同じ初期ハッシュ値 (初期化ベクトル) を使用します。さらに、同じメッセージの SHA-256/192 ハッシュを調べることで、メッセージの SHA-256 ハッシュの部分的な知識が誰でも得られるという事実は、このアプリケーションでは問題になりません。ハッシュ化される各メッセージはランダム化されます。署名されるメッセージには C ランダマイザー (署名者によって選択され、ハッシュに含まれる値) が含まれており、これはメッセージごとに異なります。したがって、SHA-256 と SHA-256/192 で同じメッセージに署名しても、同じ値がハッシュされることはなく、後者のハッシュ値は前者のハッシュ値のプレフィックスではありません。さらに、すべてのハッシュには I 識別子が含まれており、これは [RFC8554] の署名プロセスの一部として含まれています。この I 識別子は秘密キーごとにランダムに選択されます (したがって、2 つのキーは高い確率で異なる I 値を持つことになります)。そのため、2 つの HSS 秘密キー (SHA-256 パラメーター セットを持つ 1 つと SHA-256/192 パラメーター セットを持つ 1 つ) を使用した署名の一部として計算される 2 つの中間ハッシュも、高い確率で区別されます。"
    },
    {
      "indent": 0,
      "text": "2.2. 256-Bit Hash Function Based on SHAKE256",
      "section_title": true,
      "ja": "2.2. SHAKE256に基づく256ビットハッシュ関数"
    },
    {
      "indent": 3,
      "text": "This document defines a SHAKE-based hash function with a 256-bit output. As such, we define SHAKE256/256 to be the first 256 bits of the SHAKE256 extendable-output function (XOF). That is, it is the result of performing a SHAKE-256 operation to a message and then using the first 256 bits of output. See [FIPS202] for more detail.",
      "ja": "このドキュメントでは、256 ビット出力の SHAKE ベースのハッシュ関数を定義します。そのため、SHAKE256/256 を SHAKE256 拡張可能出力関数 (XOF) の最初の 256 ビットとして定義します。つまり、メッセージに対して SHAKE-256 操作を実行し、出力の最初の 256 ビットを使用した結果です。詳細については、[FIPS202] を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.3. 192-Bit Hash Function Based on SHAKE256",
      "section_title": true,
      "ja": "2.3. SHAKE256に基づく192ビットハッシュ関数"
    },
    {
      "indent": 3,
      "text": "This document defines a SHAKE-based hash function with a 192-bit output. As such, we define SHAKE256/192 to be the first 192 bits of the SHAKE256 XOF. That is, it is the result of performing a SHAKE-256 operation to a message and then using the first 192 bits of output. See [FIPS202] for more detail.",
      "ja": "This document defines a SHAKE-based hash function with a 192-bit output.そのため、SHAKE256/192 を SHAKE256 XOF の最初の 192 ビットとして定義します。つまり、これはメッセージに対して SHAKE-256 操作を実行し、出力の最初の 192 ビットを使用した結果です。詳細については、[FIPS202] を参照してください。"
    },
    {
      "indent": 0,
      "text": "3. Additional LM-OTS Parameter Sets",
      "section_title": true,
      "ja": "3. 追加のLM-OTSパラメータセット"
    },
    {
      "indent": 3,
      "text": "The table below defines the Leighton-Micali One-Time Signature (LM-OTS) parameters that use the hashes defined in Section 2:",
      "ja": "以下の表は、セクション 2 で定義されたハッシュを使用する Leighton-Micali ワンタイム署名 (LM-OTS) パラメーターを定義しています。"
    },
    {
      "indent": 1,
      "text": " +=====================+==============+==+=+=====+====+============+\n | Parameter Set Name  |      H       | n|w|   p | ls |     id     |\n +=====================+==============+==+=+=====+====+============+\n | LMOTS_SHA256_N24_W1 | SHA-256/192  |24|1| 200 |  8 | 0x00000005 |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHA256_N24_W2 | SHA-256/192  |24|2| 101 |  6 | 0x00000006 |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHA256_N24_W4 | SHA-256/192  |24|4|  51 |  4 | 0x00000007 |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHA256_N24_W8 | SHA-256/192  |24|8|  26 |  0 | 0x00000008 |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHAKE_N32_W1  | SHAKE256/256 |32|1| 265 |  7 | 0x00000009 |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHAKE_N32_W2  | SHAKE256/256 |32|2| 133 |  6 | 0x0000000A |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHAKE_N32_W4  | SHAKE256/256 |32|4|  67 |  4 | 0x0000000B |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHAKE_N32_W8  | SHAKE256/256 |32|8|  34 |  0 | 0x0000000C |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHAKE_N24_W1  | SHAKE256/192 |24|1| 200 |  8 | 0x0000000D |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHAKE_N24_W2  | SHAKE256/192 |24|2| 101 |  6 | 0x0000000E |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHAKE_N24_W4  | SHAKE256/192 |24|4|  51 |  4 | 0x0000000F |\n +---------------------+--------------+--+-+-----+----+------------+\n | LMOTS_SHAKE_N24_W8  | SHAKE256/192 |24|8|  26 |  0 | 0x00000010 |\n +---------------------+--------------+--+-+-----+----+------------+\n\n                               Table 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Parameter Set Name:",
      "ja": "パラメータセット名:"
    },
    {
      "indent": 12,
      "text": "The human-readable name of the parameter set.",
      "ja": "人間が判読できるパラメータ セットの名前。"
    },
    {
      "indent": 3,
      "text": "H: ",
      "ja": "ひ:"
    },
    {
      "indent": 12,
      "text": "The second-preimage-resistant cryptographic hash function used within this parameter set.",
      "ja": "このパラメータ セット内で使用される 2 番目のプリイメージ耐性のある暗号化ハッシュ関数。"
    },
    {
      "indent": 3,
      "text": "n: ",
      "ja": "n:"
    },
    {
      "indent": 12,
      "text": "The number of bytes of the output of the hash function.",
      "ja": "ハッシュ関数の出力のバイト数。"
    },
    {
      "indent": 3,
      "text": "w: ",
      "ja": "w:"
    },
    {
      "indent": 12,
      "text": "The width (in bits) of the Winternitz coefficients; that is, the number of bits from the hash or checksum that is used with a single Winternitz chain. It is a member of the set { 1, 2, 4, 8 }.",
      "ja": "Winternitz 係数の幅 (ビット単位)。つまり、単一の Winternitz チェーンで使用されるハッシュまたはチェックサムのビット数です。これは集合 { 1, 2, 4, 8 } のメンバーです。"
    },
    {
      "indent": 3,
      "text": "p: ",
      "ja": "p:"
    },
    {
      "indent": 12,
      "text": "The number of n-byte string elements that make up the LM-OTS signature.",
      "ja": "LM-OTS 署名を構成する n バイトの文字列要素の数。"
    },
    {
      "indent": 3,
      "text": "ls:",
      "ja": "ls:"
    },
    {
      "indent": 12,
      "text": "The number of left-shift bits used in the checksum function Cksm (used by algorithm 2 of [RFC8554]).",
      "ja": "チェックサム関数 Cksm ([RFC8554] のアルゴリズム 2 で使用) で使用される左シフト ビットの数。"
    },
    {
      "indent": 3,
      "text": "id:",
      "ja": "id:"
    },
    {
      "indent": 12,
      "text": "The IANA-defined identifier used to denote this specific parameter set, which appears in both public keys and signatures.",
      "ja": "この特定のパラメータ セットを示すために使用される IANA 定義の識別子。公開鍵と署名の両方に表示されます。"
    },
    {
      "indent": 3,
      "text": "These values are additions to the entries in Table 1 of [RFC8554].",
      "ja": "これらの値は、[RFC8554] の表 1 のエントリに追加されたものです。"
    },
    {
      "indent": 3,
      "text": "The SHA256_N24, SHAKE_N32, and SHAKE_N24 in the parameter set names denote the SHA-256/192, SHAKE256/256, and SHAKE256/192 hash functions defined in Section 2.",
      "ja": "パラメータ セット名の SHA256_N24、SHAKE_N32、および SHAKE_N24 は、セクション 2 で定義された SHA-256/192、SHAKE256/256、および SHAKE256/192 ハッシュ関数を示します。"
    },
    {
      "indent": 3,
      "text": "Remember that the C message randomizer (which is included in the signature) has the same size (n bytes) as the hash output, and so it shrinks from 32 bytes to 24 bytes for the parameter sets that use either SHA-256/192 or SHAKE256/192.",
      "ja": "C メッセージ ランダマイザー (署名に含まれる) のサイズはハッシュ出力と同じ (n バイト) であるため、SHA-256/192 または SHAKE256/192 を使用するパラメーター セットでは 32 バイトから 24 バイトに縮小されることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4. Additional LMS Parameter Sets",
      "section_title": true,
      "ja": "4. 追加の LMS パラメータ セット"
    },
    {
      "indent": 3,
      "text": "The table below defines several many-time signature parameters called Leighton-Micali Signature (LMS) parameters, using the SHA-256/192, SHAKE256/256, and SHAKE256/192 hash functions:",
      "ja": "以下の表は、SHA-256/192、SHAKE256/256、および SHAKE256/192 ハッシュ関数を使用して、Leighton-Micali Signature (LMS) パラメーターと呼ばれる複数の複数回署名パラメーターを定義しています。"
    },
    {
      "indent": 4,
      "text": "    +====================+==============+====+====+============+\n    | Parameter Set Name |      H       |  m |  h |     id     |\n    +====================+==============+====+====+============+\n    | LMS_SHA256_M24_H5  | SHA-256/192  | 24 |  5 | 0x0000000A |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHA256_M24_H10 | SHA-256/192  | 24 | 10 | 0x0000000B |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHA256_M24_H15 | SHA-256/192  | 24 | 15 | 0x0000000C |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHA256_M24_H20 | SHA-256/192  | 24 | 20 | 0x0000000D |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHA256_M24_H25 | SHA-256/192  | 24 | 25 | 0x0000000E |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M32_H5   | SHAKE256/256 | 32 |  5 | 0x0000000F |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M32_H10  | SHAKE256/256 | 32 | 10 | 0x00000010 |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M32_H15  | SHAKE256/256 | 32 | 15 | 0x00000011 |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M32_H20  | SHAKE256/256 | 32 | 20 | 0x00000012 |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M32_H25  | SHAKE256/256 | 32 | 25 | 0x00000013 |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M24_H5   | SHAKE256/192 | 24 |  5 | 0x00000014 |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M24_H10  | SHAKE256/192 | 24 | 10 | 0x00000015 |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M24_H15  | SHAKE256/192 | 24 | 15 | 0x00000016 |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M24_H20  | SHAKE256/192 | 24 | 20 | 0x00000017 |\n    +--------------------+--------------+----+----+------------+\n    | LMS_SHAKE_M24_H25  | SHAKE256/192 | 24 | 25 | 0x00000018 |\n    +--------------------+--------------+----+----+------------+\n\n                              Table 2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Parameter Set Name:",
      "ja": "パラメータセット名:"
    },
    {
      "indent": 12,
      "text": "The human-readable name of the parameter set.",
      "ja": "人間が判読できるパラメータ セットの名前。"
    },
    {
      "indent": 3,
      "text": "H: ",
      "ja": "ひ:"
    },
    {
      "indent": 12,
      "text": "The second-preimage-resistant cryptographic hash function used within this parameter set.",
      "ja": "このパラメータ セット内で使用される 2 番目のプリイメージ耐性のある暗号化ハッシュ関数。"
    },
    {
      "indent": 3,
      "text": "m: ",
      "ja": "メートル:"
    },
    {
      "indent": 12,
      "text": "The size in bytes of the hash function output.",
      "ja": "ハッシュ関数出力のバイト単位のサイズ。"
    },
    {
      "indent": 3,
      "text": "h: ",
      "ja": "h:"
    },
    {
      "indent": 12,
      "text": "The height of the Merkle tree.",
      "ja": "マークル ツリーの高さ。"
    },
    {
      "indent": 3,
      "text": "id:",
      "ja": "id:"
    },
    {
      "indent": 12,
      "text": "The IANA-defined identifier used to denote this specific parameter set, which appears in both public keys and signatures.",
      "ja": "この特定のパラメータ セットを示すために使用される IANA 定義の識別子。公開鍵と署名の両方に表示されます。"
    },
    {
      "indent": 3,
      "text": "These values are additions to the entries in Table 2 of [RFC8554].",
      "ja": "これらの値は、[RFC8554] の表 2 のエントリに追加されたものです。"
    },
    {
      "indent": 3,
      "text": "The SHA256_M24, SHAKE_M32, and SHAKE_M24 in the parameter set names denote the SHA-256/192, SHAKE256/256, and SHAKE256/192 hash functions defined in Section 2.",
      "ja": "パラメータ セット名の SHA256_M24、SHAKE_M32、および SHAKE_M24 は、セクション 2 で定義された SHA-256/192、SHAKE256/256、および SHAKE256/192 ハッシュ関数を示します。"
    },
    {
      "indent": 0,
      "text": "5. Usage for These Additional Hash Functions within HSS",
      "section_title": true,
      "ja": "5. HSS 内でのこれらの追加ハッシュ関数の使用法"
    },
    {
      "indent": 3,
      "text": "To use the additional hash functions within HSS, one would use the appropriate LM-OTS id from Table 1 and the appropriate LMS id from Table 2 and use that additional hash function when computing the hashes for key generation, signature generation, and signature verification.",
      "ja": "HSS 内で追加のハッシュ関数を使用するには、表 1 の適切な LM-OTS ID と表 2 の適切な LMS ID を使用し、キーの生成、署名の生成、および署名の検証のハッシュを計算するときにその追加のハッシュ関数を使用します。"
    },
    {
      "indent": 3,
      "text": "Note that the size of the I Merkle tree identifier remains 16 bytes, independent of what hash function is used.",
      "ja": "I マークル ツリー識別子のサイズは、使用されるハッシュ関数に関係なく、16 バイトのままであることに注意してください。"
    },
    {
      "indent": 0,
      "text": "6. Parameter Set Selection",
      "section_title": true,
      "ja": "6. パラメータセットの選択"
    },
    {
      "indent": 3,
      "text": "This document, along with [RFC8554], defines four hash functions for use within HSS/LMS: SHA-256, SHA-256/192, SHAKE256/256, and SHAKE256/192. The main reason one would select a hash with a 192-bit output (either SHA-256/192 or SHAKE256/192) would be to reduce the signature size; this comes at the cost of reducing the security margin. However, the security should be sufficient for most uses.",
      "ja": "この文書は、[RFC8554] とともに、HSS/LMS 内で使用する 4 つのハッシュ関数、SHA-256、SHA-256/192、SHAKE256/256、および SHAKE256/192 を定義します。192 ビット出力のハッシュ (SHA-256/192 または SHAKE256/192) を選択する主な理由は、署名のサイズを減らすためです。これには、セキュリティマージンが減少するという代償が伴います。ただし、セキュリティはほとんどの用途には十分です。"
    },
    {
      "indent": 3,
      "text": "In contrast, there is no security or signature size difference between the SHA-256-based parameter sets (SHA-256 or SHA-256/192) versus the SHAKE-based parameter sets (SHAKE256/256 or SHAKE256/192). The reason for selecting between the two would be based on practical considerations, for example, if the implementation happens to have an existing SHA-256 (or SHAKE) implementation or if one of the two happens to give better hashing performance on the platform.",
      "ja": "対照的に、SHA-256 ベースのパラメータ セット (SHA-256 または SHA-256/192) と SHAKE ベースのパラメータ セット (SHAKE256/256 または SHAKE256/192) の間には、セキュリティや署名サイズの違いはありません。2 つのどちらかを選択する理由は、実装にたまたま既存の SHA-256 (または SHAKE) 実装があるかどうか、または 2 つのうちの 1 つがたまたまプラットフォーム上でより優れたハッシュ パフォーマンスを提供するかどうかなど、実際的な考慮事項に基づいています。"
    },
    {
      "indent": 0,
      "text": "7. Comparisons of 192-Bit and 256-Bit Parameter Sets",
      "section_title": true,
      "ja": "7. 192 ビットと 256 ビットのパラメータ セットの比較"
    },
    {
      "indent": 3,
      "text": "Switching to a 192-bit hash affects the signature size, the computation time, and the security strength. It significantly reduces the signature size and somewhat reduces the computation time, at the cost of security strength. See Section 8 for a discussion of the security strength.",
      "ja": "192 ビット ハッシュに切り替えると、署名のサイズ、計算時間、セキュリティ強度に影響します。これにより、セキュリティ強度は犠牲になりますが、署名のサイズが大幅に縮小され、計算時間が若干短縮されます。セキュリティ強度の説明については、セクション 8 を参照してください。"
    },
    {
      "indent": 3,
      "text": "The impact on signature size and computation time is based on two effects:",
      "ja": "署名のサイズと計算時間への影響は、次の 2 つの影響に基づいています。"
    },
    {
      "indent": 8,
      "text": "1. Each hash that appears in the signature is shorter.",
      "ja": "1. 署名に含まれる各ハッシュは短くなります。"
    },
    {
      "indent": 8,
      "text": "2. We need fewer Winternitz chains (because LM-OTS signs a shorter value).",
      "ja": "2. 必要な Winternitz チェーンの数は少なくなります (LM-OTS がより短い値に署名するため)。"
    },
    {
      "indent": 3,
      "text": "For signature length, both effects are relevant. The first is relevant because the signature consists of a series of hashes and each hash is shorter. The second is relevant because when we need fewer Winternitz chains, we need fewer hashes in each LM-OTS signature.",
      "ja": "署名の長さについては、両方の効果が関係します。署名は一連のハッシュで構成され、各ハッシュは短いため、最初のものが重要です。2 つ目は、必要な Winternitz チェーンが少なくなると、各 LM-OTS 署名に必要なハッシュが少なくなるため、関連性があります。"
    },
    {
      "indent": 3,
      "text": "For computation time (for both signature generation and verification), effect 1 is irrelevant (we still need to perform essentially the same hash computation), but effect 2 still applies. For example, with W=8, SHA-256 requires 34 Winternitz chains per LM-OTS signature, but SHA-256/192 requires only 26. Since the vast majority of time (for both signature generation and verification) is spent computing these Winternitz chains, this reduction in the number of chains gives us some performance improvement.",
      "ja": "計算時間 (署名の生成と検証の両方) に関しては、効果 1 は無関係です (本質的に同じハッシュ計算を実行する必要があります)、効果 2 は依然として適用されます。たとえば、W=8 の場合、SHA-256 では LM-OTS 署名ごとに 34 個の Winternitz チェーンが必要ですが、SHA-256/192 では 26 個しか必要ありません。大部分の時間 (署名の生成と検証の両方) がこれらの Winternitz チェーンの計算に費やされるため、このチェーン数の削減によりパフォーマンスがある程度向上します。"
    },
    {
      "indent": 3,
      "text": "The table below gives the space used by both the 256-bit and 192-bit parameter sets for a range of commonly used Winternitz parameters and tree heights:",
      "ja": "以下の表は、一般的に使用される Winternitz パラメーターと木の高さの範囲について、256 ビットと 192 ビットの両方のパラメーター セットで使用されるスペースを示しています。"
    },
    {
      "indent": 7,
      "text": "       +=========+============+==============+==============+\n       | ParmSet | Winternitz | 256-bit hash | 192-bit hash |\n       +=========+============+==============+==============+\n       |    15   |     4      |     2672     |     1624     |\n       +---------+------------+--------------+--------------+\n       |    15   |     8      |     1616     |     1024     |\n       +---------+------------+--------------+--------------+\n       |    20   |     4      |     2832     |     1744     |\n       +---------+------------+--------------+--------------+\n       |    20   |     8      |     1776     |     1144     |\n       +---------+------------+--------------+--------------+\n       |  15/10  |     4      |     5236     |     3172     |\n       +---------+------------+--------------+--------------+\n       |  15/10  |     8      |     3124     |     1972     |\n       +---------+------------+--------------+--------------+\n       |  15/15  |     4      |     5396     |     3292     |\n       +---------+------------+--------------+--------------+\n       |  15/15  |     8      |     3284     |     2092     |\n       +---------+------------+--------------+--------------+\n       |  20/10  |     4      |     5396     |     3292     |\n       +---------+------------+--------------+--------------+\n       |  20/10  |     8      |     3284     |     2092     |\n       +---------+------------+--------------+--------------+\n       |  20/15  |     4      |     5556     |     3412     |\n       +---------+------------+--------------+--------------+\n       |  20/15  |     8      |     3444     |     2212     |\n       +---------+------------+--------------+--------------+\n\n                              Table 3",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ParmSet:",
      "ja": "パラメータセット:"
    },
    {
      "indent": 12,
      "text": "The height of the Merkle tree(s), which is the parameter \"h\" from Table 2. Parameter sets listed as a single integer have L=1 and consist of a single Merkle tree of that height; parameter sets with L=2 are listed as x/y, with x being the height of the top-level Merkle tree and y being the bottom level.",
      "ja": "マークル ツリーの高さ。表 2 のパラメータ「h」です。単一の整数としてリストされているパラメータ セットは L=1 を持ち、その高さの単一のマークル ツリーで構成されます。L=2 のパラメータ セットは x/y としてリストされます。x は最上位のマークル ツリーの高さ、y は最下位レベルです。"
    },
    {
      "indent": 3,
      "text": "Winternitz:",
      "ja": "ウィンターニッツ:"
    },
    {
      "indent": 12,
      "text": "The Winternitz parameter used, which is the parameter \"w\" from Table 1. For the tests that use multiple trees, this applies to all of them.",
      "ja": "使用される Winternitz パラメーター。これは、表 1 のパラメーター「w」です。複数のツリーを使用するテストの場合、これはすべてのツリーに適用されます。"
    },
    {
      "indent": 3,
      "text": "256-bit hash:",
      "ja": "256ビットハッシュ:"
    },
    {
      "indent": 12,
      "text": "The size in bytes of a signature, assuming that a 256-bit hash is used in the signature (either SHA-256 or SHAKE256/256).",
      "ja": "256 ビット ハッシュが署名 (SHA-256 または SHAKE256/256) で使用されると仮定した場合の、署名のバイト単位のサイズ。"
    },
    {
      "indent": 3,
      "text": "192-bit hash:",
      "ja": "192ビットハッシュ:"
    },
    {
      "indent": 12,
      "text": "The size in bytes of a signature, assuming that a 192-bit hash is used in the signature (either SHA-256/192 or SHAKE256/192).",
      "ja": "192 ビット ハッシュが署名 (SHA-256/192 または SHAKE256/192) で使用されると仮定した場合の、署名のバイト単位のサイズ。"
    },
    {
      "indent": 3,
      "text": "An examination of the signature sizes shows that the 192-bit parameters consistently give a 35-40% reduction in the size of the signature in comparison with the 256-bit parameters.",
      "ja": "署名のサイズを調べると、192 ビットのパラメータでは、256 ビットのパラメータと比較して署名のサイズが一貫して 35 ～ 40% 削減されることがわかります。"
    },
    {
      "indent": 3,
      "text": "For SHA-256/192, there is a smaller (circa 20%) reduction in the amount of computation required for a signature operation with a 192-bit hash, because fewer Winternitz chains would need to be computed. The SHAKE256/192 signatures may have either a faster or slower computation, depending on the implementation speed of SHAKE versus SHA-256 hashes.",
      "ja": "SHA-256/192 の場合、計算する必要のある Winternitz チェーンの数が少なくなるため、192 ビット ハッシュでの署名操作に必要な計算量はより小さく (約 20%) 削減されます。SHAKE256/192 署名は、SHAKE ハッシュと SHA-256 ハッシュの実装速度に応じて、計算が高速になる場合もあれば、低速になる場合もあります。"
    },
    {
      "indent": 3,
      "text": "The SHAKE256/256-based parameter sets give no space advantage (or disadvantage) over the existing SHA-256-based parameter sets; any performance delta would depend solely on the implementation and whether they can generate SHAKE hashes faster than SHA-256 ones.",
      "ja": "SHAKE256/256 ベースのパラメータ セットには、既存の SHA-256 ベースのパラメータ セットに比べてスペース上の利点 (または欠点) がありません。パフォーマンスの差は、実装と、SHA-256 ハッシュよりも高速に SHAKE ハッシュを生成できるかどうかのみに依存します。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The strength of a signature that uses the SHA-256/192, SHAKE256/256, and SHAKE256/192 hash functions is based on the difficulty in finding preimages or second preimages to those hash functions. As shown in [Katz16], if we assume that the hash function can be modeled as a random oracle, then the security of the system is at least 8N-1 bits (where N is the size of the hash output in bytes); this gives us a security level of 255 bits for SHAKE256/256 and 191 bits for SHA-256/192 and SHAKE256/192). That is, the strength of SHA-256/192 and SHAKE256/192 can be expected to be equivalent to the strength of AES-192, while the strength of SHAKE256/256 is equivalent to the strength of AES-256. If AES-192 and AES-256 are quantum-resistant, then we expect SHA-256/192, SHAKE256/192, and SHAKE256/256 to also be.",
      "ja": "SHA-256/192、SHAKE256/256、および SHAKE256/192 ハッシュ関数を使用する署名の強度は、それらのハッシュ関数に対するプリイメージまたは 2 番目のプリイメージを見つける難しさに基づいています。[Katz16] に示されているように、ハッシュ関数がランダム オラクルとしてモデル化できると仮定すると、システムのセキュリティは少なくとも 8N-1 ビットになります (N はバイト単位のハッシュ出力のサイズです)。これにより、SHAKE256/256 のセキュリティ レベルは 255 ビット、SHA-256/192 および SHAKE256/192 のセキュリティ レベルは 191 ビットになります)。つまり、SHA-256/192 および SHAKE256/192 の強度は AES-192 の強度と同等であることが期待でき、一方、SHAKE256/256 の強度は AES-256 の強度と同等であると考えられます。AES-192 と AES-256 が量子耐性がある場合、SHA-256/192、SHAKE256/192、および SHAKE256/256 も量子耐性があると予想されます。"
    },
    {
      "indent": 3,
      "text": "If we look at this in a different way, we see that the case of SHAKE256/256 is essentially the same as the existing SHA-256-based signatures; the difficultly of finding preimages and second preimages is essentially the same, and so they have (barring unexpected cryptographical advances) essentially the same level of security.",
      "ja": "これを別の見方で見ると、SHAKE256/256 の場合は既存の SHA-256 ベースの署名と本質的に同じであることがわかります。プリイメージと 2 番目のプリイメージを見つけることの難しさは本質的に同じであるため、(予期しない暗号化の進歩がない限り) 本質的に同じレベルのセキュリティを備えています。"
    },
    {
      "indent": 3,
      "text": "The case of SHA-256/192 and SHAKE256/192 requires closer analysis.",
      "ja": "SHA-256/192 および SHAKE256/192 の場合は、より詳細な分析が必要です。"
    },
    {
      "indent": 3,
      "text": "For a classical (non-quantum) computer, there is no known attack better than performing hashes of a large number of distinct preimages. Therefore, a successful attack has a high probability of requiring nearly 2^192 hash computations (for either SHA-256/192 or SHAKE256/192). These can be taken as the expected work effort and would appear to be completely infeasible in practice.",
      "ja": "古典的な (非量子) コンピューターの場合、多数の個別のプリイメージのハッシュを実行することより優れた攻撃は知られていません。したがって、攻撃が成功すると、ほぼ 2^192 のハッシュ計算 (SHA-256/192 または SHAKE256/192 の場合) が必要になる可能性が高くなります。これらは予想される作業量とみなされる可能性があり、実際には完全に実行不可能であるように見えます。"
    },
    {
      "indent": 3,
      "text": "In theory, an attacker with a quantum computer could use Grover's algorithm [Grover96] to reduce the expected complexity to circa 2^96 hash computations (for N=24). On the other hand, implementing Grover's algorithm with this number of hash computations would require performing circa 2^96 hash computations in succession, which will take more time than is likely to be acceptable to any attacker. To speed this up, the attacker would need to run a number of instances of Grover's algorithm in parallel. This would necessarily increase the total work effort required, and to an extent, that makes it likely infeasible. This is because if we limit the time taken by Grover's algorithm to 2^t steps (for t <= 96), then to attack a hash preimage problem of 192 bits, it requires a total of 2^(192-t) hash computations, rather than the 2^(192/2) hash computations it would require if we did not limit the time taken. In other words, the hash preimage can be found in 2^t steps by using 2^(192-2t) quantum computers (for t <= 96), with one of the quantum computers finding the preimage. For example, if the adversary is willing to wait for 2^64 times the time taken by a hash computation (which is over 50 years if a quantum computer can compute a hash in 0.1 nanoseconds), this implies that a total of 2^(192-64) = 2^128 hash computations will need to be performed, on 2^64 (18 quintillion) separate quantum computers, each of which computes 2^64 hash evaluations.",
      "ja": "理論的には、量子コンピューターを使用する攻撃者は、グローバーのアルゴリズム [Grover96] を使用して、予想される複雑さを約 2^96 ハッシュ計算 (N=24 の場合) に減らすことができます。一方、この数のハッシュ計算でグローバーのアルゴリズムを実装するには、約 2^96 のハッシュ計算を連続して実行する必要があり、攻撃者が許容できる以上に時間がかかります。これを高速化するには、攻撃者はグローバーのアルゴリズムの多数のインスタンスを並行して実行する必要があります。これにより必然的に必要な総作業量が増加するため、ある程度は実行不可能になる可能性があります。これは、Grover のアルゴリズムにかかる時間を 2^t ステップ (t <= 96) に制限すると、192 ビットのハッシュ プリイメージ問題を攻撃するには、かかる時間を制限しなかった場合に必要となる 2^(192/2) 回のハッシュ計算ではなく、合計 2^(192-t) 回のハッシュ計算が必要になるためです。言い換えれば、ハッシュ プリイメージは 2^(192-2t) 量子コンピューター (t <= 96) を使用して 2^t ステップで見つけることができ、量子コンピューターの 1 つがプリイメージを見つけます。たとえば、攻撃者がハッシュ計算にかかる時間の 2^64 倍待つことをいとわない場合 (量子コンピューターが 0.1 ナノ秒でハッシュを計算できる場合、これは 50 年以上に相当します)、これは、2^64 (18 京) 個の個別の量子に対して、合計 2^(192-64) = 2^128 回のハッシュ計算を実行する必要があることを意味します。コンピューター。それぞれが 2^64 ハッシュを計算します\n\n評価。"
    },
    {
      "indent": 3,
      "text": "Hence, we expect that HSS/LMS based on these hash functions is secure against both classical and quantum computers, even though, in both cases, the expected work effort is less (for the N=24 case) than against either SHA-256 or SHAKE256/256.",
      "ja": "したがって、これらのハッシュ関数に基づく HSS/LMS は、古典コンピューターと量子コンピューターの両方に対して安全であると予想されます。ただし、どちらの場合でも、予想される作業量は (N=24 の場合) SHA-256 または SHAKE256/256 よりも少なくなります。"
    },
    {
      "indent": 3,
      "text": "SHA-256 is subject to a length extension attack. In this attack, if the attacker is given the hash value of an unknown message (and the message length), then the attacker can compute the hash of the message appended with certain strings (even though the attacker does not know the contents of the initial part of the modified message). This would appear to be irrelevant to HSS for two reasons:",
      "ja": "SHA-256 は長さ拡張攻撃の対象となります。この攻撃では、攻撃者に未知のメッセージのハッシュ値 (およびメッセージの長さ) が与えられた場合、攻撃者は、(攻撃者が変更されたメッセージの最初の部分の内容を知らなくても) 特定の文字列が追加されたメッセージのハッシュを計算できます。これは、次の 2 つの理由から HSS とは無関係であるように見えます。"
    },
    {
      "indent": 6,
      "text": "* For the initial message hash, the hash is entirely on public data. Hence, this attack is irrelevant, because the attacker could compute the hash of the message with appended data anyways.",
      "ja": "* 最初のメッセージ ハッシュの場合、ハッシュは完全に公開データに基づいています。したがって、攻撃者はいずれにしてもデータが追加されたメッセージのハッシュを計算できるため、この攻撃は無関係です。"
    },
    {
      "indent": 6,
      "text": "* The rest of the hashes within HSS are fixed length. Hence, there is no opportunity to perform length extension attacks.",
      "ja": "* HSS 内の残りのハッシュは固定長です。したがって、長さ拡張攻撃を実行する機会はありません。"
    },
    {
      "indent": 3,
      "text": "In addition, to perform a length extension attack on SHA-256/192, the attacker has to guess the 64 omitted bits (because the attack requires all 256 bits of the hash value); hence, that is even less of a concern than it is for the standard SHA-256.",
      "ja": "さらに、SHA-256/192 に対して長さ拡張攻撃を実行するには、攻撃者は省略された 64 ビットを推測する必要があります (攻撃にはハッシュ値の 256 ビットすべてが必要であるため)。したがって、標準の SHA-256 よりもそれほど心配はありません。"
    },
    {
      "indent": 3,
      "text": "There is one corner case for which the security strength is reduced: if we need to assume that the signer will never deliberately generate a signature that is valid for two different messages. HSS uses randomized hashing when signing a message. That is, when a message is being presented to be signed, the signer generates a random value C and includes that in what is prepended to the message. Because the attacker cannot predict this value, it is infeasible for anyone other than the signer to find a generic collision. That is, practically speaking, a signature that is valid for two colliding messages is feasible only if the signer signed both messages. For this to happen, a signer (that is, the one with the private key and who picks the random C value) would have to break the collision resistance of the hash function to generate those two colliding messages. Note that this does not apply to someone who submits the messages for signing; only the signer could perform this. This would result in a signature that would be valid for two different selected messages. This is a nonstandard assumption for signature schemes and is usually not a concern, as we assume that the signer is trusted to generate signatures for any message. However, if the application needs to assume that it is infeasible for the signer to generate such a signature, then the security strength assumptions are reduced (128 bits for SHAKE256/256 and 96 bits for SHA-256/192 and SHAKE256/192).",
      "ja": "セキュリティ強度が低下する特殊なケースが 1 つあります。それは、署名者が 2 つの異なるメッセージに対して有効な署名を意図的に生成しないと仮定する必要がある場合です。HSS は、メッセージに署名するときにランダム化されたハッシュを使用します。つまり、メッセージが署名のために提示されるときに、署名者はランダムな値 C を生成し、それをメッセージの先頭に追加するものに含めます。攻撃者はこの値を予測できないため、署名者以外の者が一般的な衝突を見つけることは不可能です。つまり、実際には、衝突する 2 つのメッセージに対して有効な署名は、署名者が両方のメッセージに署名した場合にのみ実現可能です。これを実現するには、署名者 (つまり、秘密鍵を持ち、ランダムな C 値を選択する署名者) がハッシュ関数の衝突耐性を破って、これら 2 つの衝突するメッセージを生成する必要があります。これは、署名のためにメッセージを送信する人には適用されないことに注意してください。これを実行できるのは署名者だけです。これにより、選択された 2 つの異なるメッセージに対して有効な署名が得られます。これは署名スキームの非標準的な仮定であり、署名者があらゆるメッセージの署名を生成することが信頼されていると仮定しているため、通常は問題になりません。ただし、署名者がそのような署名を生成することは実行不可能であるとアプリケーションが仮定する必要がある場合、セキュリティ強度の仮定は減らされます (SHAKE256/256 の場合は 128 ビット、SHA-256/192 および SHAKE256/192 の場合は 96 ビット)。"
    },
    {
      "indent": 3,
      "text": "Some cryptographers have raised the possibility of a multi-target attack (where the attacker has signatures from a large number of public keys and succeeds if they can generate a forgery against any one of those public keys). While no such method of attack has been proposed, the possibility cannot be excluded; if there are a large number of public keys, it might be prudent to consider the possibility of some security loss with N=24. If there are 2^K public keys, this security loss cannot be more than K bits of security.",
      "ja": "一部の暗号学者は、マルチターゲット攻撃（攻撃者が多数の公開鍵からの署名を持っており、それらの公開鍵のいずれかに対する偽造を生成できれば成功する）の可能性を提起しています。そのような攻撃方法は提案されていませんが、可能性は排除できません。多数の公開キーがある場合、N=24 でセキュリティがある程度失われる可能性を考慮することが賢明かもしれません。2^K 個の公開キーがある場合、このセキュリティ損失は K ビットのセキュリティを超えることはできません。"
    },
    {
      "indent": 0,
      "text": "8.1. Note on the Version of SHAKE",
      "section_title": true,
      "ja": "8.1. SHAKEのバージョンについてのご注意"
    },
    {
      "indent": 3,
      "text": "[FIPS202] defines both SHAKE128 and SHAKE256. This specification selects SHAKE256, even though it is less efficient for large messages. The reason is that SHAKE128 has a low upper bound on the difficulty of finding preimages (due to the invertibility of its internal permutation), which would limit the strength of HSS/LMS (whose strength is based on the difficulty of finding preimages). Hence, we specify the use of SHAKE256, which has a considerably stronger preimage resistance.",
      "ja": "[FIPS202] は SHAKE128 と SHAKE256 の両方を定義しています。この仕様では、大きなメッセージの場合は効率が低くなりますが、SHAKE256 が選択されます。その理由は、SHAKE128 には (内部順列の可逆性により) プリイメージを見つける難易度の上限が低く、HSS/LMS の強度 (その強度はプリイメージを見つける難易度に基づいています) が制限されるためです。したがって、プリイメージ耐性がかなり強い SHAKE256 の使用を指定します。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has assigned the code points for the parameter sets in Section 3 in the \"LM-OTS Signatures\" registry and the parameter sets in Section 4 in the \"Leighton-Micali Signatures (LMS)\" registry. These assignments are included in [NIST_SP_800-208], but the IANA registrations only reference this document.",
      "ja": "IANA は、「LM-OTS Signatures」レジストリのセクション 3 のパラメータ セットと、「Leighton-Micali Signatures (LMS)」レジストリのセクション 4 のパラメータ セットのコード ポイントを割り当てました。これらの割り当ては [NIST_SP_800-208] に含まれていますが、IANA 登録はこの文書のみを参照しています。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[FIPS180]  NIST, \"Secure Hash Standard\", NIST FIPS 180-4,\n           DOI 10.6028/NIST.FIPS.180-4, August 2015,\n           <https://nvlpubs.nist.gov/nistpubs/FIPS/\n           NIST.FIPS.180-4.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[FIPS202]  NIST, \"SHA-3 Standard: Permutation-Based Hash and\n           Extendable-Output Functions\", NIST FIPS 202,\n           DOI 10.6028/NIST.FIPS.202, August 2015,\n           <https://nvlpubs.nist.gov/nistpubs/FIPS/\n           NIST.FIPS.202.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8554]  McGrew, D., Curcio, M., and S. Fluhrer, \"Leighton-Micali\n           Hash-Based Signatures\", RFC 8554, DOI 10.17487/RFC8554,\n           April 2019, <https://www.rfc-editor.org/info/rfc8554>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[Grover96] Grover, L., \"A fast quantum mechanical algorithm for\n           database search\", Proceedings of the twenty-eighth annual\n           ACM symposium on Theory of Computing (STOC '96), pp.\n           212-219, DOI 10.1145/237814.237866, July 1996,\n           <https://doi.org/10.1145/237814.237866>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[Katz16]   Katz, J., \"Analysis of a Proposed Hash-Based Signature\n           Standard\", Security Standardisation Research (SSR 2016),\n           Lecture Notes in Computer Science, vol. 10074, pp.\n           261-273, DOI 10.1007/978-3-319-49100-4_12, 2016,\n           <https://doi.org/10.1007/978-3-319-49100-4_12>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[NIST_SP_800-208]\n           Cooper, D., Apon, D., Dang, Q., Davidson, M., Dworkin, M.,\n           and C. Miller, \"Recommendation for Stateful Hash-Based\n           Signature Schemes\", National Institute of Standards and\n           Technology, NIST SP 800-208, DOI 10.6028/NIST.SP.800-208,\n           October 2020, <https://doi.org/10.6028/NIST.SP.800-208>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix A. Test Cases",
      "section_title": true,
      "ja": "付録A. テストケース"
    },
    {
      "indent": 3,
      "text": "This appendix provides four test cases that can be used to verify or debug an implementation. This data is formatted with the name of the elements on the left and the value of the elements on the right, in hexadecimal. The concatenation of all of the values within a public key or signature produces that public key or signature, and values that do not fit within a single line are listed across successive lines.",
      "ja": "この付録では、実装の検証またはデバッグに使用できる 4 つのテスト ケースを提供します。このデータは、左側に要素の名前、右側に要素の値を 16 進数で表示してフォーマットされています。公開キーまたは署名内のすべての値を連結すると、その公開キーまたは署名が生成され、1 行に収まらない値は連続した行にリストされます。"
    },
    {
      "indent": 0,
      "text": "A.1. Test Case 1 - SHA-256/192",
      "section_title": true,
      "ja": "A.1. テストケース 1 - SHA-256/192"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\n(note: procedure in Appendix A of [RFC8554] is used)\nSEED        000102030405060708090a0b0c0d0e0f\n            1011121314151617\nI           202122232425262728292a2b2c2d2e2f\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 1: Private Key for SHA-256/192",
      "ja": "図 1: SHA-256/192 の秘密キー"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nHSS public key\nlevels      00000001\n--------------------------------------------\nLMS type    0000000a                         # LMS_SHA256_M24_H5\nLM-OTS type 00000008                         # LMOTS_SHA256_N24_W8\nI           202122232425262728292a2b2c2d2e2f\nK           2c571450aed99cfb4f4ac285da148827\n            96618314508b12d2\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 2: Public Key for SHA-256/192",
      "ja": "図 2: SHA-256/192 の公開キー"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nMessage     54657374206d65737361676520666f72  |Test message for|\n            205348413235362d3139320a          | SHA-256/192.|\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Figure 3: Message for SHA-256/192",
      "ja": "図 3: SHA-256/192 のメッセージ"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nHSS signature\nNspk        00000000\nsig[0]:\n--------------------------------------------\nLMS signature\nq           00000005\n--------------------------------------------\nLM-OTS signature\nLM-OTS type 00000008                         # LMOTS_SHA256_N24_W8\nC           0b5040a18c1b5cabcbc85b047402ec62\n            94a30dd8da8fc3da\ny[0]        e13b9f0875f09361dc77fcc4481ea463\n            c073716249719193\ny[1]        614b835b4694c059f12d3aedd34f3db9\n            3f3580fb88743b8b\ny[2]        3d0648c0537b7a50e433d7ea9d6672ff\n            fc5f42770feab4f9\ny[3]        8eb3f3b23fd2061e4d0b38f832860ae7\n            6673ad1a1a52a900\ny[4]        5dcf1bfb56fe16ff723627612f9a48f7\n            90f3c47a67f870b8\ny[5]        1e919d99919c8db48168838cece0abfb\n            683da48b9209868b\ny[6]        e8ec10c63d8bf80d36498dfc205dc45d\n            0dd870572d6d8f1d\ny[7]        90177cf5137b8bbf7bcb67a46f86f26c\n            fa5a44cbcaa4e18d\ny[8]        a099a98b0b3f96d5ac8ac375d8da2a7c\n            248004ba11d7ac77\ny[9]        5b9218359cddab4cf8ccc6d54cb7e1b3\n            5a36ddc9265c0870\ny[10]       63d2fc6742a7177876476a324b03295b\n            fed99f2eaf1f3897\ny[11]       0583c1b2b616aad0f31cd7a4b1bb0a51\n            e477e94a01bbb4d6\ny[12]       f8866e2528a159df3d6ce244d2b6518d\n            1f0212285a3c2d4a\ny[13]       927054a1e1620b5b02aab0c8c10ed48a\n            e518ea73cba81fcf\ny[14]       ff88bff461dac51e7ab4ca75f47a6259\n            d24820b9995792d1\ny[15]       39f61ae2a8186ae4e3c9bfe0af2cc717\n            f424f41aa67f03fa\ny[16]       edb0665115f2067a46843a4cbbd297d5\n            e83bc1aafc18d1d0\ny[17]       3b3d894e8595a6526073f02ab0f08b99\n            fd9eb208b59ff631\ny[18]       7e5545e6f9ad5f9c183abd043d5acd6e\n            b2dd4da3f02dbc31\ny[19]       67b468720a4b8b92ddfe7960998bb7a0\n            ecf2a26a37598299\ny[20]       413f7b2aecd39a30cec527b4d9710c44\n            73639022451f50d0\ny[21]       1c0457125da0fa4429c07dad859c846c\n            bbd93ab5b91b01bc\ny[22]       770b089cfede6f651e86dd7c15989c8b\n            5321dea9ca608c71\ny[23]       fd862323072b827cee7a7e28e4e2b999\n            647233c3456944bb\ny[24]       7aef9187c96b3f5b79fb98bc76c3574d\n            d06f0e95685e5b3a\ny[25]       ef3a54c4155fe3ad817749629c30adbe\n            897c4f4454c86c49\n--------------------------------------------\nLMS type    0000000a                         # LMS_SHA256_M24_H5\npath[0]     e9ca10eaa811b22ae07fb195e3590a33\n            4ea64209942fbae3\npath[1]     38d19f152182c807d3c40b189d3fcbea\n            942f44682439b191\npath[2]     332d33ae0b761a2a8f984b56b2ac2fd4\n            ab08223a69ed1f77\npath[3]     19c7aa7e9eee96504b0e60c6bb5c942d\n            695f0493eb25f80a\npath[4]     5871cffd131d0e04ffe5065bc7875e82\n            d34b40b69dd9f3c1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 4: Signature for SHA-256/192",
      "ja": "図 4: SHA-256/192 の署名"
    },
    {
      "indent": 0,
      "text": "A.2. Test Vector for SHAKE256/192",
      "section_title": true,
      "ja": "A.2. SHAKE256/192のテストベクター"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\n(note: procedure in Appendix A of [RFC8554] is used)\nSEED        303132333435363738393a3b3c3d3e3f\n            4041424344454647\nI           505152535455565758595a5b5c5d5e5f\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 5: Private Key for SHAKE256/192",
      "ja": "図 5: SHAKE256/192 の秘密鍵"
    },
    {
      "indent": 3,
      "text": "---------------------------------------------\nHSS public key\nlevels      00000001\n--------------------------------------------\nLMS type    00000014                         # LMS_SHAKE_N24_H5\nLM-OTS type 00000010                         # LMOTS_SHAKE_N24_W8\nI           505152535455565758595a5b5c5d5e5f\nK           db54a4509901051c01e26d9990e55034\n            7986da87924ff0b1\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 6: Public Key for SHAKE256/192",
      "ja": "図 6: SHAKE256/192 の公開鍵"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nMessage     54657374206d65737361676520666f72  |Test message for|\n            205348414b453235362d3139320a      | SHAKE256/192.|\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Figure 7: Message for SHAKE256/192",
      "ja": "図 7: SHAKE256/192 のメッセージ"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nHSS signature\nNspk        00000000\nsig[0]:\n--------------------------------------------\nLMS signature\nq           00000006\n--------------------------------------------\nLM-OTS signature\nLM-OTS type 00000010                         # LMOTS_SHAKE_N24_W8\nC           84219da9ce9fffb16edb94527c6d1056\n            5587db28062deac4\ny[0]        208e62fc4fbe9d85deb3c6bd2c01640a\n            ccb387d8a6093d68\ny[1]        511234a6a1a50108091c034cb1777e02\n            b5df466149a66969\ny[2]        a498e4200c0a0c1bf5d100cdb97d2dd4\n            0efd3cada278acc5\ny[3]        a570071a043956112c6deebd1eb3a7b5\n            6f5f6791515a7b5f\ny[4]        fddb0ec2d9094bfbc889ea15c3c7b9be\n            a953efb75ed648f5\ny[5]        35b9acab66a2e9631e426e4e99b733ca\n            a6c55963929b77fe\ny[6]        c54a7e703d8162e736875cb6a455d4a9\n            015c7a6d8fd5fe75\ny[7]        e402b47036dc3770f4a1dd0a559cb478\n            c7fb1726005321be\ny[8]        9d1ac2de94d731ee4ca79cff454c811f\n            46d11980909f047b\ny[9]        2005e84b6e15378446b1ca691efe491e\n            a98acc9d3c0f785c\ny[10]       aba5e2eb3c306811c240ba2280292382\n            7d582639304a1e97\ny[11]       83ba5bc9d69d999a7db8f749770c3c04\n            a152856dc726d806\ny[12]       7921465b61b3f847b13b2635a45379e5\n            adc6ff58a99b00e6\ny[13]       0ac767f7f30175f9f7a140257e218be3\n            07954b1250c9b419\ny[14]       02c4fa7c90d8a592945c66e86a76defc\n            b84500b55598a199\ny[15]       0faaa10077c74c94895731585c8f900d\n            e1a1c675bd8b0c18\ny[16]       0ebe2b5eb3ef8019ece3e1ea7223eb79\n            06a2042b6262b4aa\ny[17]       25c4b8a05f205c8befeef11ceff12825\n            08d71bc2a8cfa0a9\ny[18]       9f73f3e3a74bb4b3c0d8ca2abd0e1c2c\n            17dafe18b4ee2298\ny[19]       e87bcfb1305b3c069e6d385569a4067e\n            d547486dd1a50d6f\ny[20]       4a58aab96e2fa883a9a39e1bd45541ee\n            e94efc32faa9a94b\ny[21]       e66dc8538b2dab05aee5efa6b3b2efb3\n            fd020fe789477a93\ny[22]       afff9a3e636dbba864a5bffa3e28d13d\n            49bb597d94865bde\ny[23]       88c4627f206ab2b465084d6b780666e9\n            52f8710efd748bd0\ny[24]       f1ae8f1035087f5028f14affcc5fffe3\n            32121ae4f87ac5f1\ny[25]       eac9062608c7d87708f1723f38b23237\n            a4edf4b49a5cd3d7\n--------------------------------------------\nLMS type    00000014                         # LMS_SHAKE_N24_H5\npath[0]     dd4bdc8f928fb526f6fb7cdb944a7eba\n            a7fb05d995b5721a\npath[1]     27096a5007d82f79d063acd434a04e97\n            f61552f7f81a9317\npath[2]     b4ec7c87a5ed10c881928fc6ebce6dfc\n            e9daae9cc9dba690\npath[3]     7ca9a9dd5f9f573704d5e6cf22a43b04\n            e64c1ffc7e1c442e\npath[4]     cb495ba265f465c56291a902e62a461f\n            6dfda232457fad14",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 8: Signature for SHAKE256/192",
      "ja": "図 8: SHAKE256/192 の署名"
    },
    {
      "indent": 0,
      "text": "A.3. Test Vector for SHA-256/256",
      "section_title": true,
      "ja": "A.3. SHA-256/256 のテスト ベクトル"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\n(note: procedure in Appendix A of [RFC8554] is used)\nSEED        606162636465666768696a6b6c6d6e6f\n            707172737475767778797a7b7c7d7e7f\nI           808182838485868788898a8b8c8d8e8f\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 9: Private Key for SHAKE256/256",
      "ja": "図 9: SHAKE256/256 の秘密鍵"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nHSS public key\nlevels      00000001\n--------------------------------------------\nLMS type    0000000f                         # LMS_SHAKE_N32_H5\nLM-OTS type 0000000c                         # LMOTS_SHAKE_N32_W8\nI           808182838485868788898a8b8c8d8e8f\nK           9bb7faee411cae806c16a466c3191a8b\n            65d0ac31932bbf0c2d07c7a4a36379fe\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 10: Public Key for SHAKE256/256",
      "ja": "図 10: SHAKE256/256 の公開鍵"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nMessage     54657374206d657361676520666f7220  |Test message for|\n            5348414b453235362d3235360a        |SHAKE256/256.|\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 11: Message for SHAKE256/256",
      "ja": "図 11: SHAKE256/256 のメッセージ"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nHSS signature\nNspk        00000000\nsig[0]:\n--------------------------------------------\nLMS signature\nq           00000007\n--------------------------------------------\nLM-OTS signature\nLM-OTS type 0000000c                         # LMOTS_SHAKE_N32_W8\nC           b82709f0f00e83759190996233d1ee4f\n            4ec50534473c02ffa145e8ca2874e32b\ny[0]        16b228118c62b96c9c77678b33183730\n            debaade8fe607f05c6697bc971519a34\ny[1]        1d69c00129680b67e75b3bd7d8aa5c8b\n            71f02669d177a2a0eea896dcd1660f16\ny[2]        864b302ff321f9c4b8354408d0676050\n            4f768ebd4e545a9b0ac058c575078e6c\ny[3]        1403160fb45450d61a9c8c81f6bd69bd\n            fa26a16e12a265baf79e9e233eb71af6\ny[4]        34ecc66dc88e10c6e0142942d4843f70\n            a0242727bc5a2aabf7b0ec12a99090d8\ny[5]        caeef21303f8ac58b9f200371dc9e41a\n            b956e1a3efed9d4bbb38975b46c28d5f\ny[6]        5b3ed19d847bd0a737177263cbc1a226\n            2d40e80815ee149b6cce2714384c9b7f\ny[7]        ceb3bbcbd25228dda8306536376f8793\n            ecadd6020265dab9075f64c773ef97d0\ny[8]        7352919995b74404cc69a6f3b469445c\n            9286a6b2c9f6dc839be76618f053de76\ny[9]        3da3571ef70f805c9cc54b8e501a98b9\n            8c70785eeb61737eced78b0e380ded4f\ny[10]       769a9d422786def59700eef3278017ba\n            bbe5f9063b468ae0dd61d94f9f99d5cc\ny[11]       36fbec4178d2bda3ad31e1644a2bcce2\n            08d72d50a7637851aa908b94dc437612\ny[12]       0d5beab0fb805e1945c41834dd6085e6\n            db1a3aa78fcb59f62bde68236a10618c\ny[13]       ff123abe64dae8dabb2e84ca705309c2\n            ab986d4f8326ba0642272cb3904eb96f\ny[14]       6f5e3bb8813997881b6a33cac0714e4b\n            5e7a882ad87e141931f97d612b84e903\ny[15]       e773139ae377f5ba19ac86198d485fca\n            97742568f6ff758120a89bf19059b8a6\ny[16]       bfe2d86b12778164436ab2659ba86676\n            7fcc435584125fb7924201ee67b535da\ny[17]       f72c5cb31f5a0b1d926324c26e67d4c3\n            836e301aa09bae8fb3f91f1622b1818c\ny[18]       cf440f52ca9b5b9b99aba8a6754aae2b\n            967c4954fa85298ad9b1e74f27a46127\ny[19]       c36131c8991f0cc2ba57a15d35c91cf8\n            bc48e8e20d625af4e85d8f9402ec44af\ny[20]       bd4792b924b839332a64788a7701a300\n            94b9ec4b9f4b648f168bf457fbb3c959\ny[21]       4fa87920b645e42aa2fecc9e21e000ca\n            7d3ff914e15c40a8bc533129a7fd3952\ny[22]       9376430f355aaf96a0a13d13f2419141\n            b3cc25843e8c90d0e551a355dd90ad77\ny[23]       0ea7255214ce11238605de2f000d2001\n            04d0c3a3e35ae64ea10a3eff37ac7e95\ny[24]       49217cdf52f307172e2f6c7a2a4543e1\n            4314036525b1ad53eeaddf0e24b1f369\ny[25]       14ed22483f2889f61e62b6fb78f5645b\n            dbb02c9e5bf97db7a0004e87c2a55399\ny[26]       b61958786c97bd52fa199c27f6bb4d68\n            c4907933562755bfec5d4fb52f06c289\ny[27]       d6e852cf6bc773ffd4c07ee2d6cc55f5\n            7edcfbc8e8692a49ad47a121fe3c1b16\ny[28]       cab1cc285faf6793ffad7a8c341a49c5\n            d2dce7069e464cb90a00b2903648b23c\ny[29]       81a68e21d748a7e7b1df8a593f3894b2\n            477e8316947ca725d141135202a9442e\ny[30]       1db33bbd390d2c04401c39b253b78ce2\n            97b0e14755e46ec08a146d279c67af70\ny[31]       de256890804d83d6ec5ca3286f1fca9c\n            72abf6ef868e7f6eb0fddda1b040ecec\ny[32]       9bbc69e2fd8618e9db3bdb0af13dda06\n            c6617e95afa522d6a2552de15324d991\ny[33]       19f55e9af11ae3d5614b564c642dbfec\n            6c644198ce80d2433ac8ee738f9d825e\n--------------------------------------------\nLMS type    0000000f                         # LMS_SHAKE_N32_H5\npath[0]     71d585a35c3a908379f4072d070311db\n            5d65b242b714bc5a756ba5e228abfa0d\npath[1]     1329978a05d5e815cf4d74c1e547ec4a\n            a3ca956ae927df8b29fb9fab3917a7a4\npath[2]     ae61ba57e5342e9db12caf6f6dbc5253\n            de5268d4b0c4ce4ebe6852f012b162fc\npath[3]     1c12b9ffc3bcb1d3ac8589777655e22c\n            d9b99ff1e4346fd0efeaa1da044692e7\npath[4]     ad6bfc337db69849e54411df8920c228\n            a2b7762c11e4b1c49efb74486d3931ea",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 12: Signature for SHAKE256/256",
      "ja": "図 12: SHAKE256/256 の署名"
    },
    {
      "indent": 0,
      "text": "A.4. Test Vector for SHA-256/192, W=4",
      "section_title": true,
      "ja": "A.4. SHA-256/192 のテスト ベクトル、W=4"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\n(note: procedure in Appendix A of [RFC8554] is used)\nSEED        202122232425262728292a2b2c2d2e2f\n            3031323334353637\nI           404142434445464748494a4b4c4d4e4f\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 13: Private Key for SHA256/192 with W=4",
      "ja": "図 13: W=4 の SHA256/192 の秘密鍵"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nHSS public key\nlevels      00000001\n--------------------------------------------\nLMS type    0000000d                         # LMS_SHA256_M24_H20\nLM-OTS type 00000007                         # LMOTS_SHA256_N24_W4\nI           404142434445464748494a4b4c4d4e4f\nK           9c08a50d170406869892802ee4142fcd\n            eac990f110c2460c\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 14: Public Key for SHA256/192 with W=4",
      "ja": "図 14: W=4 の SHA256/192 の公開鍵"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nMessage     54657374206d65737361676520666f72  |Test message for|\n            205348413235362f31393220773d34    | SHA256/192 w=4|\n--------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 15: Message for SHA256/192 with W=4",
      "ja": "図 15: W=4 の SHA256/192 のメッセージ"
    },
    {
      "indent": 3,
      "text": "--------------------------------------------\nHSS signature\nNspk        00000000\nsig[0]:\n--------------------------------------------\nLMS signature\nq           00000064\n--------------------------------------------\nLM-OTS signature\nLM-OTS type 00000007                         # LMOTS_SHA256_N24_W4\nC          853fa6e1a65fef076acd2485505b93be\n           9aeb2641e3d3805c\ny[0]       1887f26f4bcdb6ac0337b76fa5d66038\n           34287e010b20516f\ny[1]       7c336df2134c0a981f1ec2bb7baee516\n           e91e67d3bd16c8d9\ny[2]       45a7f2be4fd84a604ae3743efc609ee0\n           e69572e9c6d4a682\ny[3]       50e877b75d3cae63e9d5c15a32bb3cd1\n           7045f6b3e195284f\ny[4]       dd1ee3cfbe18f1cbd06ef3e7af34b184\n           4d42dac453115a45\ny[5]       07ed525cec120d054b403c61a7e5034f\n           ac4be6ef5412d194\ny[6]       d4b6bbc0ae6cd3fe9993d583ee06f403\n           0bc832efec24d1f7\ny[7]       13f5088731b91a98491fa3adf1b322bc\n           e26df24c8415e3a4\ny[8]       6bdfe07a6fd48e6d951515758cd64349\n           91098bf6949249fc\ny[9]       a338ec235871dd564998d07d9b1b1b8d\n           644e657fee8039da\ny[10]      8fe195d129faddb12d543b86b0ab8cf6\n           f26c121783f3b828\ny[11]      d03f793b42909272f688e4ef6d46e82b\n           dd1a02b1ff86c3b7\ny[12]      9920b2e6f19faf75c623242f1f2c549f\n           84fb2f4c3ffead31\ny[13]      20d97baea507467bb2da79f132bbe15b\n           596fdfcb70983107\ny[14]      ebca2597de9d55bd83bcae5c28a85259\n           dadb354859986e60\ny[15]      c8afa0b10bd08a8f9ed9b1ede3377075\n           fe0ae36349f7d2ed\ny[16]      7bfc9ece0d4cd6972059329419feaf3b\n           9a1045b6cfa4ae89\ny[17]      b1cea8950aea4af870d1a3a3909ebc5a\n           3013d6deb927abc0\ny[18]      f95093e83cb36a9c1d6f13add19268ac\n           7a0371f8335b0952\ny[19]      a57fdb0141d55d937dd6ebb08fee8a5c\n           f426ac97d54ee7aa\ny[20]      17e6c57be5e62a52a6b1b986730d3a3a\n           ad8a7d327ddf883e\ny[21]      6bc7b636eb2a5c4f2a635ae5bada5418\n           d43dfedb69c0a020\ny[22]      9334fac89d420d6ad5a2e1df95d26a1b\n           feb99a5e8455061b\ny[23]      fdf2d6e8394caf8a4be699b8afa38e52\n           4d4053330af478f8\ny[24]      5bf33d3ca3a35bc96987282bd513a8f6\n           a52db9ba36aa9088\ny[25]      2b3bf573fa275449d8d49eb30bed2bb1\n           7a0ecc7d8a20807f\ny[26]      2ea3dd37acd46c713cc2ac9d01a20a30\n           d6832eef86a1e26d\ny[27]      1cad7761bf4130a6565572766026509d\n           eeddaf46b605452b\ny[28]      218a4e137a7ce063b546a35c52510f0e\n           a2cac879192ec443\ny[29]      e43b37c5ffa23da7a7fc254324a3de70\n           5c771794f10ea356\ny[30]      e5a747e5146fd804a47719803c185b38\n           0e34b8dcc8269c2b\ny[31]      073d86b2307cf90c6c3ef9271f2d53df\n           2579f0c4cfb632db\ny[32]      37a9025965f70b4616673228e98644be\n           6576417b7a97f104\ny[33]      350259e7f697408cdf8cf81a3e774162\n           6ccdb87ad8531264\ny[34]      cb5ceb7c8c097cec505091a3ee3a826c\n           54f78169abc2e7d0\ny[35]      a318dac10250ba940e51e79a3f572fb3\n           2bf442be6fd81267\ny[36]      946e6387f9a8c705d945c653f2684655\n           e3fa6b9ee311d8a0\ny[37]      91bef9898292fa272fb8761f066c23d8\n           7aa10d67871cc541\ny[38]      9c843b796855c51ad1272e9264acd203\n           5a82b12c2ddbc85a\ny[39]      dfcd7c22366a36495349391dbf000106\n           4b8f6b28365445d7\ny[40]      33e48f1b058a6cb3e71bbb8df3e90406\n           299894f4ca682943\ny[41]      ceeba410b33b07716ffc18d6eab75f2d\n           6372f1133605fa3c\ny[42]      3ed66f2d8f7c5abe59e87d4500965e34\n           7523d73cb356c144\ny[43]      827aaa22b1c72a15293c7400e02aaefc\n           f36f68a8246900e6\ny[44]      e6228e7ad19d1450c23434f1e45043dc\n           2b6db57f20d8f5b3\ny[45]      44d4162aa651333287cd8bf8fac41c78\n           d61fe2929209bfe2\ny[46]      dc5a2f80205c043b22e540a29f0ea0a5\n           ff529e55bf1dfe42\ny[47]      96fc4bb4ac2e875322ab115db479fe97\n           9d64f78409af4ec3\ny[48]      ad3b758fff83af1b9c48e90ca39366f4\n           26c2fb921df55c72\ny[49]      786a9217723945a1ac1a66af7def4f8b\n           367001732cce0e5b\ny[50]      ac91ac9d603807f8bab105b46d315d4c\n           b88feb1c8686884b\n--------------------------------------------\nLMS type    0000000d                         # LMS_SHA256_M24_H20\npath[0]    13d1a8ef00c5811c15c4d774fdcf7515\n           5315aff53ebdff8f\npath[1]    b6a54f12c165963dd5690cc9842b0e21\n           90afc5443497584c\npath[2]    832155599d00aced84bb3b59170396f7\n           db4fa84aa8577f76\npath[3]    cf9367d6e99d3d5be3555d7156b004f2\n           002f505681b1ad22\npath[4]    9b9b46a666672aa8ee662c3a0456a9ad\n           da7a44fbaca46789\npath[5]    577dcd36dc5cdff34b864d0a32492a0a\n           cbcaa6c011748f20\npath[6]    5b91ab2ab84f2333fb3e3b9acaecdac3\n           8b58aa5f32e718e2\npath[7]    25631ed6674cccb8c119acbd4992ab31\n           30a6e912deec5983\npath[8]    5ab52fbc549430f8b403e4a2a51cc7f4\n           6fc143d365763aa1\npath[9]    708fd25bcd657a790e54718d97090624\n           2a3b8a97dff18e91\npath[10]   a44c4ba818a8dd2d242251265b023b82\n           6077eb740f6682e6\npath[11]   c4ada2b85a67988d406132c2ad899099\n           e44cfe610c3a5af7\npath[12]   0b406224411a59597e5dda0f31cd16c9\n           14b67e96141661f0\npath[13]   074f43eb02273481bc324ded26c64f23\n           88559d8c8bd0ef8b\npath[14]   34ca4afebfac2a689b4246c264241488\n           dcf922350dc44f7b\npath[15]   c09d57dc1126291b2318810e0f44801c\n           071e572fd032c780\npath[16]   f44c9503a4c03c37417dc96422ba0849\n           c37956f9fd5d33ea\npath[17]   4fcab84276effec652ca77d7d47ac93c\n           633d99e0a236f03d\npath[18]   5587d1990ffaef737fced1f5cdd8f373\n           844e9f316aad41a0\npath[19]   b12302639f83a2d74c9fe30d305a942b\n           c0c30352a5e44dfb",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 16: Signature for SHA256/192 with W=4",
      "ja": "図 16: W=4 の SHA256/192 の署名"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "section_title": true,
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "We would like to thank Carsten Bormann, Russ Housley, Andrey Jivsov, Mallory Knodel, Virendra Kumar, Thomas Pornin, and Stanislav Smyshlyaev for their insightful and helpful reviews.",
      "ja": "洞察力に富んだ有益なレビューをくださった Carsten Bormann、Russ Housley、Andrey Jivsov、Mallory Knodel、Virendra Kumar、Thomas Portin、Stanislav Smyshlyaev に感謝します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "section_title": true,
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Scott Fluhrer\nCisco Systems\n170 West Tasman Drive\nSan Jose, CA\nUnited States of America\nEmail: sfluhrer@cisco.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Quynh Dang\nNIST\n100 Bureau Drive\nGaithersburg, MD\nUnited States of America\nEmail: quynh.dang@nist.gov",
      "raw": true,
      "ja": ""
    }
  ]
}